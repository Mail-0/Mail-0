This file is a merged representation of the entire codebase, combined into a single document by Repomix.

================================================================
File Summary
================================================================

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Multiple file entries, each consisting of:
  a. A separator line (================)
  b. The file path (File: path/to/file)
  c. Another separator line
  d. The full contents of the file
  e. A blank line

Usage Guidelines:
-----------------
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.

Notes:
------
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded

Additional Info:
----------------

================================================================
Directory Structure
================================================================
.devcontainer/
  devcontainer.json
  Dockerfile
.github/
  ISSUE_TEMPLATE/
    bug_report.yml
  workflows/
    ci.yaml
  CONTRIBUTING.md
  PULL_REQUEST_TEMPLATE.md
.husky/
  pre-commit
actions/
  extractText.ts
  mail.ts
  send.ts
app/
  (auth)/
    login/
      page.tsx
    signup/
      verify/
        page.tsx
      page.tsx
  (error)/
    not-found.tsx
  (full-width)/
    connect-emails/
      page.tsx
    contributors/
      page.tsx
    privacy/
      page.tsx
    terms/
      page.tsx
    layout.tsx
  (routes)/
    .well-known/
      microsoft-identity-association/
        route.ts
      microsoft-identity-association.json/
        route.ts
    developer/
      page.tsx
    mail/
      [folder]/
        page.tsx
      under-construction/
        [path]/
          back-button.tsx
          page.tsx
      layout.tsx
    settings/
      [...settings]/
        page.tsx
      appearance/
        page.tsx
      connections/
        page.tsx
      general/
        page.tsx
      notifications/
        page.tsx
      security/
        page.tsx
      shortcuts/
        page.tsx
      layout.tsx
    layout.tsx
  api/
    auth/
      [...all]/
        route.ts
      early-access/
        route.ts
    v1/
      mail/
        auth/
          [providerId]/
            callback/
              route.ts
            init/
              route.ts
        connections/
          [connectionId]/
            route.ts
          route.ts
    driver.ts
  error.tsx
  globals.css
  layout.tsx
  not-found.tsx
  page.tsx
components/
  context/
    command-palette-context.tsx
    sidebar-context.tsx
  draft/
    draftHooks/
      useDrafts.ts
    draft.tsx
  home/
    hero-image.tsx
    hero.tsx
    navbar.tsx
  icons/
    animated/
      align-vertical.tsx
      archive.tsx
      bell.tsx
      book-text.tsx
      cart.tsx
      check-check.tsx
      filter.tsx
      inbox.tsx
      message.tsx
      moon.tsx
      search.tsx
      settings-gear.tsx
      settings-lines.tsx
      square-pen.tsx
      sun.tsx
      trash.tsx
      users.tsx
      x.tsx
    icons.tsx
  mail/
    account-switcher.tsx
    data.tsx
    empty-state.tsx
    mail-compose-modal.tsx
    mail-compose.tsx
    mail-display.tsx
    mail-iframe.tsx
    mail-list.tsx
    mail-skeleton.tsx
    mail.tsx
    navbar.tsx
    reply-composer.tsx
    search-bar.tsx
    thread-display.tsx
    use-mail.ts
    use-tags.ts
  settings/
    settings-card.tsx
  theme/
    sidebar-theme-switcher.tsx
    theme-switcher.tsx
  ui/
    account-switcher.tsx
    app-sidebar.tsx
    avatar.tsx
    badge.tsx
    button.tsx
    calendar.tsx
    card.tsx
    chart.tsx
    collapsible.tsx
    command.tsx
    dialog.tsx
    drawer.tsx
    dropdown-menu.tsx
    envelop.tsx
    form.tsx
    input.tsx
    label.tsx
    nav-main.tsx
    nav-user.tsx
    popover.tsx
    progress.tsx
    radio-group.tsx
    resizable.tsx
    responsive-modal.tsx
    scroll-area.tsx
    select.tsx
    separator.tsx
    sheet.tsx
    sidebar-toggle.tsx
    sidebar.tsx
    skeleton.tsx
    switch.tsx
    tabs.tsx
    textarea.tsx
    toast.tsx
    toggle-group.tsx
    toggle.tsx
    tooltip.tsx
  responsive-modal.tsx
config/
  navigation.ts
  shortcuts.ts
constants/
  emailProviders.ts
db/
  migrations/
    meta/
      _journal.json
      0000_snapshot.json
      0001_snapshot.json
      0002_snapshot.json
      0003_snapshot.json
      0004_snapshot.json
      0005_snapshot.json
      0006_snapshot.json
      0007_snapshot.json
      0008_snapshot.json
      0009_snapshot.json
      0010_snapshot.json
      0011_snapshot.json
      0012_snapshot.json
      0013_snapshot.json
      0014_snapshot.json
      0015_snapshot.json
    0000_fine_steel_serpent.sql
    0001_greedy_darkhawk.sql
    0002_flimsy_nightshade.sql
    0003_purple_kylun.sql
    0004_quiet_grey_gargoyle.sql
    0005_mature_lady_deathstrike.sql
    0006_small_unicorn.sql
    0007_tense_wrecking_crew.sql
    0008_freezing_hydra.sql
    0009_boring_big_bertha.sql
    0010_dry_hemingway.sql
    0011_huge_newton_destine.sql
    0012_even_johnny_storm.sql
    0013_calm_timeslip.sql
    0014_cuddly_energizer.sql
    0015_minor_mister_sinister.sql
  index.ts
  schema.ts
hooks/
  use-connections.ts
  use-filtered-mails.ts
  use-key-pressed.ts
  use-media-query.ts
  use-mobile.tsx
  use-open-compose-modal.ts
  use-search-value.ts
  use-threads.ts
lib/
  auth-client.ts
  auth.ts
  constants.ts
  email-utils.ts
  env.ts
  idb.ts
  providers.tsx
  rateLimit.ts
  redis.ts
  site-config.ts
  utils.ts
public/
  assets/
    m0 rounded edges.svg
    m0 w lines rounded edges.svg
    m0 w lines.svg
    m0.svg
    mail0.io - Text + logo w lines.svg
    mail0.io - Text w lines.svg
  black-icon.svg
  mail.svg
  opened-mail.svg
  white-icon.svg
store/
  draftStates.ts
types/
  index.ts
.env.example
.gitignore
.nvmrc
.prettierignore
.prettierrc
components.json
docker-compose.yaml
drizzle.config.ts
eslint.config.mjs
LICENSE
middleware-draft.ts
middleware-eg.ts
next.config.ts
package.json
postcss.config.mjs
README.md
ROADMAP.md
tailwind.config.ts
tsconfig.json

================================================================
Files
================================================================

================
File: .devcontainer/devcontainer.json
================
// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/docker-existing-docker-compose
{
  "name": "Mail0 Dev Container",
  "build": {
    "dockerfile": "Dockerfile",
    "context": "."
  },
  // The optional 'workspaceFolder' property is the path VS Code should open by default when
  // connected. This is typically a file mount in .devcontainer/docker-compose.yml
  "workspaceFolder": "/workspaces/${localWorkspaceFolderBasename}",

  // Features to add to the dev container
  "features": {
    "ghcr.io/devcontainers/features/docker-in-docker:2": {}
  },

  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  "forwardPorts": [],

  // Configure tool-specific properties.
  "customizations": {
    "vscode": {
      "extensions": [
        "ms-azuretools.vscode-docker",
        "eamodio.gitlens",
        "streetsidesoftware.code-spell-checker"
      ],
      "settings": {}
    }
  },

  // Use 'postCreateCommand' to run commands after the container is created.
  "postCreateCommand": "zsh"
}

================
File: .devcontainer/Dockerfile
================
# Use Ubuntu as the base image
FROM ubuntu:latest

# Avoid prompts from apt
ENV DEBIAN_FRONTEND=noninteractive

# Install basic dependencies
RUN apt-get update && apt-get install -y \
    git \
    curl \
    wget \
    build-essential \
    pkg-config \
    zip \
    unzip \
    zsh \
    && rm -rf /var/lib/apt/lists/*

# Create workspace directory
RUN mkdir -p /workspaces

# Set working directory
WORKDIR /workspaces

# Install zsh
RUN apt-get update && apt-get install -y zsh

#  install Oh My Zsh
RUN sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended

# Bun 
RUN curl -fsSL https://bun.sh/install | bash

# Register Bun in bashrc and zshrc
RUN echo 'export PATH="$HOME/.bun/bin:$PATH"' >> ~/.bashrc
RUN echo 'export PATH="$HOME/.bun/bin:$PATH"' >> ~/.zshrc

# Install NVM and Node.js
ENV NVM_DIR=/root/.nvm
RUN curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh | bash

# Install Node.js and set it up using a shell
RUN . $NVM_DIR/nvm.sh && \
    nvm install --lts && \
    nvm use --lts && \
    nvm alias default 'lts/*' && \
    npm install -g yarn pnpm

# Register Nvm in bashrc and zshrc
RUN echo 'export NVM_DIR="$HOME/.nvm"' >> ~/.bashrc
RUN echo 'export NVM_DIR="$HOME/.nvm"' >> ~/.zshrc
RUN echo '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm' >> ~/.bashrc
RUN echo '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm' >> ~/.zshrc

# Switch back to dialog for any ad-hoc use of apt-get
ENV DEBIAN_FRONTEND=dialog

================
File: .github/ISSUE_TEMPLATE/bug_report.yml
================
name: Bug Report
description: Report a bug to help us improve
labels: ["bug"]
body:
  - type: markdown
    attributes:
      value: |
        Thanks for taking the time to fill out this bug report! Please provide as much detail as possible to help us resolve the issue quickly.

  - type: textarea
    id: bug-description
    attributes:
      label: Bug Description
      description: A clear and concise description of what the bug is.
      placeholder: When I try to..., the application...
    validations:
      required: true

  - type: textarea
    id: reproduction
    attributes:
      label: Steps to Reproduce
      description: Detailed steps to reproduce the behavior
      placeholder: |
        1. Go to '...'
        2. Click on '...'
        3. Scroll down to '...'
        4. See error
    validations:
      required: true

  - type: textarea
    id: expected
    attributes:
      label: Expected Behavior
      description: A clear and concise description of what you expected to happen.
    validations:
      required: true

  - type: textarea
    id: actual
    attributes:
      label: Actual Behavior
      description: What actually happened? If applicable, add screenshots to help explain your problem.
    validations:
      required: true

  - type: dropdown
    id: browsers
    attributes:
      label: What browsers are you seeing the problem on?
      multiple: true
      options:
        - Chrome
        - Firefox
        - Safari
        - Microsoft Edge
        - Other

  - type: input
    id: version
    attributes:
      label: Application Version
      description: What version of the application are you running?
      placeholder: e.g., v1.0.0
    validations:
      required: true

  - type: textarea
    id: environment
    attributes:
      label: Environment Information
      description: Please provide any relevant environment information
      placeholder: |
        - OS: [e.g., macOS 12.0]
        - Node.js version: [e.g., 16.x]
        - Browser version: [e.g., Chrome 96]

  - type: textarea
    id: logs
    attributes:
      label: Relevant Log Output
      description: Please copy and paste any relevant log output. This will be automatically formatted into code, so no need for backticks.
      render: shell

  - type: markdown
    attributes:
      value: |
        ---
        By submitting this bug report, you agree to follow our [Code of Conduct](../CODE_OF_CONDUCT.md) and understand that the information provided will be used to help resolve the issue.

================
File: .github/workflows/ci.yaml
================
name: check-pull-requests

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize

concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.event.pull_request.head.sha }}

jobs:
  check:
    name: Check Pull Requests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout Code 🛎
        uses: actions/checkout@v4

      - name: Setup pnpm 📦
        uses: pnpm/action-setup@v3

      - name: Setup Node.js 🟩
        uses: actions/setup-node@v4
        with:
          cache: "pnpm"
          node-version: "22"

      - name: Install Dependencies 📦
        run: pnpm install

      - name: Check 🚨
        run: pnpm check

================
File: .github/CONTRIBUTING.md
================
# Contributing to Mail0

Thank you for your interest in contributing to Mail0! We're excited to have you join our mission to create an open-source email solution that prioritizes privacy, transparency, and user empowerment.

## Table of Contents

- [Getting Started](#getting-started)
- [Development Setup](#development-setup)
- [Development Workflow](#development-workflow)
- [Pull Request Process](#pull-request-process)
- [Coding Guidelines](#coding-guidelines)
- [Testing](#testing)
- [Documentation](#documentation)
- [Community](#community)

## Getting Started

1. **Fork the Repository**

   - Click the 'Fork' button at the top right of this repository
   - Clone your fork locally: `git clone https://github.com/YOUR-USERNAME/Mail-0.git`

2. **Set Up Development Environment**
   - Install Node.js (v16 or higher)
   - Install required dependencies: `npm install`
   - Copy `.env.example` to `.env` and configure your environment variables
   - Set up your Google OAuth credentials (see README.md)

## Development Workflow

1. **Create a New Branch**

   ```bash
   git checkout -b feature/your-feature-name
   # or
   git checkout -b fix/your-bug-fix
   ```

2. **Make Your Changes**

   - Write clean, maintainable code
   - Follow our coding standards
   - Add/update tests as needed
   - Update documentation if required

3. **Commit Your Changes**

   - Use clear, descriptive commit messages
   - Reference issues and pull requests

   ```bash
   git commit -m "feat: add new email threading feature

   Implements #123"
   ```

4. **Push to Your Fork**

   ```bash
   git push origin your-branch-name
   ```

5. **Submit a Pull Request**
   - Fill out the PR template completely
   - Link any relevant issues
   - Add screenshots for UI changes

## Coding Guidelines

### General Principles

- Write clean, readable, and maintainable code
- Follow existing code style and patterns
- Keep functions small and focused
- Use meaningful variable and function names
- Comment complex logic, but write self-documenting code where possible

### JavaScript/TypeScript Guidelines

- Use TypeScript for new code
- Follow ESLint and Prettier configurations
- Use async/await for asynchronous operations
- Properly handle errors and edge cases
- Use proper TypeScript types and interfaces

### React Guidelines

- Use functional components and hooks
- Keep components small and focused
- Use proper prop types/TypeScript interfaces
- Follow React best practices for performance
- Implement responsive design principles

## Testing

- Write unit tests for new features
- Update existing tests when modifying features
- Ensure all tests pass before submitting PR
- Include integration tests for complex features
- Test edge cases and error scenarios

## Documentation

- Update README.md if needed
- Document new features and APIs
- Include JSDoc comments for functions
- Update API documentation
- Add comments for complex logic

## Areas of Contribution

- 📨 Email Integration Features
- 🎨 UI/UX Improvements
- 🔒 Security Enhancements
- ⚡ Performance Optimizations
- 📝 Documentation
- 🐛 Bug Fixes
- ✨ New Features
- 🧪 Testing

## Community

- Join our discussions in GitHub Issues
- Help others in the community
- Share your ideas and feedback
- Be respectful and inclusive
- Follow our Code of Conduct

## Questions or Need Help?

If you have questions or need help, you can:

1. Check our documentation
2. Open a GitHub issue
3. Join our community discussions

---

Thank you for contributing to Mail0! Your efforts help make email more open, private, and user-centric. 🚀

================
File: .github/PULL_REQUEST_TEMPLATE.md
================
---
Remove bullet points that are not relevant. If your PR doesn't follow this template or [contributing guide](https://github.com/Mail-0/Mail-0/blob/main/.github/CONTRIBUTING.md) it will not be accepted.
---

## Description

Please provide a clear description of your changes. Include screenshots/recordings for UI changes and any relevant context.

---

## Type of Change

Please delete options that are not relevant.

- [ ] 🐛 Bug fix (non-breaking change which fixes an issue)
- [ ] ✨ New feature (non-breaking change which adds functionality)
- [ ] 💥 Breaking change (fix or feature with breaking changes)
- [ ] 📝 Documentation update
- [ ] 🎨 UI/UX improvement
- [ ] 🔒 Security enhancement
- [ ] ⚡ Performance improvement

## Areas Affected

Please check all that apply:

- [ ] Email Integration (Gmail, IMAP, etc.)
- [ ] User Interface/Experience
- [ ] Authentication/Authorization
- [ ] Data Storage/Management
- [ ] API Endpoints
- [ ] Documentation
- [ ] Testing Infrastructure
- [ ] Development Workflow
- [ ] Deployment/Infrastructure

## Testing Done

Describe the tests you've done:

- [ ] Unit tests added/updated
- [ ] Integration tests added/updated
- [ ] Manual testing performed
- [ ] Cross-browser testing (if UI changes)
- [ ] Mobile responsiveness verified (if UI changes)

## Security Considerations

For changes involving data or authentication:

- [ ] No sensitive data is exposed
- [ ] Authentication checks are in place
- [ ] Input validation is implemented
- [ ] Rate limiting is considered (if applicable)

## Checklist

- [ ] I have read the [CONTRIBUTING](../CONTRIBUTING.md) document
- [ ] My code follows the project's style guidelines
- [ ] I have performed a self-review of my code
- [ ] I have commented my code, particularly in complex areas
- [ ] I have updated the documentation
- [ ] My changes generate no new warnings
- [ ] I have added tests that prove my fix/feature works
- [ ] All tests pass locally
- [ ] Any dependent changes are merged and published

## Additional Notes

Add any other context about the pull request here.

## Screenshots/Recordings

Add screenshots or recordings here if applicable.

---

_By submitting this pull request, I confirm that my contribution is made under the terms of the project's license._

================
File: .husky/pre-commit
================
pnpm lint-staged

================
File: actions/extractText.ts
================
"use server";

export async function extractTextFromHTML(decodedBody: string): Promise<string> {
  try {
    const textOnly = decodedBody.replace(/<[^>]*>?/gm, "");

    return textOnly.trim();
  } catch (error) {
    console.error("Error extracting text from HTML:", error);

    throw new Error("Failed to extract text from HTML");
  }
}

================
File: actions/mail.ts
================
"use server";

import { account, connection } from "@/db/schema";
import { createDriver } from "@/app/api/driver";
import { headers } from "next/headers";
import { and, eq } from "drizzle-orm";
import { auth } from "@/lib/auth";
import { db } from "@/db";

export const getMails = async ({
  folder,
  q,
  max,
  labelIds,
}: {
  folder: string;
  q?: string;
  max?: number;
  labelIds?: string[];
}) => {
  if (!folder) {
    throw new Error("Missing required fields");
  }

  const headersList = await headers();
  const session = await auth.api.getSession({ headers: headersList });

  if (!session || !session.connectionId) {
    throw new Error("Unauthorized, reconnect");
  }

  // Updated to use googleConnection table
  const [_connection] = await db
    .select()
    .from(connection)
    .where(and(eq(connection.userId, session.user.id), eq(connection.id, session.connectionId)));

  if (!_connection?.accessToken || !_connection.refreshToken) {
    throw new Error("Unauthorized, reconnect");
  }

  const driver = await createDriver(_connection.providerId, {
    auth: {
      access_token: _connection.accessToken,
      refresh_token: _connection.refreshToken,
    },
  });

  return await driver.list(folder, q, max, labelIds);
};

export const getMail = async ({ id }: { id: string }) => {
  if (!id) {
    throw new Error("Missing required fields");
  }

  const headersList = await headers();
  const session = await auth.api.getSession({ headers: headersList });

  if (!session || !session.connectionId) {
    throw new Error("Unauthorized, reconnect");
  }

  // Updated to use googleConnection table
  const [_connection] = await db
    .select()
    .from(connection)
    .where(and(eq(connection.userId, session.user.id), eq(connection.id, session.connectionId)));

  if (!_connection?.accessToken || !_connection.refreshToken) {
    throw new Error("Unauthorized, reconnect");
  }

  const driver = await createDriver(_connection.providerId, {
    // Assuming "google" is the provider ID
    auth: {
      access_token: _connection.accessToken,
      refresh_token: _connection.refreshToken,
    },
  });

  return await driver.get(id);
};

export const markAsRead = async ({ id }: { id: string }) => {
  const headersList = await headers();
  const session = await auth.api.getSession({ headers: headersList });

  if (!session || !session.connectionId) {
    throw new Error("Unauthorized, reconnect");
  }

  const [_connection] = await db
    .select()
    .from(connection)
    .where(and(eq(connection.userId, session.user.id), eq(connection.id, session.connectionId)));

  if (!_connection?.accessToken || !_connection.refreshToken) {
    throw new Error("Unauthorized, reconnect");
  }

  const driver = await createDriver(_connection.providerId, {
    // Assuming "google" is the provider ID
    auth: {
      access_token: _connection.accessToken,
      refresh_token: _connection.refreshToken,
    },
  });

  try {
    await driver.markAsRead(id);
  } catch (error) {
    console.error("Error marking message as read:", error);
  }
};

export const mailCount = async () => {
  const headersList = await headers();
  const session = await auth.api.getSession({ headers: headersList });

  if (!session || !session.connectionId) {
    throw new Error("Unauthorized, reconnect");
  }

  const [foundAccount] = await db.select().from(account).where(eq(account.userId, session.user.id));
  if (!foundAccount?.accessToken || !foundAccount.refreshToken) {
    throw new Error("Unauthorized, reconnect");
  }

  const driver = await createDriver(foundAccount.providerId, {
    auth: {
      access_token: foundAccount.accessToken,
      refresh_token: foundAccount.refreshToken,
    },
  });

  return await driver.count();
};

================
File: actions/send.ts
================
"use server";

import { createDriver } from "@/app/api/driver";
import { connection } from "@/db/schema";
import { headers } from "next/headers";
import { auth } from "@/lib/auth";
import { eq } from "drizzle-orm";
import { db } from "@/db";

export async function sendEmail({
  to,
  subject,
  message,
  attachments,
  headers: additionalHeaders = {},
}: {
  to: string;
  subject: string;
  message: string;
  attachments: File[];
  headers?: Record<string, string>;
}) {
  if (!to || !subject || !message) {
    throw new Error("Missing required fields");
  }

  const headersList = await headers();

  const session = await auth.api.getSession({ headers: headersList });
  if (!session?.user) throw new Error("Unauthorized");

  const [_connection] = await db
    .select()
    .from(connection)
    .where(eq(connection.userId, session.user.id))
    .orderBy(connection.createdAt);

  if (!_connection?.accessToken || !_connection.refreshToken) {
    throw new Error("Unauthorized, reconnect");
  }

  const driver = await createDriver(_connection.providerId, {
    auth: {
      access_token: _connection.accessToken,
      refresh_token: _connection.refreshToken,
    },
  });

  const fromName = _connection.name || session.user.name || "Unknown";
  const fromEmail = _connection.email || session.user.email;
  const fromHeader = fromName ? `${fromName} <${fromEmail}>` : fromEmail;

  const domain = fromEmail.split("@")[1];
  const randomPart = Math.random().toString(36).substring(2);
  const timestamp = Date.now();
  const messageId = `<${timestamp}.${randomPart}.mail0@${domain}>`;
  console.log("Generated Message-ID:", messageId);

  const date = new Date().toUTCString();

  // Generate a unique boundary that won't appear in the content
  const boundary = `----=_NextPart_${Date.now().toString(36)}_${Math.random().toString(36).substr(2, 9)}`;

  // Start building email content
  const emailParts = [
    // Basic email headers
    `Content-Type: multipart/mixed; boundary="${boundary}"`,
    "MIME-Version: 1.0",
    `Date: ${date}`,
    `Message-ID: ${messageId}`,
    `From: ${fromHeader}`,
    `To: <${to}>`,
    `Subject: ${subject}`,

    // Add threading headers if present
    ...(additionalHeaders["In-Reply-To"]
      ? [
          `In-Reply-To: ${additionalHeaders["In-Reply-To"]
            .split(" ")
            .filter(Boolean)
            .map((ref) => (ref.startsWith("<") ? ref : `<${ref}>`))
            .join(" ")}`,
        ]
      : []),
    ...(additionalHeaders["References"]
      ? [
          `References: ${additionalHeaders["References"]
            .split(" ")
            .filter(Boolean)
            .map((ref) => (ref.startsWith("<") ? ref : `<${ref}>`))
            .join(" ")}`,
        ]
      : []),

    // Security headers
    "X-Mailer: Mail0",
    `X-Originating-IP: [PRIVATE]`,
    `X-Priority: 3`,
    `X-MSMail-Priority: Normal`,
    `Importance: Normal`,
    "",
    `--${boundary}`,
    "Content-Type: text/html; charset=UTF-8",
    "Content-Transfer-Encoding: quoted-printable",
    "",
    message.trim(),
  ];

  // Add attachments if any
  if (attachments?.length > 0) {
    for (const file of attachments) {
      const buffer = Buffer.from(await file.arrayBuffer());
      const base64Content = buffer.toString("base64");

      emailParts.push(
        `--${boundary}`,
        `Content-Type: ${file.type || "application/octet-stream"}`,
        `Content-Transfer-Encoding: base64`,
        `Content-Disposition: attachment; filename="${file.name}"`,
        "",
        base64Content.match(/.{1,76}/g)?.join("\n") || base64Content,
      );
    }
  }

  // Add final boundary
  emailParts.push(`--${boundary}--`);

  // Join all parts with CRLF
  const emailContent = emailParts.join("\r\n");

  const encodedMessage = Buffer.from(emailContent).toString("base64");

  await driver.create({
    raw: encodedMessage,
  });

  return { success: true };
}

================
File: app/(auth)/login/page.tsx
================
"use client";

import { GitHub, Google } from "@/components/icons/icons";
import { signIn, useSession } from "@/lib/auth-client";
import { Button } from "@/components/ui/button";
import { useRouter } from "next/navigation";
import { useEffect } from "react";
import Image from "next/image";
import { toast } from "sonner";

export default function Login() {
  const router = useRouter();
  const { data: session, isPending } = useSession();

  useEffect(() => {
    if (!isPending && session?.connectionId) {
      router.push("/mail");
    }
  }, [session, isPending, router]);

  if (isPending || (session && session.connectionId)) return null;

  return (
    <div className="flex min-h-screen w-full items-center justify-center bg-grid-small-black/[0.39] dark:bg-grid-small-white/[0.025]">
      <div className="max-w-[500px] space-y-8 px-4 duration-500 animate-in slide-in-from-bottom-4 sm:px-12 md:px-0">
        <p className="text-center font-mono text-4xl font-bold md:text-5xl">Welcome to 0</p>
        <div className="flex w-full items-center justify-center">
          <Image
            src="/mail.svg"
            alt="logo"
            className="w-[300px] sm:w-[500px]"
            width={500}
            height={500}
          />
        </div>
        <div className="relative z-10 mx-auto flex w-full flex-col items-center justify-center gap-2 sm:flex-row">
          <Button
            onClick={async () => {
              toast.promise(
                signIn.social({
                  provider: "google",
                  callbackURL: "/mail",
                }),
                {
                  loading: "Redirecting...",
                  success: "Redirected successfully!",
                  error: "Login redirect failed",
                },
              );
            }}
            className="h-9 w-full rounded-lg border-2 border-input bg-background bg-black text-primary hover:bg-accent hover:text-accent-foreground"
          >
            <Google />
            Continue with Google
          </Button>
          <Button
            onClick={async () => {
              toast.promise(
                signIn.social({
                  provider: "github",
                  callbackURL: "/mail",
                }),
                {
                  loading: "Redirecting...",
                  success: "Redirected successfully!",
                  error: "Login redirect failed",
                },
              );
            }}
            className="h-9 w-full rounded-lg border-2 border-input bg-background bg-black text-primary hover:bg-accent hover:text-accent-foreground"
          >
            <GitHub />
            Continue with Github
          </Button>
        </div>
      </div>
    </div>
  );
}

================
File: app/(auth)/signup/verify/page.tsx
================
import { Card, CardHeader, CardTitle } from "@/components/ui/card";
import { Mail } from "lucide-react";
import { Suspense } from "react";
import Link from "next/link";

export default function VerifyEmail() {
  return (
    <div className="flex h-dvh w-screen flex-col items-center justify-center bg-background">
      <Suspense>
        <Mail className="h-16 w-16 animate-pulse text-muted-foreground" />
      </Suspense>
      <Card className="w-full max-w-md border-none py-0 shadow-none">
        <CardHeader className="py-2">
          <CardTitle className="text-center">Verify your email</CardTitle>
          <p className="text-center text-sm text-gray-500 dark:text-zinc-400">
            We&apos;ve sent a verification email to your inbox. If you don&apos;t see it, please
            signup again{" "}
            <Link href="/signup" className="underline">
              here
            </Link>
            .
          </p>
        </CardHeader>
      </Card>
    </div>
  );
}

================
File: app/(auth)/signup/page.tsx
================
/* eslint-disable @typescript-eslint/no-explicit-any */

"use client";

import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { signUp, useSession } from "@/lib/auth-client";
import { zodResolver } from "@hookform/resolvers/zod";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { useRouter } from "next/navigation";
import { useForm } from "react-hook-form";
import { useState } from "react";
import { toast } from "sonner";
import Link from "next/link";
import { z } from "zod";

const signUpSchema = z.object({
  name: z.string().min(2, "Name must be at least 2 characters"),
  email: z.string().email("Please enter a valid email"),
  password: z.string().min(8, "Password must be at least 8 characters"),
});

export default function SignUp() {
  const [isSubmitting, setIsSubmitting] = useState(false);
  const router = useRouter();

  const { data: session } = useSession();

  if (session) {
    router.push("/mail");
  }

  const form = useForm<z.infer<typeof signUpSchema>>({
    resolver: zodResolver(signUpSchema),
    defaultValues: {
      name: "",
      email: "",
      password: "",
    },
  });

  const onSubmit = async (values: z.infer<typeof signUpSchema>) => {
    setIsSubmitting(true);
    try {
      await signUp.email({
        email: values.email,
        password: values.password,
        name: values.name,
      });
      toast.success("Please check your email for verification.");
      router.push("/signup/verify");
    } catch (error: any) {
      console.error(error);
      toast.error(error.message || "Something went wrong. Please try again.");
    } finally {
      setIsSubmitting(false);
    }
  };

  return (
    <div className="flex h-dvh w-screen items-center justify-center bg-background">
      <Card className="w-full max-w-md border-none shadow-none">
        <CardHeader className="py-5">
          <CardTitle className="text-center">Create your Mail0 account</CardTitle>
          <p className="text-center text-sm text-gray-500 dark:text-zinc-400">
            Create an account to continue
          </p>
        </CardHeader>
        <CardContent>
          <Form {...form}>
            <form onSubmit={form.handleSubmit(onSubmit)} className="space-y-2 uppercase">
              {["name", "email", "password"].map((field) => (
                <FormField
                  control={form.control}
                  key={field}
                  name={field as keyof z.infer<typeof signUpSchema>}
                  render={({ field: fieldProps }) => (
                    <FormItem className="space-y-1">
                      <FormLabel className="text-xs text-gray-600 dark:text-zinc-400">
                        {field.charAt(0).toUpperCase() + field.slice(1)}
                      </FormLabel>
                      <FormControl>
                        <Input
                          className="placeholder:text-sm"
                          type={
                            field === "password" ? "password" : field === "email" ? "email" : "text"
                          }
                          placeholder={
                            field === "name"
                              ? "Tyler Durden"
                              : field === "email"
                                ? "tylerdurden@example.com"
                                : "••••••••••"
                          }
                          {...fieldProps}
                        />
                      </FormControl>
                      <FormMessage />
                    </FormItem>
                  )}
                />
              ))}
              <div className="pt-2">
                <Button type="submit" className="w-full" disabled={isSubmitting}>
                  Sign Up
                </Button>
              </div>
            </form>
            {/* <div className="relative mb-4 mt-5">
              <div className="absolute inset-0 flex items-center">
                <div className="w-full border-t border-muted"></div>
              </div>
              <div className="relative flex justify-center text-xs uppercase">
                <span className="bg-background px-2 text-muted-foreground">or</span>
              </div>
            </div>

            <div className="flex max-w-md justify-center gap-2">
              <Button
                onClick={async () => {
                  toast.promise(
                    signIn.social({
                      provider: "google",
                      callbackURL: "/mail",
                    }),
                    {
                      loading: "Redirecting...",
                      success: "Redirected successfully!",
                      error: "Login redirect failed",
                    },
                  );
                }}
                variant="outline"
                className="w-full"
                type="button"
              >
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  width="1em"
                  height="1em"
                  viewBox="0 0 24 24"
                >
                  <path
                    fill="currentColor"
                    d="M11.99 13.9v-3.72h9.36c.14.63.25 1.22.25 2.05c0 5.71-3.83 9.77-9.6 9.77c-5.52 0-10-4.48-10-10S6.48 2 12 2c2.7 0 4.96.99 6.69 2.61l-2.84 2.76c-.72-.68-1.98-1.48-3.85-1.48c-3.31 0-6.01 2.75-6.01 6.12s2.7 6.12 6.01 6.12c3.83 0 5.24-2.65 5.5-4.22h-5.51z"
                  ></path>
                </svg>
                Google
              </Button>
              <Button variant="outline" className="w-full" type="button">
                <svg className="mr-2 h-4 w-4" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z" />
                </svg>
                GitHub
              </Button>
            </div> */}
          </Form>

          <p className="mt-3 text-center text-sm text-gray-500 dark:text-zinc-400">
            Already have an account?{" "}
            <Link href="/login" className="underline">
              Login
            </Link>
          </p>
        </CardContent>
      </Card>
    </div>
  );
}

================
File: app/(error)/not-found.tsx
================
"use client";

import { AlertCircle, ArrowLeft } from "lucide-react";
import { Button } from "@/components/ui/button";
import { useRouter } from "next/navigation";

export function NotFound() {
  const router = useRouter();

  return (
    <div className="flex w-full items-center justify-center bg-white text-center dark:bg-background">
      <div className="flex-col items-center justify-center dark:text-gray-100 md:flex">
        <div className="relative">
          <h1 className="select-none text-[150px] font-bold text-muted-foreground/20">404</h1>
          <div className="absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2">
            <AlertCircle className="h-20 w-20 text-muted-foreground" />
          </div>
        </div>

        {/* Message */}
        <div className="space-y-2">
          <h2 className="text-2xl font-semibold tracking-tight">Page Not Found</h2>
          <p className="text-muted-foreground">
            Oops! The page you&apos;re looking for doesn&apos;t exist or has been moved.
          </p>
        </div>

        {/* Buttons */}
        <div className="mt-2 flex gap-2">
          <Button
            variant="outline"
            onClick={() => router.back()}
            className="gap-2 text-muted-foreground"
          >
            <ArrowLeft className="h-4 w-4" />
            Go Back
          </Button>
        </div>
      </div>
    </div>
  );
}

================
File: app/(full-width)/connect-emails/page.tsx
================
"use client";
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogHeader,
  DialogTitle,
  DialogTrigger,
  DialogClose,
} from "@/components/ui/dialog";
import { ArrowRight, Loader2, Plus, Trash } from "lucide-react";
import { useConnections } from "@/hooks/use-connections";
import { Button } from "@/components/ui/button";
import Image from "next/image";
import { toast } from "sonner";
import Link from "next/link";
import axios from "axios";

export default function ConnectEmails() {
  const { data: connections, mutate, isLoading: loading } = useConnections();

  const disconnectAccount = async (connectionId: string) => {
    try {
      await axios.delete(`/api/v1/mail/connections/${connectionId}`);
      toast.success("Account disconnected successfully");
      mutate(); // Refresh the list
    } catch (error) {
      console.error("Error disconnecting account:", error);
      toast.error("Failed to disconnect account");
    }
  };

  const emailProviders = [
    {
      name: "Google",
      icon: "M11.99 13.9v-3.72h9.36c.14.63.25 1.22.25 2.05c0 5.71-3.83 9.77-9.6 9.77c-5.52 0-10-4.48-10-10S6.48 2 12 2c2.7 0 4.96.99 6.69 2.61l-2.84 2.76c-.72-.68-1.98-1.48-3.85-1.48c-3.31 0-6.01 2.75-6.01 6.12s2.7 6.12 6.01 6.12c3.83 0 5.24-2.65 5.5-4.22h-5.51z",
      providerId: "google",
    },
    // {
    //   name: "Outlook",
    //   icon: "M24 7.387v10.478c0 .23-.08.424-.238.576-.158.154-.352.23-.58.23h-8.547v-6.959l1.6 1.229c.102.085.229.126.379.126.148 0 .277-.041.389-.127L24 7.387zm-9.365-2.021h8.547c.211 0 .393.063.543.192.15.128.234.3.248.51l-7.369 5.876-1.969-1.549V5.366zM13.404.864v22.271L0 20.819V3.244L13.406.864h-.002zm-4.049 11.18c-.02-1.133-.313-2.072-.879-2.814-.555-.74-1.275-1.131-2.131-1.164-.824.033-1.529.423-2.1 1.164-.57.742-.855 1.682-.87 2.814.015 1.117.315 2.047.885 2.791.571.74 1.274 1.133 2.101 1.176.855-.035 1.574-.424 2.145-1.17.57-.748.87-1.68.885-2.797h-.036zm-3.12-2.482c.431.02.794.256 1.083.717.285.461.435 1.045.435 1.752 0 .721-.149 1.307-.435 1.771-.301.464-.66.704-1.096.704s-.795-.226-1.095-.69-.435-1.05-.435-1.754c0-.705.135-1.291.435-1.74.284-.45.646-.69 1.096-.721l.012-.039z",
    // },
    // {
    //   name: "Yahoo",
    //   icon: "M12.6 4.2l3.2 7.5 3.3-7.5h4.8L16 24h-4.9l2.4-5.5L8.6 4.2h4zm-5.8 0l2.9 7.1-1.3 3.1L3.6 4.2h3.2z",
    // },
    // {
    //   name: "ProtonMail",
    //   icon: "M12 0C5.373 0 0 5.373 0 12s5.373 12 12 12 12-5.373 12-12S18.627 0 12 0zm0 2c5.523 0 10 4.477 10 10s-4.477 10-10 10S2 17.523 2 12 6.477 2 12 2zm0 3c-3.866 0-7 3.134-7 7s3.134 7 7 7 7-3.134 7-7-3.134-7-7-7zm0 2c2.757 0 5 2.243 5 5s-2.243 5-5 5-5-2.243-5-5 2.243-5 5-5zm0 2c-1.654 0-3 1.346-3 3s1.346 3 3 3 3-1.346 3-3-1.346-3-3-3z",
    // },
  ];

  return (
    <div className="flex h-dvh w-screen items-center justify-center bg-background">
      <div className="flex w-full max-w-sm flex-col gap-2 overflow-hidden rounded-2xl">
        <div className="flex flex-col items-center justify-center gap-1 px-4 text-center">
          <h3 className="text-xl font-semibold dark:text-zinc-50">Connect your emails</h3>
          <p className="text-sm text-gray-500 dark:text-zinc-400">
            Connect your emails to your Mail0 account
          </p>
        </div>
        <div className="px-4 sm:px-0">
          {loading ? (
            <div className="flex justify-center">
              <Loader2 className="h-6 w-6 animate-spin text-gray-500" />
            </div>
          ) : connections ? (
            connections.length > 0 ? (
              <div className="space-y-3">
                {connections?.map((connection) => (
                  <div
                    key={connection.id}
                    className="flex items-center justify-between rounded-lg border p-4 transition-colors"
                  >
                    <div className="flex items-center gap-4">
                      {connection.picture ? (
                        <Image
                          src={connection.picture || "/placeholder.svg"}
                          alt=""
                          className="h-12 w-12 rounded-xl object-cover"
                          width={48}
                          height={48}
                        />
                      ) : (
                        <div className="flex h-12 w-12 items-center justify-center rounded-full bg-primary/10">
                          <svg
                            xmlns="http://www.w3.org/2000/svg"
                            viewBox="0 0 24 24"
                            className="h-6 w-6 text-primary"
                          >
                            <path
                              fill="currentColor"
                              d="M11.99 13.9v-3.72h9.36c.14.63.25 1.22.25 2.05c0 5.71-3.83 9.77-9.6 9.77c-5.52 0-10-4.48-10-10S6.48 2 12 2c2.7 0 4.96.99 6.69 2.61l-2.84 2.76c-.72-.68-1.98-1.48-3.85-1.48c-3.31 0-6.01 2.75-6.01 6.12s2.7 6.12 6.01 6.12c3.83 0 5.24-2.65 5.5-4.22h-5.51z"
                            />
                          </svg>
                        </div>
                      )}
                      <div className="flex flex-col">
                        <span className="text-sm font-medium">{connection.email}</span>
                        <span className="text-xs text-muted-foreground">Connected</span>
                      </div>
                    </div>
                    <Dialog>
                      <DialogTrigger asChild>
                        <Button
                          variant="ghost"
                          size="icon"
                          className="text-muted-foreground hover:text-primary"
                        >
                          <Trash className="h-4 w-4" />
                          <span className="sr-only">Disconnect account</span>
                        </Button>
                      </DialogTrigger>
                      <DialogContent className="sm:max-w-md">
                        <DialogHeader>
                          <DialogTitle>Disconnect Email Account</DialogTitle>
                          <DialogDescription className="text-sm">
                            Are you sure you want to disconnect this email?
                          </DialogDescription>
                        </DialogHeader>
                        <div className="flex justify-end gap-4">
                          <DialogClose asChild>
                            <Button variant="outline">Cancel</Button>
                          </DialogClose>
                          <DialogClose asChild>
                            <Button onClick={() => disconnectAccount(connection.id)}>Remove</Button>
                          </DialogClose>
                        </div>
                      </DialogContent>
                    </Dialog>
                  </div>
                ))}
              </div>
            ) : null
          ) : null}
        </div>
        <div className="flex justify-center gap-2 px-4 sm:px-16">
          <Dialog>
            <DialogTrigger asChild>
              <Button variant="outline" className="w-full gap-2">
                <Plus className="h-4 w-4" />
                {connections ? (connections.length > 0 ? "Add Email" : "Connect Email") : "..."}
              </Button>
            </DialogTrigger>
            <DialogContent className="sm:max-w-md">
              <DialogHeader>
                <DialogTitle className="text-center">Connect Email</DialogTitle>
                <DialogDescription className="text-center text-muted-foreground">
                  Select the email providers you want to connect
                </DialogDescription>
              </DialogHeader>
              <div className="mt-2 grid grid-cols-2 gap-4 sm:grid-cols-2">
                {emailProviders.map((provider) => (
                  <a key={provider.name} href={`/api/v1/mail/auth/${provider.providerId}/init`}>
                    <Button
                      variant="outline"
                      className="flex h-24 w-full flex-col items-center justify-center gap-2 p-0"
                    >
                      <svg
                        xmlns="http://www.w3.org/2000/svg"
                        viewBox="0 0 24 24"
                        className="h-12 w-12"
                      >
                        <path fill="currentColor" d={provider.icon} />
                      </svg>
                      <span className="text-xs">{provider.name}</span>
                    </Button>
                  </a>
                ))}
                <Button
                  variant="outline"
                  className="flex h-24 w-full flex-col items-center justify-center gap-2 border-dashed p-0"
                >
                  <Plus className="h-12 w-12" />
                  <span className="text-xs">More Coming Soon</span>
                </Button>
              </div>
            </DialogContent>
          </Dialog>
          <Link href="/mail" className="w-full">
            <Button className="w-full gap-2" disabled={!connections?.length}>
              Continue
              <ArrowRight className="h-4 w-4" />
            </Button>
          </Link>
        </div>
      </div>
    </div>
  );
}

================
File: app/(full-width)/contributors/page.tsx
================
"use client";

import {
  Github,
  Star,
  GitFork,
  MessageCircle,
  GitGraph,
  ChartAreaIcon,
  GitPullRequest,
  LayoutGrid,
  FileCode,
} from "lucide-react";
import {
  Area,
  AreaChart,
  Bar,
  BarChart,
  ResponsiveContainer,
  Tooltip,
  XAxis,
  YAxis,
} from "recharts";
import { Tabs, TabsList, TabsTrigger, TabsContent } from "@/components/ui/tabs";
import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";
import { Separator } from "@/components/ui/separator";
import { useEffect, useState, useMemo } from "react";
import { Button } from "@/components/ui/button";
import { Card } from "@/components/ui/card";
import { fetcher } from "@/lib/utils";
import Image from "next/image";
import Link from "next/link";
import useSWR from "swr";

interface Contributor {
  login: string;
  avatar_url: string;
  contributions: number;
  html_url: string;
}

interface TimelineData {
  date: string;
  stars: number;
  forks: number;
  watchers: number;
  commits: number;
}

interface ActivityData {
  date: string;
  commits: number;
  issues: number;
  pullRequests: number;
}

const excludedUsernames = ["bot1", "dependabot", "github-actions"];
const coreTeamMembers = ["nizzyabi", "ahmetskilinc", "ripgrim", "user12224", "praashh", "mrgsub"];
const REPOSITORY = "Mail-0/Mail-0";

const specialRoles: Record<string, { role: string; twitter?: string; website?: string }> = {
  nizzyabi: {
    role: "Project Owner",
    twitter: "nizzyabi",
  },
  ahmetskilinc: {
    role: "Maintainer",
    twitter: "bruvimtired",
    website: "https://ahmetk.dev/",
  },
  ripgrim: {
    role: "Maintainer",
    twitter: "fuckgrimlabs",
    website: "https://ripgrim.com",
  },
  user12224: {
    role: "Maintainer",
    twitter: "user12224",
    website: "https://needle.rip",
  },
  praashh: {
    role: "Maintainer",
    twitter: "10Xpraash",
  },
  mrgsub: {
    role: "Maintainer",
  },
};

const ChartControls = ({
  showAll,
  setShowAll,
  total,
}: {
  showAll: boolean;
  setShowAll: (show: boolean) => void;
  total: number;
}) => (
  <div className="mb-4 flex items-center justify-between">
    <span className="text-sm text-muted-foreground">
      Showing {showAll ? "all" : "top 10"} contributors
    </span>
    <Button variant="outline" size="sm" onClick={() => setShowAll(!showAll)} className="text-xs">
      Show {showAll ? "less" : "all"} ({total})
    </Button>
  </div>
);

export default function OpenPage() {
  const [repoStats, setRepoStats] = useState({
    stars: 0,
    forks: 0,
    watchers: 0,
    openIssues: 0,
    openPRs: 0,
  });
  const [timelineData, setTimelineData] = useState<TimelineData[]>([]);
  const [activityData, setActivityData] = useState<ActivityData[]>([]);
  const [showAllContributors, setShowAllContributors] = useState(false);
  const [isLoading, setIsLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);

  const { data: contributors } = useSWR<Contributor[]>(
    `https://api.github.com/repos/${REPOSITORY}/contributors`,
    fetcher,
  );

  const { data: repoData, error: repoError } = useSWR(
    `https://api.github.com/repos/${REPOSITORY}`,
    fetcher,
  );

  const { data: commitsData, error: commitsError } = useSWR(
    `https://api.github.com/repos/${REPOSITORY}/commits?per_page=100`,
    fetcher,
  );

  const { data: prsData, error: prsError } = useSWR(
    `https://api.github.com/repos/${REPOSITORY}/pulls?state=open`,
    fetcher,
  );

  const filteredCoreTeam = useMemo(
    () =>
      contributors
        ?.filter(
          (contributor) =>
            !excludedUsernames.includes(contributor.login) &&
            coreTeamMembers.some(
              (member) => member.toLowerCase() === contributor.login.toLowerCase(),
            ),
        )
        .sort((a, b) => b.contributions - a.contributions),
    [contributors],
  );

  const filteredContributors = useMemo(
    () =>
      contributors
        ?.filter(
          (contributor) =>
            !excludedUsernames.includes(contributor.login) &&
            !coreTeamMembers.some(
              (member) => member.toLowerCase() === contributor.login.toLowerCase(),
            ),
        )
        .sort((a, b) => b.contributions - a.contributions),
    [contributors],
  );

  useEffect(() => {
    if (repoError || commitsError || prsError) {
      setError(
        repoError?.message ||
          commitsError?.message ||
          prsError?.message ||
          "An error occurred while fetching data",
      );
      generateFallbackData();
      return;
    }

    if (!repoData || !commitsData || !prsData) {
      setIsLoading(true);
      return;
    }

    setIsLoading(false);
    setError(null);

    setRepoStats({
      stars: repoData.stargazers_count,
      forks: repoData.forks_count,
      watchers: repoData.subscribers_count,
      openIssues: repoData.open_issues_count - prsData.length,
      openPRs: prsData.length,
    });

    const last30Days = Array.from({ length: 30 }, (_, i) => {
      const date = new Date();
      date.setDate(date.getDate() - (29 - i));
      const dateStr = date.toISOString().split("T")[0];

      const dayCommits = commitsData.filter((commit: { commit: { author: { date: string } } }) =>
        commit.commit.author.date.startsWith(dateStr),
      ).length;

      const dayIndex = i + 1;
      const growthFactor = dayIndex / 30;

      return {
        date: date.toLocaleDateString("en-US", {
          month: "short",
          day: "numeric",
        }),
        stars: Math.floor(repoData.stargazers_count * growthFactor),
        forks: Math.floor(repoData.forks_count * growthFactor),
        watchers: Math.floor(repoData.subscribers_count * growthFactor),
        commits: dayCommits || Math.floor(Math.random() * 5),
      };
    });

    setTimelineData(last30Days);

    const last7Days = Array.from({ length: 7 }, (_, i) => {
      const date = new Date();
      const today = date.getDay();
      const daysToSubtract = today + (6 - i);
      date.setDate(date.getDate() - daysToSubtract);

      const dateStr = date.toISOString().split("T")[0];

      const dayCommits = commitsData.filter((commit: { commit: { author: { date: string } } }) =>
        commit.commit.author.date.startsWith(dateStr),
      ).length;

      const commits = dayCommits || Math.floor(Math.random() * 5) + 1;

      return {
        date: date.toLocaleDateString("en-US", { weekday: "short" }),
        commits,
        issues: Math.max(1, Math.floor(commits * 0.3)),
        pullRequests: Math.max(1, Math.floor(commits * 0.2)),
      };
    });

    setActivityData(last7Days);
  }, [repoData, commitsData, prsData, repoError, commitsError, prsError]);

  const generateFallbackData = () => {
    const last30Days = Array.from({ length: 30 }, (_, i) => {
      const date = new Date();
      date.setDate(date.getDate() - (29 - i));
      return {
        date: date.toLocaleDateString("en-US", {
          month: "short",
          day: "numeric",
        }),
        stars: Math.floor(Math.random() * 100),
        forks: Math.floor(Math.random() * 50),
        watchers: Math.floor(Math.random() * 30),
        commits: Math.floor(Math.random() * 10),
      };
    });

    const last7Days = Array.from({ length: 7 }, (_, i) => {
      const date = new Date();
      const today = date.getDay();
      const daysToSubtract = today + (6 - i);
      date.setDate(date.getDate() - daysToSubtract);

      const commits = Math.floor(Math.random() * 8) + 2;
      return {
        date: date.toLocaleDateString("en-US", { weekday: "short" }),
        commits,
        issues: Math.max(1, Math.floor(commits * 0.3)),
        pullRequests: Math.max(1, Math.floor(commits * 0.2)),
      };
    });

    setTimelineData(last30Days);
    setActivityData(last7Days);
  };

  if (error) {
    return (
      <div className="flex min-h-[400px] items-center justify-center">
        <div className="text-center">
          <h3 className="text-lg font-medium text-neutral-900 dark:text-white">
            Something went wrong
          </h3>
          <p className="mt-2 text-sm text-neutral-600 dark:text-neutral-400">{error}</p>
          <Button
            variant="outline"
            size="sm"
            onClick={() => window.location.reload()}
            className="mt-4"
          >
            Try again
          </Button>
        </div>
      </div>
    );
  }

  if (isLoading) {
    return (
      <div className="flex min-h-screen w-full items-center justify-center">
        <div className="text-center">
          <div className="mx-auto h-8 w-8 animate-spin rounded-full border-2 border-neutral-900 border-t-transparent dark:border-white dark:border-t-transparent" />
          <p className="mt-2 text-sm text-neutral-600 dark:text-neutral-400">Loading data...</p>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen w-full text-white">
      <div className="container mx-auto max-w-6xl px-4 py-8">
        {/* Project Stats */}
        <div className="mb-8 overflow-hidden rounded-xl border bg-gradient-to-b from-white/50 to-white/10 p-6 backdrop-blur-sm dark:border-neutral-700 dark:from-neutral-900/50 dark:to-neutral-900/30">
          <div className="flex flex-col items-start justify-between gap-4 sm:flex-row sm:items-center">
            <div className="space-y-1">
              <div className="flex items-center gap-2">
                <Image
                  src="/black-icon.svg"
                  alt="Mail0 Logo"
                  width={32}
                  height={32}
                  className="dark:hidden"
                />
                <Image
                  src="/white-icon.svg"
                  alt="Mail0 Logo"
                  width={32}
                  height={32}
                  className="hidden dark:block"
                />
              </div>
              <p className="text-sm text-neutral-500 dark:text-neutral-400">
                An open source email app built with modern technologies
              </p>
            </div>
            <div className="flex gap-2">
              <Button
                asChild
                variant="outline"
                size="sm"
                className="gap-2 border-neutral-200 bg-white/50 text-neutral-700 hover:bg-neutral-100 hover:text-neutral-900 dark:border-neutral-700 dark:bg-neutral-900/50 dark:text-neutral-200 dark:hover:bg-neutral-800 dark:hover:text-white"
              >
                <Link href={`https://github.com/${REPOSITORY}`} target="_blank">
                  <Github className="h-4 w-4" />
                  View on GitHub
                </Link>
              </Button>
            </div>
          </div>

          <Separator className="my-6 dark:bg-neutral-700" />

          <div className="flex flex-wrap items-center divide-x divide-neutral-200 dark:divide-neutral-700">
            <div className="flex items-center gap-3 px-3 first:pl-0 last:pr-0 sm:px-4">
              <Star className="h-4 w-4 text-neutral-600 dark:text-neutral-400" />
              <div className="flex items-baseline gap-1">
                <span className="text-base font-bold text-neutral-900 dark:text-white sm:text-lg">
                  {repoStats.stars}
                </span>
                <span className="hidden text-xs text-neutral-500 dark:text-neutral-400 sm:inline">
                  &nbsp;stars
                </span>
              </div>
            </div>

            <div className="flex items-center gap-3 px-3 first:pl-0 last:pr-0 sm:px-4">
              <GitFork className="h-4 w-4 text-neutral-600 dark:text-neutral-400" />
              <div className="flex items-baseline gap-1">
                <span className="text-base font-bold text-neutral-900 dark:text-white sm:text-lg">
                  {repoStats.forks}
                </span>
                <span className="hidden text-xs text-neutral-500 dark:text-neutral-400 sm:inline">
                  &nbsp;forks
                </span>
              </div>
            </div>

            <div className="hidden items-center gap-3 px-3 first:pl-0 last:pr-0 sm:flex sm:px-4">
              <Github className="h-4 w-4 text-neutral-600 dark:text-neutral-400" />
              <div className="flex items-baseline gap-1">
                <span className="text-base font-bold text-neutral-900 dark:text-white sm:text-lg">
                  {repoStats.watchers}
                </span>
                <span className="text-xs text-neutral-500 dark:text-neutral-400">
                  &nbsp;watchers
                </span>
              </div>
            </div>

            <div className="flex items-center gap-3 px-3 first:pl-0 last:pr-0 sm:px-4">
              <MessageCircle className="h-4 w-4 text-neutral-600 dark:text-neutral-400" />
              <div className="flex items-baseline gap-1">
                <span className="text-base font-bold text-neutral-900 dark:text-white sm:text-lg">
                  {repoStats.openIssues}
                </span>
                <span className="hidden text-xs text-neutral-500 dark:text-neutral-400 sm:inline">
                  &nbsp;issues
                </span>
              </div>
            </div>

            <div className="flex items-center gap-3 px-3 first:pl-0 last:pr-0 sm:px-4">
              <GitPullRequest className="h-4 w-4 text-neutral-600 dark:text-neutral-400" />
              <div className="flex items-baseline gap-1">
                <span className="text-base font-bold text-neutral-900 dark:text-white sm:text-lg">
                  {repoStats.openPRs}
                </span>
                <span className="hidden text-xs text-neutral-500 dark:text-neutral-400 sm:inline">
                  &nbsp;PRs
                </span>
              </div>
            </div>
          </div>

          <div className="mt-6 grid gap-4 lg:grid-cols-3">
            {/* Repository Growth */}
            <Card className="col-span-full border-neutral-100 bg-white/50 p-4 transition-all hover:bg-white/60 dark:border-neutral-800 dark:bg-neutral-900/50 dark:hover:bg-neutral-900/60 lg:col-span-2">
              <h3 className="mb-4 text-sm font-medium text-neutral-600 dark:text-neutral-400">
                Repository Growth
              </h3>
              <ResponsiveContainer width="100%" height={240}>
                <AreaChart data={timelineData} className="-mx-5 mt-2">
                  <defs>
                    <linearGradient id="stars" x1="0" y1="0" x2="0" y2="1">
                      <stop offset="5%" stopColor="rgb(64, 64, 64)" stopOpacity={0.3} />
                      <stop offset="95%" stopColor="rgb(64, 64, 64)" stopOpacity={0} />
                    </linearGradient>
                    <linearGradient id="starsDark" x1="0" y1="0" x2="0" y2="1">
                      <stop offset="5%" stopColor="rgb(255, 255, 255)" stopOpacity={0.4} />
                      <stop offset="95%" stopColor="rgb(255, 255, 255)" stopOpacity={0} />
                    </linearGradient>
                    <linearGradient id="forks" x1="0" y1="0" x2="0" y2="1">
                      <stop offset="5%" stopColor="rgb(64, 64, 64)" stopOpacity={0.3} />
                      <stop offset="95%" stopColor="rgb(64, 64, 64)" stopOpacity={0} />
                    </linearGradient>
                    <linearGradient id="forksDark" x1="0" y1="0" x2="0" y2="1">
                      <stop offset="5%" stopColor="rgb(200, 200, 200)" stopOpacity={0.3} />
                      <stop offset="95%" stopColor="rgb(200, 200, 200)" stopOpacity={0} />
                    </linearGradient>
                  </defs>
                  <XAxis
                    dataKey="date"
                    stroke="currentColor"
                    fontSize={12}
                    tickLine={false}
                    axisLine={false}
                    className="text-neutral-600 dark:text-neutral-400"
                  />
                  <YAxis
                    stroke="currentColor"
                    fontSize={12}
                    tickLine={false}
                    axisLine={false}
                    tickFormatter={(value) => `${value}`}
                    className="text-neutral-600 dark:text-neutral-400"
                  />
                  <Tooltip
                    content={({ active, payload }) => {
                      if (active && payload && payload.length) {
                        return (
                          <div className="rounded-lg border border-neutral-200 bg-white p-3 shadow-lg dark:border-neutral-800 dark:bg-neutral-900">
                            <div className="grid gap-2">
                              <div className="flex items-center gap-2">
                                <Star className="h-4 w-4 text-neutral-900 dark:text-white" />
                                <span className="text-sm text-neutral-600 dark:text-neutral-400">
                                  Stars:
                                </span>
                                <span className="font-medium text-neutral-900 dark:text-white">
                                  {payload[0].value}
                                </span>
                              </div>
                              <div className="flex items-center gap-2">
                                <GitFork className="h-4 w-4 text-neutral-700 dark:text-neutral-300" />
                                <span className="text-sm text-neutral-600 dark:text-neutral-400">
                                  Forks:
                                </span>
                                <span className="font-medium text-neutral-900 dark:text-white">
                                  {payload[1].value}
                                </span>
                              </div>
                            </div>
                          </div>
                        );
                      }
                      return null;
                    }}
                  />
                  <Area
                    type="monotone"
                    dataKey="stars"
                    stroke="rgb(64, 64, 64)"
                    strokeWidth={2}
                    fill="url(#stars)"
                    className="dark:fill-[url(#starsDark)] dark:stroke-white"
                  />
                  <Area
                    type="monotone"
                    dataKey="forks"
                    stroke="rgb(64, 64, 64)"
                    strokeWidth={2}
                    fill="url(#forks)"
                    className="dark:fill-[url(#forksDark)] dark:stroke-neutral-300"
                  />
                </AreaChart>
              </ResponsiveContainer>
            </Card>

            {/* Activity Chart */}
            <Card className="col-span-full border-neutral-200 bg-white/50 p-4 transition-all hover:bg-white/60 dark:border-neutral-800 dark:bg-neutral-900/50 dark:hover:bg-neutral-900/60 lg:col-span-1">
              <h3 className="mb-4 text-sm font-medium text-neutral-600 dark:text-neutral-400">
                Recent Activity
              </h3>
              <ResponsiveContainer width="100%" height={240}>
                <BarChart data={activityData} className="-mx-5 mt-2" layout="horizontal">
                  <XAxis
                    dataKey="date"
                    stroke="currentColor"
                    fontSize={12}
                    tickLine={false}
                    axisLine={false}
                    className="text-neutral-600 dark:text-neutral-400"
                    interval={0}
                  />
                  <YAxis
                    stroke="currentColor"
                    fontSize={12}
                    tickLine={false}
                    axisLine={false}
                    className="text-neutral-600 dark:text-neutral-400"
                  />
                  <Tooltip
                    content={({ active, payload }) => {
                      if (active && payload && payload.length) {
                        return (
                          <div className="rounded-lg border border-neutral-200 bg-white p-3 shadow-lg dark:border-neutral-800 dark:bg-neutral-900">
                            <div className="grid gap-2">
                              <div className="flex items-center gap-2">
                                <GitGraph className="h-4 w-4 text-neutral-900 dark:text-white" />
                                <span className="text-sm text-neutral-600 dark:text-neutral-400">
                                  Commits:
                                </span>
                                <span className="font-medium text-neutral-900 dark:text-white">
                                  {payload[0].value}
                                </span>
                              </div>
                              <div className="flex items-center gap-2">
                                <MessageCircle className="h-4 w-4 text-neutral-700 dark:text-neutral-300" />
                                <span className="text-sm text-neutral-600 dark:text-neutral-400">
                                  Issues:
                                </span>
                                <span className="font-medium text-neutral-900 dark:text-white">
                                  {payload[1].value}
                                </span>
                              </div>
                              <div className="flex items-center gap-2">
                                <GitPullRequest className="h-4 w-4 text-neutral-500 dark:text-neutral-500" />
                                <span className="text-sm text-neutral-600 dark:text-neutral-400">
                                  PRs:
                                </span>
                                <span className="font-medium text-neutral-900 dark:text-white">
                                  {payload[2].value}
                                </span>
                              </div>
                            </div>
                          </div>
                        );
                      }
                      return null;
                    }}
                  />
                  <Bar
                    dataKey="commits"
                    radius={[4, 4, 0, 0]}
                    className="fill-neutral-900 dark:fill-white"
                  />
                  <Bar
                    dataKey="issues"
                    radius={[4, 4, 0, 0]}
                    className="fill-neutral-700 dark:fill-neutral-300"
                  />
                  <Bar
                    dataKey="pullRequests"
                    radius={[4, 4, 0, 0]}
                    className="fill-neutral-500 dark:fill-neutral-500"
                  />
                </BarChart>
              </ResponsiveContainer>
            </Card>
          </div>
        </div>

        {/* Core Team Section */}
        <div className="mb-12 space-y-6">
          <div className="text-center">
            <h1 className="text-3xl font-semibold tracking-tight text-neutral-900/80 dark:text-white">
              Core Team
            </h1>
            <p className="mt-2 text-muted-foreground">Meet the people behind Mail0</p>
          </div>

          <div className="grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-3">
            {filteredCoreTeam?.map((member, index) => (
              <div
                key={member.login}
                className="group relative flex items-center gap-4 rounded-xl border bg-white/50 p-4 transition-all hover:-translate-y-1 hover:bg-white hover:shadow-lg dark:border-neutral-800 dark:bg-neutral-900/50 dark:hover:bg-neutral-900 dark:hover:shadow-neutral-900/50"
                style={{
                  animationDelay: `${index * 100}ms`,
                  animation: "fadeInUp 0.5s ease-out forwards",
                  opacity: 0,
                  transform: "translateY(10px)",
                }}
              >
                <Avatar className="h-16 w-16 rounded-full ring-2 ring-neutral-200 transition-transform group-hover:scale-105 group-hover:ring-neutral-300 dark:ring-neutral-800 dark:group-hover:ring-neutral-700">
                  <AvatarImage
                    src={`https://github.com/${member.login}.png`}
                    alt={member.login}
                    className="object-cover"
                  />
                  <AvatarFallback className="text-xs">
                    {member.login.slice(0, 2).toUpperCase()}
                  </AvatarFallback>
                </Avatar>

                <div className="flex-1">
                  <h3 className="text-lg font-medium text-neutral-900 transition-colors group-hover:text-neutral-700 dark:text-neutral-200 dark:group-hover:text-white">
                    {member.login}
                  </h3>
                  <p className="text-xs text-neutral-500 dark:text-neutral-400">
                    {specialRoles[member.login.toLowerCase()]?.role || "Maintainer"}
                  </p>
                  <div className="mt-3 flex gap-2">
                    <Link
                      href={`https://github.com/${member.login}`}
                      target="_blank"
                      className="rounded-md p-1 text-neutral-600 transition-colors hover:bg-neutral-100 hover:text-neutral-900 dark:text-neutral-400 dark:hover:bg-neutral-800 dark:hover:text-white"
                    >
                      <Github className="h-4 w-4" />
                    </Link>
                    {specialRoles[member.login.toLowerCase()]?.twitter && (
                      <Link
                        href={`https://twitter.com/${specialRoles[member.login.toLowerCase()]?.twitter}`}
                        target="_blank"
                        className="rounded-md p-1 text-neutral-600 transition-colors hover:bg-neutral-100 hover:text-neutral-900 dark:text-neutral-400 dark:hover:bg-neutral-800 dark:hover:text-white"
                      >
                        <svg
                          className="h-4 w-4"
                          fill="currentColor"
                          viewBox="0 0 24 24"
                          aria-hidden="true"
                        >
                          <path d="M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z" />
                        </svg>
                      </Link>
                    )}
                    {specialRoles[member.login.toLowerCase()]?.website && (
                      <Link
                        href={specialRoles[member.login.toLowerCase()]?.website || "#"}
                        target="_blank"
                        className="rounded-md p-1 text-neutral-600 transition-colors hover:bg-neutral-100 hover:text-neutral-900 dark:text-neutral-400 dark:hover:bg-neutral-800 dark:hover:text-white"
                      >
                        <svg
                          className="h-4 w-4"
                          fill="none"
                          stroke="currentColor"
                          viewBox="0 0 24 24"
                          aria-hidden="true"
                        >
                          <path
                            strokeLinecap="round"
                            strokeLinejoin="round"
                            strokeWidth="2"
                            d="M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9a9 9 0 01-9-9m9 9c1.657 0 3-4.03 3-9s-1.343-9-3-9m0 18c-1.657 0-3-4.03-3-9s1.343-9 3-9m-9 9a9 9 0 019-9"
                          />
                        </svg>
                      </Link>
                    )}
                  </div>
                </div>
              </div>
            ))}
          </div>
        </div>

        {/* Contributors Section */}
        <div className="space-y-6">
          <div className="text-center">
            <h1 className="text-3xl font-semibold tracking-tight text-neutral-900/80 dark:text-white">
              Contributors
            </h1>
            <div className="mt-2 flex items-center justify-center gap-2 text-muted-foreground">
              <FileCode className="h-4 w-4" />
              <span>Top {filteredContributors?.length} contributors</span>
            </div>
          </div>

          <style jsx global>{`
            @keyframes fadeInUp {
              from {
                opacity: 0;
                transform: translateY(10px);
              }
              to {
                opacity: 1;
                transform: translateY(0);
              }
            }
          `}</style>

          <div>
            <Tabs defaultValue="grid" className="w-full">
              <div className="mb-6 flex justify-center">
                <TabsList className="grid h-full w-full grid-cols-2 border border-neutral-200 bg-white/50 p-1 dark:border-neutral-800 dark:bg-neutral-900/50 sm:w-[200px]">
                  <TabsTrigger
                    value="grid"
                    className="flex items-center gap-2 text-neutral-600 data-[state=active]:bg-white data-[state=active]:text-neutral-900 data-[state=active]:shadow-sm dark:text-neutral-400 dark:data-[state=active]:bg-neutral-800 dark:data-[state=active]:text-white"
                  >
                    <LayoutGrid className="h-4 w-4" />
                    Grid
                  </TabsTrigger>
                  <TabsTrigger
                    value="chart"
                    className="flex items-center gap-2 text-neutral-600 data-[state=active]:bg-white data-[state=active]:text-neutral-900 data-[state=active]:shadow-sm dark:text-neutral-400 dark:data-[state=active]:bg-neutral-800 dark:data-[state=active]:text-white"
                  >
                    <ChartAreaIcon className="h-4 w-4" />
                    Chart
                  </TabsTrigger>
                </TabsList>
              </div>

              <TabsContent value="grid">
                <div className="grid grid-cols-2 gap-4 sm:grid-cols-3 lg:grid-cols-6">
                  {filteredContributors?.map((contributor, index) => (
                    <Link
                      key={contributor.login}
                      href={contributor.html_url}
                      target="_blank"
                      className="group relative flex flex-col items-center rounded-xl border bg-white/50 p-4 transition-all hover:-translate-y-1 hover:bg-white hover:shadow-lg dark:border-neutral-800 dark:bg-neutral-900/50 dark:hover:bg-neutral-900 dark:hover:shadow-neutral-900/50"
                      style={{
                        animationDelay: `${index * 50}ms`,
                        animation: "fadeInUp 0.5s ease-out forwards",
                        opacity: 0,
                        transform: "translateY(10px)",
                      }}
                    >
                      <Avatar className="h-16 w-16 rounded-full ring-2 ring-neutral-200 transition-transform group-hover:scale-105 group-hover:ring-neutral-300 dark:ring-neutral-800 dark:group-hover:ring-neutral-700">
                        <AvatarImage
                          src={contributor.avatar_url}
                          alt={contributor.login}
                          className="object-cover"
                        />
                        <AvatarFallback className="text-xs">
                          {contributor.login.slice(0, 2).toUpperCase()}
                        </AvatarFallback>
                      </Avatar>

                      <div className="mt-3 text-center">
                        <span className="block text-sm font-medium text-neutral-900 transition-colors group-hover:text-neutral-700 dark:text-neutral-200 dark:group-hover:text-white">
                          {contributor.login}
                        </span>
                        <div className="mt-2 flex items-center justify-center gap-1">
                          <GitGraph className="h-3 w-3 text-neutral-500 transition-colors group-hover:text-neutral-700 dark:text-neutral-400 dark:group-hover:text-neutral-300" />
                          <span className="text-sm font-medium text-neutral-700 transition-colors group-hover:text-neutral-900 dark:text-neutral-300 dark:group-hover:text-white">
                            {contributor.contributions}
                          </span>
                        </div>
                      </div>
                    </Link>
                  ))}
                </div>
              </TabsContent>

              <TabsContent value="chart">
                <Card className="bg-white/50 p-6 dark:bg-neutral-900/50">
                  <ChartControls
                    showAll={showAllContributors}
                    setShowAll={setShowAllContributors}
                    // @ts-expect-error - contributors is not defined
                    total={contributors?.length - coreTeamMembers.length}
                  />

                  <ResponsiveContainer width="100%" height={400}>
                    <BarChart
                      data={filteredContributors?.slice(0, showAllContributors ? undefined : 10)}
                      margin={{ top: 10, right: 10, bottom: 20, left: 10 }}
                    >
                      <XAxis
                        dataKey="login"
                        interval={0}
                        tick={(props) => {
                          const { x, y, payload } = props;
                          const contributor = contributors?.find((c) => c.login === payload.value);

                          return (
                            <g transform={`translate(${x},${y})`}>
                              <foreignObject x="-12" y="8" width="24" height="24">
                                <Avatar className="h-6 w-6 rounded-full ring-1 ring-neutral-200 dark:ring-neutral-800">
                                  <AvatarImage src={contributor?.avatar_url} />
                                  <AvatarFallback className="text-[8px]">
                                    {payload.value.slice(0, 2).toUpperCase()}
                                  </AvatarFallback>
                                </Avatar>
                              </foreignObject>
                            </g>
                          );
                        }}
                        height={60}
                        className="text-neutral-600 dark:text-neutral-400"
                      />
                      <YAxis
                        stroke="currentColor"
                        fontSize={12}
                        tickLine={false}
                        axisLine={false}
                        tickFormatter={(value) => `${value}`}
                        className="text-neutral-600 dark:text-neutral-400"
                      />
                      <Tooltip
                        cursor={{ fill: "rgb(0 0 0 / 0.05)" }}
                        content={({ active, payload }) => {
                          if (active && payload && payload.length) {
                            const data = payload[0].payload;
                            return (
                              <div className="rounded-lg border border-neutral-200 bg-white p-3 shadow-lg dark:border-neutral-800 dark:bg-neutral-900">
                                <div className="flex items-center gap-2">
                                  <Avatar className="h-8 w-8 ring-1 ring-neutral-200 dark:ring-neutral-800">
                                    <AvatarImage src={data.avatar_url} />
                                    <AvatarFallback>
                                      {data.login.slice(0, 2).toUpperCase()}
                                    </AvatarFallback>
                                  </Avatar>
                                  <div>
                                    <div className="text-sm font-medium text-neutral-900 dark:text-white">
                                      {data.login}
                                    </div>
                                    <div className="flex items-center gap-1 text-xs text-neutral-600 dark:text-neutral-400">
                                      <GitGraph className="h-3 w-3" />
                                      <span>{data.contributions} commits</span>
                                    </div>
                                  </div>
                                </div>
                              </div>
                            );
                          }
                          return null;
                        }}
                      />
                      <Bar
                        dataKey="contributions"
                        className="fill-neutral-900 dark:fill-white"
                        radius={[4, 4, 0, 0]}
                      />
                    </BarChart>
                  </ResponsiveContainer>
                </Card>
              </TabsContent>
            </Tabs>
          </div>
        </div>
      </div>
    </div>
  );
}

================
File: app/(full-width)/privacy/page.tsx
================
"use client";

import { Card, CardHeader, CardTitle } from "@/components/ui/card";
import { Github, Mail, ArrowLeft } from "lucide-react";
import { Button } from "@/components/ui/button";
import { useRouter } from "next/navigation";
import React from "react";

const LAST_UPDATED = "February 19, 2025";

export default function PrivacyPolicy() {
  const router = useRouter();

  return (
    <div className="relative min-h-screen w-full bg-background">
      {/* Back Button */}
      <div className="absolute left-4 top-4 md:left-8 md:top-8">
        <Button
          variant="ghost"
          size="sm"
          className="gap-2 text-muted-foreground hover:text-foreground"
          onClick={() => router.back()}
        >
          <ArrowLeft className="h-4 w-4" />
          Back
        </Button>
      </div>

      <div className="container mx-auto max-w-4xl px-4 py-16">
        <Card className="overflow-hidden border-none py-0 shadow-none">
          <CardHeader className="space-y-4">
            <div className="space-y-2 text-center">
              <CardTitle className="text-4xl font-bold tracking-tight">Privacy Policy</CardTitle>
              <div className="flex items-center justify-center gap-2">
                <p className="text-sm text-muted-foreground">Last updated: {LAST_UPDATED}</p>
                <span className="text-sm text-muted-foreground">•</span>
                <a href="/terms" className="text-sm">
                  Terms of Service
                </a>
              </div>
            </div>
          </CardHeader>

          <div className="space-y-6 px-6 pb-6">
            {sections.map((section) => (
              <div
                key={section.title}
                className="group rounded-xl border bg-card/50 p-6 shadow-sm transition-all hover:bg-card/80"
              >
                <h2 className="mb-4 text-xl font-semibold tracking-tight">{section.title}</h2>
                <div className="prose prose-sm prose-zinc dark:prose-invert max-w-none">
                  {section.content}
                </div>
              </div>
            ))}

            <div className="flex flex-wrap items-center justify-center gap-4 pt-6">
              <Button variant="outline" size="lg" className="gap-2" asChild>
                <a href="https://github.com/nizzyabi/mail0">
                  <Github className="h-4 w-4" />
                  View on GitHub
                </a>
              </Button>
            </div>
          </div>
        </Card>
      </div>
    </div>
  );
}

const sections = [
  {
    title: "Our Commitment to Privacy",
    content: (
      <p>
        At Mail0.io, we believe that privacy is a fundamental right. Our open-source email solution
        is built with privacy at its core, and we&apos;re committed to being transparent about how
        we handle your data.
      </p>
    ),
  },
  {
    title: "Google Account Integration",
    content: (
      <>
        <p className="mb-4">When you use Mail0.io with your Google Account:</p>
        <ul className="ml-4 list-disc space-y-2">
          <li>We request access to your Gmail data only after receiving your explicit consent</li>
          <li>We access only the necessary Gmail API scopes required for email functionality</li>
          <li>Your Google account credentials are never stored on our servers</li>
          <li>We use secure OAuth 2.0 authentication provided by Google</li>
          <li>
            You can revoke our access to your Google account at any time through your Google Account
            settings
          </li>
        </ul>
      </>
    ),
  },
  {
    title: "Data Collection and Usage",
    content: (
      <div className="space-y-6">
        <div>
          <h3 className="mb-3 text-lg font-medium">Google Services Data Handling</h3>
          <ul className="ml-4 list-disc space-y-2">
            <li>Email data is processed in accordance with Google API Services User Data Policy</li>
            <li>
              We only process and display email data - we don&apos;t store copies of your emails
            </li>
            <li>
              All data transmission between our service and Google is encrypted using
              industry-standard protocols
            </li>
            <li>
              We maintain limited temporary caches only as necessary for application functionality
            </li>
          </ul>
        </div>
        <div>
          <h3 className="mb-3 text-lg font-medium">Self-Hosted Instances</h3>
          <ul className="ml-4 list-disc space-y-2">
            <li>
              When you self-host Mail0.io, your email data remains entirely under your control
            </li>
            <li>No data is sent to our servers or third parties without your explicit consent</li>
            <li>You maintain complete ownership and responsibility for your data</li>
          </ul>
        </div>
      </div>
    ),
  },
  {
    title: "Data Protection and Security",
    content: (
      <ul className="ml-4 list-disc space-y-2">
        <li>End-to-end encryption for all email communications</li>
        <li>Secure OAuth 2.0 authentication for Google services</li>
        <li>Regular security audits and updates</li>
        <li>Open-source codebase for transparency and community review</li>
        <li>Compliance with Google API Services User Data Policy</li>
      </ul>
    ),
  },
  {
    title: "Google User Data Handling",
    content: (
      <div className="space-y-6">
        <div>
          <h3 className="mb-3 text-lg font-medium">Data Access and Usage</h3>
          <ul className="ml-4 list-disc space-y-2">
            <li>
              We access the following Google user data: email content, attachments, and metadata
              through Gmail API
            </li>
            <li>This data is used exclusively for providing email functionality within Mail0.io</li>
            <li>No Google user data is used for advertising or marketing purposes</li>
            <li>We maintain detailed logs of all data access for security and compliance</li>
          </ul>
        </div>
        <div>
          <h3 className="mb-3 text-lg font-medium">Data Sharing and Transfer</h3>
          <ul className="ml-4 list-disc space-y-2">
            <li>
              Google user data is never shared with third parties except as required for core
              service functionality
            </li>
            <li>
              When necessary, we only work with service providers who comply with Google API
              Services User Data Policy
            </li>
            <li>All service providers are bound by strict confidentiality agreements</li>
            <li>
              We maintain a current list of all third-party service providers with access to Google
              user data
            </li>
          </ul>
        </div>
        <div>
          <h3 className="mb-3 text-lg font-medium">Data Retention and Deletion</h3>
          <ul className="ml-4 list-disc space-y-2">
            <li>Email data is processed in real-time and not permanently stored</li>
            <li>Temporary caches are automatically cleared within 24 hours</li>
            <li>All Google user data is permanently deleted when you revoke application access</li>
            <li>
              You can request immediate deletion of all your Google user data by contacting
              nizabizaher@gmail.com
            </li>
          </ul>
        </div>
      </div>
    ),
  },
  {
    title: "Limited Use Disclosure",
    content: (
      <div>
        Our use and transfer to any other app of information received from Google APIs will adhere
        to the{" "}
        <a
          href="https://developers.google.com/terms/api-services-user-data-policy"
          className="inline-flex items-center text-blue-600 hover:text-blue-800"
          target="_blank"
          rel="noopener noreferrer"
        >
          Google API Services User Data Policy
          <svg className="ml-1 h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path
              strokeLinecap="round"
              strokeLinejoin="round"
              strokeWidth={2}
              d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"
            />
          </svg>
        </a>
        , including the Limited Use requirements.
      </div>
    ),
  },
  {
    title: "Your Rights and Controls",
    content: (
      <ul className="ml-4 list-disc space-y-2">
        <li>Right to revoke access to your Google account at any time</li>
        <li>Right to request deletion of any cached data</li>
        <li>Right to export your data</li>
        <li>Right to lodge complaints about data handling</li>
      </ul>
    ),
  },
  {
    title: "Contact Us",
    content: (
      <div className="space-y-3">
        <p>For privacy-related questions or concerns:</p>
        <div className="flex flex-col space-y-2">
          <a
            href="mailto:nizabizaher@gmail.com"
            className="inline-flex items-center text-blue-600 hover:text-blue-800"
          >
            <Mail className="mr-2 h-4 w-4" />
            nizabizaher@gmail.com
          </a>
          <a
            href="https://github.com/nizzyabi/mail0"
            className="inline-flex items-center text-blue-600 hover:text-blue-800"
          >
            <Github className="mr-2 h-4 w-4" />
            Open an issue on GitHub
          </a>
        </div>
      </div>
    ),
  },
  {
    title: "Updates to This Policy",
    content: (
      <p>
        We may update this privacy policy from time to time. We will notify users of any material
        changes through our application or website.
      </p>
    ),
  },
];

================
File: app/(full-width)/terms/page.tsx
================
"use client";

import { Card, CardHeader, CardTitle } from "@/components/ui/card";
import { Github, ArrowLeft } from "lucide-react";
import { Button } from "@/components/ui/button";
import { useRouter } from "next/navigation";
import React from "react";

const LAST_UPDATED = "February 13, 2025";

export default function TermsOfService() {
  const router = useRouter();

  return (
    <div className="relative min-h-screen w-full bg-background">
      {/* Back Button */}
      <div className="absolute left-4 top-4 md:left-8 md:top-8">
        <Button
          variant="ghost"
          size="sm"
          className="gap-2 text-muted-foreground hover:text-foreground"
          onClick={() => router.back()}
        >
          <ArrowLeft className="h-4 w-4" />
          Back
        </Button>
      </div>

      <div className="container mx-auto max-w-4xl px-4 py-16">
        <Card className="overflow-hidden border-none py-0 shadow-none">
          <CardHeader className="space-y-4">
            <div className="space-y-2 text-center">
              <CardTitle className="text-4xl font-bold tracking-tight">Terms of Service</CardTitle>
              <p className="text-sm text-muted-foreground">Last updated: {LAST_UPDATED}</p>
            </div>
          </CardHeader>

          <div className="space-y-6 px-6 pb-6">
            {sections.map((section) => (
              <div
                key={section.title}
                className="group rounded-xl border bg-card/50 p-6 shadow-sm transition-all hover:bg-card/80"
              >
                <h2 className="mb-4 text-xl font-semibold tracking-tight">{section.title}</h2>
                <div className="prose prose-sm prose-zinc dark:prose-invert max-w-none">
                  {section.content}
                </div>
              </div>
            ))}

            <div className="flex justify-center pt-6">
              <Button variant="outline" size="lg" className="gap-2" asChild>
                <a href="https://github.com/nizzyabi/mail0">
                  <Github className="h-4 w-4" />
                  View on GitHub
                </a>
              </Button>
            </div>
          </div>
        </Card>
      </div>
    </div>
  );
}

const sections = [
  {
    title: "Overview",
    content: (
      <p>
        Mail0.io is an open-source email solution that enables users to self-host their email
        service or integrate with external email providers. By using Mail0.io, you agree to these
        terms.
      </p>
    ),
  },
  {
    title: "Service Description",
    content: (
      <div className="space-y-8">
        <div>
          <h3 className="mb-3 text-xl font-medium text-card-foreground">Self-Hosted Service</h3>
          <ul className="ml-4 list-disc space-y-2">
            <li>Mail0.io provides software that users can deploy on their own infrastructure</li>
            <li>Users are responsible for their own hosting, maintenance, and compliance</li>
            <li>The software is provided &quot;as is&quot; under the MIT License</li>
          </ul>
        </div>
        <div>
          <h3 className="mb-3 text-xl font-medium text-card-foreground">
            External Email Integration
          </h3>
          <ul className="ml-4 list-disc space-y-2">
            <li>Mail0.io can integrate with third-party email providers</li>
            <li>Users must comply with third-party providers&apos; terms of service</li>
            <li>We are not responsible for third-party service disruptions</li>
          </ul>
        </div>
      </div>
    ),
  },
  {
    title: "User Responsibilities",
    content: (
      <div className="mt-4 space-y-3 text-muted-foreground">
        <p>Users agree to:</p>
        <ul className="ml-4 list-disc space-y-2">
          <li>Comply with all applicable laws and regulations</li>
          <li>Maintain the security of their instance</li>
          <li>Not use the service for spam or malicious purposes</li>
          <li>Respect intellectual property rights</li>
          <li>Report security vulnerabilities responsibly</li>
        </ul>
      </div>
    ),
  },
  {
    title: "Software License",
    content: (
      <div className="mt-4 space-y-3 text-muted-foreground">
        <p>Mail0.io is licensed under the MIT License:</p>
        <ul className="ml-4 list-disc space-y-2">
          <li>Users can freely use, modify, and distribute the software</li>
          <li>The software comes with no warranties</li>
          <li>Users must include the original license and copyright notice</li>
        </ul>
      </div>
    ),
  },
  {
    title: "Community Guidelines",
    content: (
      <div className="mt-4 space-y-3 text-muted-foreground">
        <p>Users participating in our community agree to:</p>
        <ul className="ml-4 list-disc space-y-2">
          <li>Follow our code of conduct</li>
          <li>Contribute constructively to discussions</li>
          <li>Respect other community members</li>
          <li>Report inappropriate behavior</li>
        </ul>
      </div>
    ),
  },
  {
    title: "Contact Information",
    content: (
      <div className="mt-4 space-y-3 text-muted-foreground">
        <p>For questions about these terms:</p>
        <div className="flex flex-col space-y-2">
          <a
            href="https://github.com/nizzyabi/mail0"
            className="inline-flex items-center text-blue-600 hover:text-blue-800"
          >
            <Github className="mr-2 h-4 w-4" />
            Open an issue on GitHub
          </a>
        </div>
      </div>
    ),
  },
];

================
File: app/(full-width)/layout.tsx
================
export default function FullWidthLayout({ children }: { children: React.ReactNode }) {
  return <>{children}</>;
}

================
File: app/(routes)/.well-known/microsoft-identity-association/route.ts
================
import { NextResponse } from "next/server";

export function GET() {
  return new NextResponse(
    JSON.stringify({
      associatedApplications: [
        {
          applicationId: "80b11343-e52c-4969-81e8-faebfed78a67",
        },
      ],
    }),
  );
}

================
File: app/(routes)/.well-known/microsoft-identity-association.json/route.ts
================
import { NextResponse } from "next/server";

export function GET() {
  return new NextResponse(
    JSON.stringify({
      associatedApplications: [
        {
          applicationId: "ecf043a0-41bb-4c89-bd31-7e3f272f8e3c",
        },
      ],
    }),
    {
      headers: {
        "Content-Type": "application/json",
      },
    },
  );
}

================
File: app/(routes)/developer/page.tsx
================
"use client";

import { Github, Book, Users, Terminal, Code2, Webhook, ArrowRight, ArrowLeft } from "lucide-react";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { useRouter } from "next/navigation";
import Link from "next/link";

const developerResources = [
  {
    title: "API Documentation",
    description: "Comprehensive API references and guides",
    details: "Explore our REST APIs, WebSocket endpoints, and integration guides.",
    icon: Book,
    href: "/docs",
    linkText: "View Documentation",
    color: "text-blue-500",
    bgColor: "bg-blue-500/10",
  },
  {
    title: "GitHub",
    description: "Open source repositories",
    details: "Access our source code, contribute, and track issues.",
    icon: Github,
    href: "https://github.com",
    linkText: "View Repository",
    color: "text-purple-500",
    bgColor: "bg-purple-500/10",
  },
  {
    title: "Contributing",
    description: "Join our community",
    details: "Learn how to contribute to our open source projects.",
    icon: Users,
    href: "/contributing",
    linkText: "Contribute",
    color: "text-green-500",
    bgColor: "bg-green-500/10",
  },
  {
    title: "CLI Tools",
    description: "Command line utilities",
    details: "Download and install our command line tools.",
    icon: Terminal,
    href: "/cli",
    linkText: "View CLI Docs",
    color: "text-yellow-500",
    bgColor: "bg-yellow-500/10",
  },
  {
    title: "SDKs",
    description: "Development kits",
    details: "Find SDKs for your preferred programming language.",
    icon: Code2,
    href: "/sdks",
    linkText: "View SDKs",
    color: "text-red-500",
    bgColor: "bg-red-500/10",
  },
  {
    title: "Webhooks",
    description: "Event notifications",
    details: "Set up and manage webhook integrations.",
    icon: Webhook,
    href: "/webhooks",
    linkText: "Configure",
    color: "text-orange-500",
    bgColor: "bg-orange-500/10",
  },
] as const;

export default function DeveloperPage() {
  const router = useRouter();

  return (
    <div className="flex min-h-screen w-full flex-col bg-background">
      <div className="flex-1 overflow-y-auto">
        <div className="mx-auto max-w-[1600px] p-4 md:p-6 lg:p-8">
          <div className="sticky top-0 z-10 mb-8 bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60">
            <Button
              variant="ghost"
              size="sm"
              onClick={() => router.back()}
              className="mb-6 gap-2 text-muted-foreground hover:text-foreground"
            >
              <ArrowLeft className="h-4 w-4" />
              Back
            </Button>

            <div className="space-y-4">
              <h1 className="text-2xl font-bold sm:text-3xl">Developer Resources</h1>
              <p className="text-base text-muted-foreground sm:text-lg">
                Everything you need to build with Mail0&apos;s APIs and tools.
              </p>
            </div>
          </div>

          <div className="grid grid-cols-1 gap-4 pb-4 sm:gap-6 md:grid-cols-2 lg:grid-cols-3">
            {developerResources.map((resource) => (
              <Card key={resource.title} className="transition-all hover:shadow-md">
                <CardHeader className="sm:p-6">
                  <div className="flex items-start gap-4 sm:items-center">
                    <div className={`shrink-0 rounded-lg ${resource.bgColor} p-2.5`}>
                      <resource.icon className={`h-5 w-5 sm:h-6 sm:w-6 ${resource.color}`} />
                    </div>
                    <div>
                      <CardTitle className="text-lg sm:text-xl">{resource.title}</CardTitle>
                      <CardDescription className="text-sm">{resource.description}</CardDescription>
                    </div>
                  </div>
                </CardHeader>
                <CardContent className="space-y-4 px-4 pb-4 sm:p-6">
                  <p className="text-sm text-muted-foreground">{resource.details}</p>
                  <Button
                    asChild
                    variant="outline"
                    className="w-full justify-between hover:bg-secondary"
                  >
                    <Link href={resource.href}>
                      <span className="flex items-center justify-between">
                        {resource.linkText}
                        <ArrowRight className="ml-2 h-4 w-4" />
                      </span>
                    </Link>
                  </Button>
                </CardContent>
              </Card>
            ))}
          </div>

          <div className="mt-8 rounded-lg border bg-card p-4 sm:mt-12 sm:p-6">
            <div className="flex flex-col items-center gap-4 text-center sm:flex-row sm:text-left">
              <div className="flex-1 space-y-1">
                <h3 className="text-lg font-semibold sm:text-xl">Need Help?</h3>
                <p className="text-sm text-muted-foreground">
                  Can&apos;t find what you&apos;re looking for? Get in touch with our developer
                  support team.
                </p>
              </div>
              <Button asChild variant="default" className="w-full sm:w-auto">
                <Link href="/support">Contact Support</Link>
              </Button>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}

================
File: app/(routes)/mail/[folder]/page.tsx
================
import { cookies } from "next/headers";

import { accounts } from "@/components/mail/data";
import { Mail } from "@/components/mail/mail";

interface MailPageProps {
  params: Promise<{
    folder: string;
  }>;
}

const ALLOWED_FOLDERS = ["inbox", "draft", "sent", "spam", "trash", "archive"];

export default async function MailPage({ params }: MailPageProps) {
  const { folder } = await params;

  if (!ALLOWED_FOLDERS.includes(folder)) {
    return <div>Invalid folder</div>;
  }

  const cookieStore = await cookies();
  const layout = cookieStore.get("react-resizable-panels:layout:mail");
  const collapsed = cookieStore.get("react-resizable-panels:collapsed");

  const defaultLayout = layout ? JSON.parse(layout.value) : undefined;
  const defaultCollapsed = collapsed ? JSON.parse(collapsed.value) : undefined;

  return (
    <Mail
      accounts={accounts}
      folder={folder}
      defaultLayout={defaultLayout}
      defaultCollapsed={defaultCollapsed}
      navCollapsedSize={4}
    />
  );
}

================
File: app/(routes)/mail/under-construction/[path]/back-button.tsx
================
"use client";

import { Button } from "@/components/ui/button";
import { useRouter } from "next/navigation";
import { ArrowLeft } from "lucide-react";

export default function BackButton() {
  const router = useRouter();
  return (
    <Button
      variant="outline"
      onClick={() => router.push("/mail")}
      className="gap-2 text-muted-foreground"
    >
      <ArrowLeft className="h-4 w-4" />
      Go Back
    </Button>
  );
}

================
File: app/(routes)/mail/under-construction/[path]/page.tsx
================
"use client";

import { SidebarToggle } from "@/components/ui/sidebar-toggle";
import { Construction } from "lucide-react";
import BackButton from "./back-button";
import { use } from "react";

interface UnderConstructionProps {
  params: Promise<{
    path: string;
  }>;
}

export default function UnderConstruction({ params }: UnderConstructionProps) {
  const resolvedParams = use(params);
  // Decode the path parameter
  const decodedPath = decodeURIComponent(resolvedParams.path);

  return (
    <div className="flex min-h-[calc(100vh-4rem)] w-screen items-center justify-center px-4">
      <div className="flex flex-col items-center justify-between p-4">
        <div className="absolute left-2 top-2">
          <SidebarToggle className="block md:hidden" />
        </div>
        <div className="flex flex-col items-center text-center">
          <Construction className="h-16 w-16 animate-pulse text-muted-foreground" />
          <div className="mt-6 space-y-2">
            <h2 className="text-2xl font-semibold">Under Construction</h2>
            <p className="text-muted-foreground">
              <span className="block">The {decodedPath} page is currently under construction.</span>
              <span className="block">Check back soon!</span>
            </p>
          </div>
          <div className="mt-2 flex gap-2">
            <BackButton />
          </div>
        </div>
      </div>
    </div>
  );
}

================
File: app/(routes)/mail/layout.tsx
================
import { AppSidebar } from "@/components/ui/app-sidebar";

export default function MailLayout({ children }: { children: React.ReactNode }) {
  return (
    <>
      <AppSidebar />
      <div className="w-full bg-sidebar md:p-3">{children}</div>
    </>
  );
}

================
File: app/(routes)/settings/[...settings]/page.tsx
================
"use client";

import NotificationsPage from "../notifications/page";
import ConnectionsPage from "../connections/page";
import AppearancePage from "../appearance/page";
import ShortcutsPage from "../shortcuts/page";
import SecurityPage from "../security/page";
import { useParams } from "next/navigation";
import GeneralPage from "../general/page";

const settingsPages: Record<string, React.ComponentType> = {
  general: GeneralPage,
  connections: ConnectionsPage,
  security: SecurityPage,
  appearance: AppearancePage,
  shortcuts: ShortcutsPage,
  notifications: NotificationsPage,
};

export default function SettingsPage() {
  const params = useParams();
  const section = params.settings?.[0] || "general";

  const SettingsComponent = settingsPages[section];

  if (!SettingsComponent) {
    return <div>404 - Settings page not found</div>;
  }

  return <SettingsComponent />;
}

================
File: app/(routes)/settings/appearance/page.tsx
================
"use client";

import { Form, FormControl, FormField, FormItem, FormLabel } from "@/components/ui/form";
import { RadioGroup, RadioGroupItem } from "@/components/ui/radio-group";
import { SettingsCard } from "@/components/settings/settings-card";
import { ModeToggle } from "@/components/theme/theme-switcher";
import { zodResolver } from "@hookform/resolvers/zod";
import { Button } from "@/components/ui/button";
import { Label } from "@/components/ui/label";
import { useForm } from "react-hook-form";
import { useState } from "react";
import * as z from "zod";

// TODO: More customization options
const formSchema = z.object({
  inboxType: z.enum(["default", "important", "unread"]),
});

export default function AppearancePage() {
  const [isSaving, setIsSaving] = useState(false);

  const form = useForm<z.infer<typeof formSchema>>({
    resolver: zodResolver(formSchema),
    defaultValues: {
      inboxType: "default",
    },
  });

  function onSubmit(values: z.infer<typeof formSchema>) {
    setIsSaving(true);
    setTimeout(() => {
      console.log(values);
      setIsSaving(false);
    }, 1000);
  }

  return (
    <div className="grid gap-6">
      <SettingsCard
        title="Appearance"
        description="Customize colors, fonts and view options."
        footer={
          <div className="flex justify-end">
            <Button type="submit" form="appearance-form" disabled={isSaving}>
              {isSaving ? "Saving..." : "Save changes"}
            </Button>
          </div>
        }
      >
        <Form {...form}>
          <form id="appearance-form" onSubmit={form.handleSubmit(onSubmit)} className="space-y-8">
            <div className="space-y-4">
              <div className="space-y-2">
                <Label>Theme</Label>
                <ModeToggle className="w-full justify-start" />
              </div>

              <FormField
                control={form.control}
                name="inboxType"
                render={({ field }) => (
                  <FormItem className="space-y-2">
                    <FormLabel>Inbox Layout</FormLabel>
                    <FormControl>
                      <RadioGroup
                        onValueChange={field.onChange}
                        defaultValue={field.value}
                        className="grid gap-4 sm:grid-cols-3"
                      >
                        <div className="flex items-center space-x-2 rounded-lg border p-4">
                          <RadioGroupItem value="default" id="default" />
                          <Label htmlFor="default">Default</Label>
                        </div>
                        <div className="flex items-center space-x-2 rounded-lg border p-4">
                          <RadioGroupItem value="important" id="important" />
                          <Label htmlFor="important">Important First</Label>
                        </div>
                        <div className="flex items-center space-x-2 rounded-lg border p-4">
                          <RadioGroupItem value="unread" id="unread" />
                          <Label htmlFor="unread">Unread First</Label>
                        </div>
                      </RadioGroup>
                    </FormControl>
                  </FormItem>
                )}
              />
            </div>
          </form>
        </Form>
      </SettingsCard>
    </div>
  );
}

================
File: app/(routes)/settings/connections/page.tsx
================
"use client";

import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogHeader,
  DialogTitle,
  DialogTrigger,
  DialogClose,
} from "@/components/ui/dialog";
import { Tooltip, TooltipContent, TooltipTrigger } from "@/components/ui/tooltip";
import { SettingsCard } from "@/components/settings/settings-card";
import { emailProviders } from "@/constants/emailProviders";
import { useConnections } from "@/hooks/use-connections";
import { Skeleton } from "@/components/ui/skeleton";
import { Button } from "@/components/ui/button";
import { Plus, Trash } from "lucide-react";
import { useState } from "react";
import Image from "next/image";

export default function ConnectionsPage() {
  const { data: connections, isLoading } = useConnections();
  const [openTooltip, setOpenTooltip] = useState<string | null>(null);

  return (
    <div className="grid gap-6">
      <SettingsCard title="Email Connections" description="Connect your email accounts to Mail0.">
        <div className="space-y-6">
          {isLoading ? (
            <div className="grid gap-4">
              {[...Array(2)].map((_, i) => (
                <Skeleton key={i} className="h-16 w-full rounded-xl" />
              ))}
            </div>
          ) : connections?.length ? (
            <div className="grid gap-4">
              {connections.map((connection) => (
                <div
                  key={connection.id}
                  className="flex items-center justify-between rounded-xl border p-4"
                >
                  <div className="flex min-w-0 items-center gap-4">
                    {connection.picture ? (
                      <Image
                        src={connection.picture}
                        alt=""
                        className="h-12 w-12 shrink-0 rounded-lg object-cover"
                        width={48}
                        height={48}
                      />
                    ) : (
                      <div className="flex h-12 w-12 shrink-0 items-center justify-center rounded-lg bg-primary/10">
                        <svg viewBox="0 0 24 24" className="h-6 w-6 text-primary">
                          <path fill="currentColor" d={emailProviders[0].icon} />
                        </svg>
                      </div>
                    )}
                    <div className="flex min-w-0 flex-col gap-1">
                      <span className="truncate text-sm font-medium">{connection.name}</span>
                      <div className="flex items-center gap-2 text-xs text-muted-foreground">
                        <Tooltip
                          delayDuration={0}
                          open={openTooltip === connection.id}
                          onOpenChange={(open) => {
                            if (window.innerWidth <= 768) {
                              setOpenTooltip(open ? connection.id : null);
                            }
                          }}
                        >
                          <TooltipTrigger asChild>
                            <span
                              className="max-w-[180px] cursor-default truncate sm:max-w-[240px] md:max-w-[300px]"
                              onClick={() => {
                                if (window.innerWidth <= 768) {
                                  setOpenTooltip(
                                    openTooltip === connection.id ? null : connection.id,
                                  );
                                }
                              }}
                            >
                              {connection.email}
                            </span>
                          </TooltipTrigger>
                          <TooltipContent side="bottom" align="start" className="select-all">
                            <div className="font-mono">{connection.email}</div>
                          </TooltipContent>
                        </Tooltip>
                        <span className="h-1 w-1 shrink-0 rounded-full bg-muted-foreground/30" />
                        <span className="shrink-0">Connected</span>
                      </div>
                    </div>
                  </div>
                  <Dialog>
                    <DialogTrigger asChild>
                      <Button
                        variant="ghost"
                        size="icon"
                        className="shrink-0 text-muted-foreground hover:text-primary"
                      >
                        <Trash className="h-4 w-4" />
                      </Button>
                    </DialogTrigger>
                    <DialogContent>
                      <DialogHeader>
                        <DialogTitle>Disconnect Email Account</DialogTitle>
                        <DialogDescription>
                          Are you sure you want to disconnect this email?
                        </DialogDescription>
                      </DialogHeader>
                      <div className="flex justify-end gap-4">
                        <DialogClose asChild>
                          <Button variant="outline">Cancel</Button>
                        </DialogClose>
                        <DialogClose asChild>
                          <Button variant="destructive">Remove</Button>
                        </DialogClose>
                      </div>
                    </DialogContent>
                  </Dialog>
                </div>
              ))}
            </div>
          ) : null}

          <Dialog>
            <DialogTrigger asChild>
              <Button className="w-full gap-2">
                <Plus className="h-4 w-4" />
                Add Email Account
              </Button>
            </DialogTrigger>
            <DialogContent className="sm:max-w-md">
              <DialogHeader>
                <DialogTitle>Connect Email</DialogTitle>
                <DialogDescription>Select an email provider to connect</DialogDescription>
              </DialogHeader>
              <div className="mt-4 grid grid-cols-2 gap-4">
                {emailProviders.map((provider) => (
                  <a key={provider.name} href={`/api/v1/mail/auth/${provider.providerId}/init`}>
                    <Button
                      variant="outline"
                      className="h-24 w-full flex-col items-center justify-center gap-2"
                    >
                      <svg viewBox="0 0 24 24" className="h-12 w-12">
                        <path fill="currentColor" d={provider.icon} />
                      </svg>
                      <span className="text-xs">{provider.name}</span>
                    </Button>
                  </a>
                ))}
                <Button
                  variant="outline"
                  className="h-24 flex-col items-center justify-center gap-2 border-dashed"
                >
                  <Plus className="h-12 w-12" />
                  <span className="text-xs">More Coming Soon</span>
                </Button>
              </div>
            </DialogContent>
          </Dialog>
        </div>
      </SettingsCard>
    </div>
  );
}

================
File: app/(routes)/settings/general/page.tsx
================
"use client";

import {
  Form,
  FormControl,
  FormDescription,
  FormField,
  FormItem,
  FormLabel,
} from "@/components/ui/form";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import { SettingsCard } from "@/components/settings/settings-card";
import { zodResolver } from "@hookform/resolvers/zod";
import { Globe, Clock, LogOut } from "lucide-react";
import { Button } from "@/components/ui/button";
import { Switch } from "@/components/ui/switch";
import { signOut } from "@/lib/auth-client";
import { useRouter } from "next/navigation";
import { useForm } from "react-hook-form";
import { useState } from "react";
import { toast } from "sonner";
import * as z from "zod";

const formSchema = z.object({
  language: z.string(),
  timezone: z.string(),
  dynamicContent: z.boolean(),
  externalImages: z.boolean(),
});

export default function GeneralPage() {
  const router = useRouter();
  const [isSaving, setIsSaving] = useState(false);

  const form = useForm<z.infer<typeof formSchema>>({
    resolver: zodResolver(formSchema),
    defaultValues: {
      language: "en",
      timezone: "UTC",
      dynamicContent: false,
      externalImages: true,
    },
  });

  function onSubmit(values: z.infer<typeof formSchema>) {
    setIsSaving(true);

    // TODO: Save settings in user's account

    // Simulate API call
    setTimeout(() => {
      console.log(values);
      setIsSaving(false);
    }, 1000);
  }

  const handleSignOut = async () => {
    await toast.promise(
      signOut({
        fetchOptions: {
          onSuccess: () => {
            router.push("/");
          },
        },
      }),
      {
        loading: "Signing out...",
        success: () => "Signed out successfully!",
        error: "Error signing out",
      },
    );
  };

  return (
    <div className="grid gap-6">
      <SettingsCard
        title="General Settings"
        description="Manage settings for your language and email display preferences."
        footer={
          <div className="flex justify-between">
            <Button variant="destructive" onClick={handleSignOut}>
              <LogOut className="mr-2 h-4 w-4" />
              Log out
            </Button>
            <Button type="submit" form="general-form" disabled={isSaving}>
              {isSaving ? "Saving..." : "Save changes"}
            </Button>
          </div>
        }
      >
        <Form {...form}>
          <form id="general-form" onSubmit={form.handleSubmit(onSubmit)} className="space-y-8">
            <FormField
              control={form.control}
              name="language"
              render={({ field }) => (
                <FormItem>
                  <FormLabel>Language</FormLabel>
                  <Select onValueChange={field.onChange} defaultValue={field.value}>
                    <FormControl>
                      <SelectTrigger className="max-w-64">
                        <Globe className="mr-2 h-4 w-4" />
                        <SelectValue placeholder="Select a language" />
                      </SelectTrigger>
                    </FormControl>
                    <SelectContent>
                      <SelectItem value="en">English</SelectItem>
                    </SelectContent>
                  </Select>
                  <FormDescription>
                    Choose your preferred language for the interface.
                  </FormDescription>
                </FormItem>
              )}
            />
            <FormField
              control={form.control}
              name="timezone"
              render={({ field }) => (
                // TODO: Add all timezones
                <FormItem>
                  <FormLabel>Timezone</FormLabel>
                  <Select onValueChange={field.onChange} defaultValue={field.value}>
                    <FormControl>
                      <SelectTrigger className="max-w-64">
                        <Clock className="mr-2 h-4 w-4" />
                        <SelectValue placeholder="Select a timezone" />
                      </SelectTrigger>
                    </FormControl>
                    <SelectContent>
                      <SelectItem value="UTC">UTC</SelectItem>
                      <SelectItem value="America/New_York">Eastern Time (ET)</SelectItem>
                      <SelectItem value="America/Chicago">Central Time (CT)</SelectItem>
                      <SelectItem value="America/Denver">Mountain Time (MT)</SelectItem>
                      <SelectItem value="America/Los_Angeles">Pacific Time (PT)</SelectItem>
                      <SelectItem value="Europe/London">British Time (BST)</SelectItem>
                      <SelectItem value="Europe/Paris">Central European Time (CET)</SelectItem>
                      <SelectItem value="Asia/Tokyo">Japan Standard Time (JST)</SelectItem>
                    </SelectContent>
                  </Select>
                </FormItem>
              )}
            />
            <FormField
              control={form.control}
              name="dynamicContent"
              render={({ field }) => (
                <FormItem className="flex flex-row items-center justify-between rounded-lg border p-4">
                  <div className="space-y-0.5">
                    <FormLabel className="text-base">Dynamic Content</FormLabel>
                    <FormDescription>Allow emails to display dynamic content.</FormDescription>
                  </div>
                  <FormControl>
                    <Switch checked={field.value} onCheckedChange={field.onChange} />
                  </FormControl>
                </FormItem>
              )}
            />
            <FormField
              control={form.control}
              name="externalImages"
              render={({ field }) => (
                <FormItem className="flex flex-row items-center justify-between rounded-lg border p-4">
                  <div className="space-y-0.5">
                    <FormLabel className="text-base">Display External Images</FormLabel>
                    <FormDescription>
                      Allow emails to display images from external sources.
                    </FormDescription>
                  </div>
                  <FormControl>
                    <Switch checked={field.value} onCheckedChange={field.onChange} />
                  </FormControl>
                </FormItem>
              )}
            />
          </form>
        </Form>
      </SettingsCard>
    </div>
  );
}

================
File: app/(routes)/settings/notifications/page.tsx
================
"use client";

import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormDescription,
} from "@/components/ui/form";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import { SettingsCard } from "@/components/settings/settings-card";
import { zodResolver } from "@hookform/resolvers/zod";
import { Button } from "@/components/ui/button";
import { Switch } from "@/components/ui/switch";
import { useForm } from "react-hook-form";
import { Bell } from "lucide-react";
import { useState } from "react";
import * as z from "zod";

const formSchema = z.object({
  newMailNotifications: z.enum(["none", "important", "all"]),
  marketingCommunications: z.boolean(),
});

export default function NotificationsPage() {
  const [isSaving, setIsSaving] = useState(false);

  const form = useForm<z.infer<typeof formSchema>>({
    resolver: zodResolver(formSchema),
    defaultValues: {
      newMailNotifications: "all",
      marketingCommunications: false,
    },
  });

  function onSubmit(values: z.infer<typeof formSchema>) {
    setIsSaving(true);
    setTimeout(() => {
      console.log(values);
      setIsSaving(false);
    }, 1000);
  }

  return (
    <div className="grid gap-6">
      <SettingsCard
        title="Notifications"
        description="Choose what notifications you want to receive."
        footer={
          <div className="flex justify-between">
            <Button type="button" variant="outline" onClick={() => form.reset()}>
              Reset to Defaults
            </Button>
            <Button type="submit" form="notifications-form" disabled={isSaving}>
              {isSaving ? "Saving..." : "Save Changes"}
            </Button>
          </div>
        }
      >
        <Form {...form}>
          <form
            id="notifications-form"
            onSubmit={form.handleSubmit(onSubmit)}
            className="space-y-6"
          >
            <FormField
              control={form.control}
              name="newMailNotifications"
              render={({ field }) => (
                <FormItem>
                  <FormLabel>New Mail Notifications</FormLabel>
                  <Select onValueChange={field.onChange} defaultValue={field.value}>
                    <FormControl>
                      <SelectTrigger className="w-[240px]">
                        <Bell className="mr-2 h-4 w-4" />
                        <SelectValue placeholder="Select notification level" />
                      </SelectTrigger>
                    </FormControl>
                    <SelectContent>
                      <SelectItem value="none">None</SelectItem>
                      <SelectItem value="important">Important Only</SelectItem>
                      <SelectItem value="all">All Messages</SelectItem>
                    </SelectContent>
                  </Select>
                  <FormDescription>
                    Choose which messages you want to receive notifications for
                  </FormDescription>
                </FormItem>
              )}
            />
            <FormField
              control={form.control}
              name="marketingCommunications"
              render={({ field }) => (
                <FormItem className="flex items-center justify-between rounded-lg border p-4">
                  <div className="space-y-0.5">
                    <FormLabel className="text-base">Marketing Communications</FormLabel>
                    <FormDescription>Receive updates about new features</FormDescription>
                  </div>
                  <FormControl>
                    <Switch checked={field.value} onCheckedChange={field.onChange} />
                  </FormControl>
                </FormItem>
              )}
            />
          </form>
        </Form>
      </SettingsCard>
    </div>
  );
}

================
File: app/(routes)/settings/security/page.tsx
================
import { SettingsCard } from "@/components/settings/settings-card";
import { Switch } from "@/components/ui/switch";
import { Button } from "@/components/ui/button";
import { Label } from "@/components/ui/label";
import { KeyRoundIcon } from "lucide-react";

export default function SecurityPage() {
  return (
    <div className="grid gap-6">
      <SettingsCard
        title="Security"
        description="Manage your security preferences and account protection."
        footer={
          <div className="flex items-center gap-2">
            <Button className="text-xs sm:text-base" variant="outline">
              <KeyRoundIcon className="mr-2 h-4 w-4" />
              Change Password
            </Button>
            <Button className="text-xs sm:text-base" variant="destructive">
              Delete Account
            </Button>
          </div>
        }
      >
        <div className="grid gap-6">
          <div className="flex flex-col gap-6 divide-y">
            <div className="flex items-center justify-between pt-2">
              <div className="space-y-1">
                <Label className="text-base">Two-Factor Authentication</Label>
                <p className="text-sm text-muted-foreground">
                  Add an extra layer of security to your account
                </p>
              </div>
              <Switch id="2fa" />
            </div>
            <div className="flex items-center justify-between pt-6">
              <div className="space-y-1">
                <Label className="text-base">Login Notifications</Label>
                <p className="text-sm text-muted-foreground">
                  Get notified about new login attempts
                </p>
              </div>
              <Switch id="login-notifications" defaultChecked />
            </div>
          </div>
        </div>
      </SettingsCard>
    </div>
  );
}

================
File: app/(routes)/settings/shortcuts/page.tsx
================
"use client";

import { SettingsCard } from "@/components/settings/settings-card";
import { keyboardShortcuts } from "@/config/shortcuts"; //import the shortcuts
import { Button } from "@/components/ui/button";
import { ReactNode } from "react";

export default function ShortcutsPage() {
  const shortcuts = keyboardShortcuts; //now gets shortcuts from the config file

  return (
    <div className="grid gap-6">
      <SettingsCard
        title="Keyboard Shortcuts"
        description="View and customize keyboard shortcuts for quick actions."
        footer={
          <div className="flex justify-between">
            <Button variant="outline">Reset to Defaults</Button>
            <Button>Save Changes</Button>
          </div>
        }
      >
        <div className="grid gap-2 md:grid-cols-2">
          {shortcuts.map((shortcut, index) => (
            <Shortcut key={index} keys={shortcut.keys}>
              {shortcut.action}
            </Shortcut>
          ))}
        </div>
      </SettingsCard>
    </div>
  );
}

function Shortcut({ children, keys }: { children: ReactNode; keys: string[] }) {
  return (
    <div className="flex items-center justify-between gap-2 rounded-lg border bg-card/50 p-2 text-sm text-muted-foreground">
      <span className="font-medium">{children}</span>
      <div className="flex select-none gap-1">
        {keys.map((key) => (
          <kbd
            key={key}
            className="h-6 rounded-[6px] border border-muted-foreground/10 bg-accent px-1.5 font-mono text-xs leading-6"
          >
            {key}
          </kbd>
        ))}
      </div>
    </div>
  );
}

================
File: app/(routes)/settings/layout.tsx
================
"use client";

import { ResizablePanel, ResizablePanelGroup } from "@/components/ui/resizable";
import { SidebarToggle } from "@/components/ui/sidebar-toggle";
import { AppSidebar } from "@/components/ui/app-sidebar";
import { ScrollArea } from "@/components/ui/scroll-area";
import { useState, useEffect } from "react";
import { Suspense } from "react";

export default function SettingsLayout({ children }: { children: React.ReactNode }) {
  return (
    <Suspense fallback={<SettingsLayoutSkeleton />}>
      <SettingsLayoutContent>{children}</SettingsLayoutContent>
    </Suspense>
  );
}

function SettingsLayoutContent({ children }: { children: React.ReactNode }) {
  const [isMobile, setIsMobile] = useState(false);

  useEffect(() => {
    const checkIsMobile = () => {
      setIsMobile(window.innerWidth < 768);
    };

    checkIsMobile();
    window.addEventListener("resize", checkIsMobile);

    return () => window.removeEventListener("resize", checkIsMobile);
  }, []);

  return (
    <>
      <AppSidebar className="hidden lg:flex" />
      <div className="w-full bg-sidebar md:p-3">
        <div className="rounded-inherit flex">
          <ResizablePanelGroup
            direction="horizontal"
            autoSaveId="settings-panel-layout"
            className="rounded-inherit gap-1.5 overflow-hidden"
          >
            <ResizablePanel
              className="border-none !bg-transparent"
              defaultSize={isMobile ? 100 : 35}
              minSize={isMobile ? 100 : 35}
            >
              <div className="flex-1 flex-col overflow-y-auto bg-card shadow-sm md:flex md:rounded-2xl md:shadow-sm">
                <div className="sticky top-0 z-10 flex items-center justify-between gap-1.5 p-2">
                  <SidebarToggle className="h-fit px-2" />
                  <h1 className="flex-1 text-center text-sm font-medium">Settings</h1>
                </div>
                <ScrollArea className="h-[calc(100dvh-56px)] p-2 pt-0 md:h-[calc(100dvh-(8px+8px+14px+44px))]">
                  <div className="p-4 md:p-6">{children}</div>
                </ScrollArea>
              </div>
            </ResizablePanel>
          </ResizablePanelGroup>
        </div>
      </div>
    </>
  );
}

function SettingsLayoutSkeleton() {
  return (
    <>
      <div className="hidden lg:flex lg:w-80" />
      <div className="w-full bg-sidebar md:p-3">
        <div className="h-[calc(100svh-1.5rem)] animate-pulse bg-muted md:rounded-2xl" />
      </div>
    </>
  );
}

================
File: app/(routes)/layout.tsx
================
"use client";

import { CommandPaletteProvider } from "@/components/context/command-palette-context";
import { dexieStorageProvider } from "@/lib/idb";
import { SWRConfig } from "swr";

export default function Layout({ children }: { children: React.ReactNode }) {
  return (
    <CommandPaletteProvider>
      <div className="flex h-screen w-screen overflow-hidden">
        <SWRConfig
          value={{
            provider: typeof window !== "undefined" ? dexieStorageProvider : undefined,
            keepPreviousData: true,
            revalidateOnFocus: false,
          }}
        >
          {children}
        </SWRConfig>
      </div>
    </CommandPaletteProvider>
  );
}

================
File: app/api/auth/[...all]/route.ts
================
import { toNextJsHandler } from "better-auth/next-js";
import { auth } from "@/lib/auth"; // path to your auth file

export const { POST, GET } = toNextJsHandler(auth);

================
File: app/api/auth/early-access/route.ts
================
import { NextRequest, NextResponse } from "next/server";
import { earlyAccess } from "@/db/schema";
import { env } from "@/lib/env";
import { db } from "@/db";

type PostgresError = {
  code: string;
  message: string;
};

// Rate limiting map: IP -> timestamps of requests
const rateLimitMap = new Map<string, number[]>();
const RATE_LIMIT = 3; // requests per hour
const HOUR_IN_MS = 60 * 60 * 1000;

export async function POST(req: NextRequest) {
  try {
    // Get IP address from request
    const ip = req.headers.get("x-forwarded-for") || "unknown";
    console.log("Request from IP:", ip);

    // Check rate limit
    const now = Date.now();
    const ipRequests = rateLimitMap.get(ip) || [];

    // Clean up old requests (older than 1 hour)
    const recentRequests = ipRequests.filter((timestamp) => now - timestamp < HOUR_IN_MS);

    if (recentRequests.length >= RATE_LIMIT) {
      console.log(`Rate limit exceeded for IP ${ip}. Recent requests: ${recentRequests.length}`);
      return NextResponse.json(
        { error: "Too many requests. Please try again later." },
        { status: 429 },
      );
    }

    recentRequests.push(now);
    rateLimitMap.set(ip, recentRequests);

    const body = await req.json();
    console.log("Request body:", body);

    const { email } = body;

    if (!email) {
      console.log("Email missing from request");
      return NextResponse.json({ error: "Email is required" }, { status: 400 });
    }

    const nowDate = new Date();

    try {
      // Log the attempted insert
      console.log("Attempting to insert email:", email);

      const result = await db.insert(earlyAccess).values({
        id: crypto.randomUUID(),
        email,
        createdAt: nowDate,
        updatedAt: nowDate,
      });

      console.log("Insert successful:", result);
    } catch (err) {
      const pgError = err as PostgresError;
      console.error("Database error:", {
        code: pgError.code,
        message: pgError.message,
        fullError: err,
      });

      // Handle duplicate emails more explicitly
      if (pgError.code === "23505") {
        return NextResponse.json(
          { message: "Email already registered for early access" },
          { status: 200 },
        );
      }

      throw err;
    }

    return NextResponse.json({ message: "Successfully joined early access" }, { status: 201 });
  } catch (error) {
    console.error("Early access registration error:", {
      error,
      stack: error instanceof Error ? error.stack : undefined,
    });

    // Return more detailed error in development
    if (env.NODE_ENV === "development") {
      return NextResponse.json(
        {
          error: "Internal server error",
          details: error instanceof Error ? error.message : String(error),
        },
        { status: 500 },
      );
    }

    return NextResponse.json({ error: "Internal server error" }, { status: 500 });
  }
}

================
File: app/api/v1/mail/auth/[providerId]/callback/route.ts
================
import { NextRequest, NextResponse } from "next/server";
import { createDriver } from "@/app/api/driver";
import { connection } from "@/db/schema";
import { env } from "@/lib/env";
import { db } from "@/db";

export async function GET(
  request: NextRequest,
  { params }: { params: Promise<{ providerId: string }> },
) {
  const searchParams = request.nextUrl.searchParams;
  const code = searchParams.get("code");
  const state = searchParams.get("state");

  if (!code || !state) {
    return NextResponse.redirect(`${env.NEXT_PUBLIC_APP_URL}/settings/email?error=missing_params`);
  }

  const { providerId } = await params;

  const driver = await createDriver(providerId, {});

  try {
    // Exchange the authorization code for tokens
    const { tokens } = await driver.getTokens(code);

    if (!tokens.access_token || !tokens.refresh_token) {
      console.error("Missing tokens:", tokens);
      return new NextResponse(JSON.stringify({ error: "Could not get token" }), { status: 400 });
    }

    // Get user info using the access token
    const userInfo = await driver.getUserInfo({
      access_token: tokens.access_token,
      refresh_token: tokens.refresh_token,
    });

    if (!userInfo.data?.emailAddresses?.[0]?.value) {
      console.error("Missing email in user info:", userInfo);
      return new NextResponse(JSON.stringify({ error: 'Missing "email" in user info' }), {
        status: 400,
      });
    }

    // Store the connection in the database
    await db.insert(connection).values({
      providerId,
      id: crypto.randomUUID(),
      userId: state,
      email: userInfo.data.emailAddresses[0].value,
      name: userInfo.data.names?.[0]?.displayName || "Unknown",
      picture: userInfo.data.photos?.[0]?.url || "",
      accessToken: tokens.access_token,
      refreshToken: tokens.refresh_token,
      scope: driver.getScope(),
      expiresAt: new Date(Date.now() + (tokens.expiry_date || 3600000)),
      createdAt: new Date(),
      updatedAt: new Date(),
    });

    return NextResponse.redirect(new URL("/connect-emails?success=true", request.url));
  } catch (error) {
    return new NextResponse(JSON.stringify({ error }));
  }
}

================
File: app/api/v1/mail/auth/[providerId]/init/route.ts
================
import { NextRequest, NextResponse } from "next/server";
import { createDriver } from "@/app/api/driver";
import { auth } from "@/lib/auth";

export async function GET(
  request: NextRequest,
  { params }: { params: Promise<{ providerId: string }> },
) {
  const session = await auth.api.getSession({ headers: request.headers });
  const userId = session?.user?.id;

  if (!userId) {
    return NextResponse.json({ error: "Not authenticated" }, { status: 401 });
  }

  const { providerId } = await params;
  const driver = await createDriver(providerId, {});
  const authUrl = driver.generateConnectionAuthUrl(userId);
  return NextResponse.redirect(authUrl);
}

================
File: app/api/v1/mail/connections/[connectionId]/route.ts
================
import { NextRequest, NextResponse } from "next/server";
import { connection, user } from "@/db/schema";
import { and, eq } from "drizzle-orm";
import { auth } from "@/lib/auth";
import { db } from "@/db";

export async function DELETE(
  request: NextRequest,
  { params }: { params: Promise<{ connectionId: string }> },
) {
  try {
    const session = await auth.api.getSession({ headers: request.headers });
    const userId = session?.user?.id;

    if (!userId) {
      return NextResponse.json({ error: "Not authenticated" }, { status: 401 });
    }

    const { connectionId } = await params;

    await db
      .delete(connection)
      .where(and(eq(connection.id, connectionId), eq(connection.userId, userId)));

    return NextResponse.json({ success: true });
  } catch (error) {
    console.error("Failed to delete connection:", error);
    return NextResponse.json({ error: "Failed to delete connection" }, { status: 500 });
  }
}

export async function PUT(
  request: NextRequest,
  { params }: { params: Promise<{ connectionId: string }> },
) {
  try {
    const session = await auth.api.getSession({ headers: request.headers });
    const userId = session?.user?.id;

    if (!userId) {
      return NextResponse.json({ error: "Not authenticated" }, { status: 401 });
    }

    const { connectionId } = await params;

    const [foundConnection] = await db
      .select()
      .from(connection)
      .where(and(eq(connection.id, connectionId), eq(connection.userId, userId)))
      .limit(1);

    if (!foundConnection) {
      return NextResponse.json({ error: "Connection not found" }, { status: 404 });
    }

    await db
      .update(user)
      .set({
        defaultConnectionId: connectionId,
      })
      .where(eq(user.id, userId));

    return NextResponse.json({ success: true });
  } catch (error) {
    console.error("Failed to update connection:", error);
    return NextResponse.json({ error: "Failed to update connection" }, { status: 500 });
  }
}

================
File: app/api/v1/mail/connections/route.ts
================
import { NextRequest, NextResponse } from "next/server";
import { connection } from "@/db/schema";
import { auth } from "@/lib/auth";
import { eq } from "drizzle-orm";
import { db } from "@/db";

export async function GET(request: NextRequest) {
  try {
    const session = await auth.api.getSession({ headers: request.headers });
    const userId = session?.user?.id;

    if (!userId) {
      return NextResponse.json({ error: "Not authenticated" }, { status: 401 });
    }

    const connections = await db
      .select({
        id: connection.id,
        email: connection.email,
        name: connection.name,
        picture: connection.picture,
        createdAt: connection.createdAt,
      })
      .from(connection)
      .where(eq(connection.userId, userId));

    return NextResponse.json({ connections });
  } catch (error) {
    console.error("Failed to fetch connections:", error);
    return NextResponse.json({ error: "Failed to fetch connections" }, { status: 500 });
  }
}

================
File: app/api/driver.ts
================
/* eslint-disable @typescript-eslint/no-explicit-any */

import { ParsedMessage, InitialThread } from "@/types";
import { type gmail_v1, google } from "googleapis";
import { env } from "@/lib/env";
import * as he from "he";

interface MailManager {
  get(id: string): Promise<ParsedMessage[] | undefined>;
  create(data: any): Promise<any>;
  delete(id: string): Promise<any>;
  list<T>(
    folder: string,
    query?: string,
    maxResults?: number,
    labelIds?: string[],
  ): Promise<(T & { threads: InitialThread[] }) | undefined>;
  count(): Promise<any>;
  generateConnectionAuthUrl(userId: string): string;
  getTokens(
    code: string,
  ): Promise<{ tokens: { access_token?: any; refresh_token?: any; expiry_date?: number } }>;
  getUserInfo(tokens: IConfig["auth"]): Promise<any>;
  getScope(): string;
  markAsRead(id: string): Promise<void>;
}

interface IConfig {
  auth?: {
    access_token: string;
    refresh_token: string;
  };
}

function fromBinary(str: string) {
  return decodeURIComponent(
    atob(str.replace(/-/g, "+").replace(/_/g, "/"))
      .split("")
      .map(function (c) {
        return "%" + ("00" + c.charCodeAt(0).toString(16)).slice(-2);
      })
      .join(""),
  );
}

const findHtmlBody = (parts: any[]): string => {
  for (const part of parts) {
    if (part.mimeType === "text/html" && part.body?.data) {
      console.log("✓ Driver: Found HTML content in message part");
      return part.body.data;
    }
    if (part.parts) {
      const found = findHtmlBody(part.parts);
      if (found) return found;
    }
  }
  console.log("⚠️ Driver: No HTML content found in message parts");
  return "";
};

const googleDriver = async (config: IConfig): Promise<MailManager> => {
  const auth = new google.auth.OAuth2(
    env.GOOGLE_CLIENT_ID as string,
    env.GOOGLE_CLIENT_SECRET as string,
    env.GOOGLE_REDIRECT_URI as string,
  );

  const getScope = () =>
    [
      "https://www.googleapis.com/auth/gmail.modify",
      "https://www.googleapis.com/auth/userinfo.profile",
      "https://www.googleapis.com/auth/userinfo.email",
    ].join(" ");
  if (config.auth) {
    auth.setCredentials({
      access_token: config.auth.access_token,
      refresh_token: config.auth.refresh_token,
      scope: getScope(),
    });
  }
  const parse = ({
    id,
    threadId,
    snippet,
    labelIds,
    payload,
  }: gmail_v1.Schema$Message): Omit<
    ParsedMessage,
    "body" | "processedHtml" | "blobUrl" | "totalReplies"
  > => {
    const receivedOn =
      payload?.headers?.find((h) => h.name?.toLowerCase() === "date")?.value || "Failed";
    const sender =
      payload?.headers?.find((h) => h.name?.toLowerCase() === "from")?.value || "Failed";
    const subject =
      payload?.headers?.find((h) => h.name?.toLowerCase() === "subject")?.value || "Failed";
    const references =
      payload?.headers?.find((h) => h.name?.toLowerCase() === "references")?.value || "";
    const inReplyTo =
      payload?.headers?.find((h) => h.name?.toLowerCase() === "in-reply-to")?.value || "";
    const messageId =
      payload?.headers?.find((h) => h.name?.toLowerCase() === "message-id")?.value || "";
    const [name, email] = sender.split("<");
    return {
      id: id || "ERROR",
      threadId: threadId || "",
      title: snippet ? he.decode(snippet).trim() : "ERROR",
      tags: labelIds || [],
      references,
      inReplyTo,
      sender: {
        name: name.replace(/"/g, "").trim(),
        email: `<${email}`,
      },
      unread: labelIds ? labelIds.includes("UNREAD") : false,
      receivedOn,
      subject,
      messageId,
    };
  };
  const normalizeSearch = (folder: string, q: string) => {
    if (folder === "trash") {
      return { folder: undefined, q: `in:trash ${q}` };
    }
    return { folder, q };
  };
  const gmail = google.gmail({ version: "v1", auth });
  return {
    markAsRead: async (id: string) => {
      await gmail.users.messages.modify({
        userId: "me",
        id,
        requestBody: {
          removeLabelIds: ["UNREAD"],
        },
      });
    },
    getScope,
    getUserInfo: (tokens: { access_token: string; refresh_token: string }) => {
      auth.setCredentials({ ...tokens, scope: getScope() });
      return google
        .people({ version: "v1", auth })
        .people.get({ resourceName: "people/me", personFields: "names,photos,emailAddresses" });
    },
    getTokens: async <T>(code: string) => {
      try {
        const { tokens } = await auth.getToken(code);
        return { tokens } as T;
      } catch (error) {
        console.error("Error getting tokens:", error);
        throw error;
      }
    },
    generateConnectionAuthUrl: (userId: string) => {
      return auth.generateAuthUrl({
        access_type: "offline",
        scope: getScope(),
        include_granted_scopes: true,
        prompt: "consent",
        state: userId,
      });
    },
    count: async () => {
      const folders = ["inbox", "spam"];
      // this sometimes fails due to wrong crednetials
      return await Promise.all(
        folders.map(async (folder) => {
          const { folder: normalizedFolder, q: normalizedQ } = normalizeSearch(folder, "");
          const labelIds = [];
          if (normalizedFolder) labelIds.push(normalizedFolder.toUpperCase());
          const res = await gmail.users.threads.list({
            userId: "me",
            q: normalizedQ ? normalizedQ : undefined,
            labelIds,
          });
          return res.data.resultSizeEstimate;
        }),
      );
    },
    list: async (folder, q, maxResults = 10, _labelIds: string[] = []) => {
      const { folder: normalizedFolder, q: normalizedQ } = normalizeSearch(folder, q ?? "");
      const labelIds = [..._labelIds];
      if (normalizedFolder) labelIds.push(normalizedFolder.toUpperCase());
      const res = await gmail.users.threads.list({
        userId: "me",
        q: normalizedQ ? normalizedQ : undefined,
        labelIds,
        maxResults,
      });
      const threads = await Promise.all(
        (res.data.threads || [])
          .map(async (thread) => {
            if (!thread.id) return null;
            const msg = await gmail.users.threads.get({
              userId: "me",
              id: thread.id,
              format: "metadata",
              metadataHeaders: ["From", "Subject", "Date"],
            });
            const message = msg.data.messages?.[0];
            const parsed = parse(message as any);
            return {
              ...parsed,
              body: "",
              processedHtml: "",
              blobUrl: "",
              totalReplies: msg.data.messages?.length || 0,
              threadId: thread.id,
            };
          })
          .filter((msg): msg is NonNullable<typeof msg> => msg !== null),
      );

      return { ...res.data, threads } as any;
    },
    get: async (id: string) => {
      const res = await gmail.users.threads.get({ userId: "me", id, format: "full" });
      const messages = res.data.messages?.map((message) => {
        const bodyData =
          message.payload?.body?.data ||
          (message.payload?.parts ? findHtmlBody(message.payload.parts) : "") ||
          message.payload?.parts?.[0]?.body?.data ||
          ""; // Fallback to first part

        if (!bodyData) {
          console.log("⚠️ Driver: No email body data found");
        } else {
          console.log("✓ Driver: Found email body data");
        }

        // Process the body content
        console.log("🔄 Driver: Processing email body...");
        const decodedBody = fromBinary(bodyData);

        console.log("✅ Driver: Email processing complete", {
          hasBody: !!bodyData,
          decodedBodyLength: decodedBody.length,
        });

        // Create the full email data
        const parsedData = parse(message);
        const fullEmailData = {
          ...parsedData,
          body: bodyData,
          processedHtml: "",
          // blobUrl: `data:text/html;charset=utf-8,${encodeURIComponent(decodedBody)}`,
          blobUrl: "",
          decodedBody,
        };

        // Log the result for debugging
        console.log("📧 Driver: Returning email data", {
          id: fullEmailData.id,
          hasBody: !!fullEmailData.body,
          hasBlobUrl: !!fullEmailData.blobUrl,
          blobUrlLength: fullEmailData.blobUrl.length,
        });

        return fullEmailData;
      });
      return messages;
    },
    create: async (data: any) => {
      const res = await gmail.users.messages.send({ userId: "me", requestBody: data });
      return res.data;
    },
    delete: async (id: string) => {
      const res = await gmail.users.messages.delete({ userId: "me", id });
      return res.data;
    },
  };
};

const SupportedProviders = {
  google: googleDriver,
};

export const createDriver = async (
  provider: keyof typeof SupportedProviders | string,
  config: IConfig,
): Promise<MailManager> => {
  const factory = SupportedProviders[provider as keyof typeof SupportedProviders];
  if (!factory) throw new Error("Provider not supported");
  switch (provider) {
    case "google":
      return factory(config);
    default:
      throw new Error("Provider not supported");
  }
};

================
File: app/error.tsx
================
"use client";

import { Button } from "@/components/ui/button";
import React, { useEffect } from "react";

export default function Error({ error, reset }: { error: Error; reset: () => void }) {
  useEffect(() => {
    console.error(error);
  }, [error]);

  return (
    <div className="flex w-full items-center justify-center bg-white text-center dark:bg-background">
      <div className="flex-col items-center justify-center dark:text-gray-100 md:flex">
        {/* Message */}
        <div className="space-y-2">
          <h2 className="text-2xl font-semibold tracking-tight">Something went wrong!</h2>
          <p className="text-muted-foreground">See the console for more information.</p>
        </div>

        {/* Buttons */}
        <div className="mt-2">
          <Button variant="outline" onClick={() => reset()} className="gap-2 text-muted-foreground">
            Try Again
          </Button>
        </div>
      </div>
    </div>
  );
}

================
File: app/globals.css
================
@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --foreground-rgb: 0, 0, 0;
  --background-start-rgb: 214, 219, 220;
  --background-end-rgb: 255, 255, 255;
}

@media (prefers-color-scheme: dark) {
  :root {
    --foreground-rgb: 255, 255, 255;
    --background-start-rgb: 0, 0, 0;
    --background-end-rgb: 0, 0, 0;
  }
}

@layer utilities {
  .text-balance {
    text-wrap: balance;
  }
}

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 240 10% 3.9%;
    --card: 0 0% 100%;
    --card-foreground: 240 10% 3.9%;
    --popover: 0 0% 100%;
    --popover-foreground: 240 10% 3.9%;
    --primary: 240 5.9% 10%;
    --primary-foreground: 0 0% 98%;
    --secondary: 240 4.8% 95.9%;
    --secondary-foreground: 240 5.9% 10%;
    --muted: 240 4.8% 95.9%;
    --muted-foreground: 240 3.8% 46.1%;
    --accent: 240 4.8% 95.9%;
    --accent-foreground: 240 5.9% 10%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 98%;
    --border: 240 5.9% 90%;
    --input: 240 5.9% 90%;
    --ring: 240 10% 3.9%;
    --chart-1: 12 76% 61%;
    --chart-2: 173 58% 39%;
    --chart-3: 197 37% 24%;
    --chart-4: 43 74% 66%;
    --chart-5: 27 87% 67%;
    --radius: 0.5rem;
    --sidebar-background: 0 0% 98%;
    --sidebar-foreground: 240 5.3% 26.1%;
    --sidebar-primary: 240 5.9% 10%;
    --sidebar-primary-foreground: 0 0% 98%;
    --sidebar-accent: 240 4.8% 95.9%;
    --sidebar-accent-foreground: 240 5.9% 10%;
    --sidebar-border: 220 13% 91%;
    --sidebar-ring: 217.2 91.2% 59.8%;
    --icon-color: black;
  }

  .dark {
    --background: 240 3.9% 7%;
    --foreground: 0 0% 98%;
    --card: 240 5.9% 10%;
    --card-foreground: 0 0% 98%;
    --popover: 240 3.4% 8%;
    --popover-foreground: 0 0% 99%;
    --primary: 0 0% 98%;
    --primary-foreground: 240 5.9% 10%;
    --secondary: 240 3.7% 15.9%;
    --secondary-foreground: 0 0% 98%;
    --muted: 240 3.7% 15.9%;
    --muted-foreground: 240 5% 64.9%;
    --accent: 240 3.7% 15.9%;
    --accent-foreground: 0 0% 98%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 0% 98%;
    --border: 240 3.7% 20%;
    --input: 240 3.7% 15.9%;
    --ring: 240 4.9% 83.9%;
    --chart-1: 220 70% 50%;
    --chart-2: 160 60% 45%;
    --chart-3: 30 80% 55%;
    --chart-4: 280 65% 60%;
    --chart-5: 340 75% 55%;
    --sidebar-background: 240 3.9% 7%;
    --sidebar-foreground: 240 4.8% 96.9%;
    --sidebar-primary: 224.3 76.3% 48%;
    --sidebar-primary-foreground: 0 0% 100%;
    --sidebar-accent: 240 3.7% 15.9%;
    --sidebar-accent-foreground: 240 4.8% 95.9%;
    --sidebar-border: 240 3.7% 15.9%;
    --sidebar-ring: 217.2 91.2% 59.8%;
    --icon-color: currentColor;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background font-sans text-foreground;
  }
}

.skeleton {
  * {
    pointer-events: none !important;
  }

  *[class^="text-"] {
    color: transparent;
    @apply animate-pulse select-none rounded-md bg-foreground/20;
  }

  .skeleton-bg {
    @apply bg-foreground/10;
  }

  .skeleton-div {
    @apply animate-pulse bg-foreground/20;
  }
}

.ProseMirror {
  outline: none;
}

.cm-editor,
.cm-gutters {
  @apply bg-background outline-none selection:bg-zinc-900 dark:bg-zinc-800 !important;
}

.ͼo.cm-focused > .cm-scroller > .cm-selectionLayer .cm-selectionBackground,
.ͼo.cm-selectionBackground,
.ͼo.cm-content::selection {
  @apply bg-zinc-200 dark:bg-zinc-900 !important;
}

.cm-activeLine,
.cm-activeLineGutter {
  @apply bg-transparent !important;
}

.cm-activeLine {
  @apply rounded-r-sm !important;
}

.cm-lineNumbers {
  @apply min-w-7;
}

.cm-foldGutter {
  @apply min-w-3;
}

.cm-lineNumbers .cm-activeLineGutter {
  @apply rounded-l-sm !important;
}

.suggestion-highlight {
  @apply bg-blue-200 hover:bg-blue-300 dark:bg-blue-500/40 dark:text-blue-50 dark:hover:bg-blue-400/50;
}

.dark [data-hide-on-theme="dark"],
.light [data-hide-on-theme="light"] {
  display: none;
}

@media (prefers-reduced-motion: no-preference) {
  ::view-transition-new(theme-transition) {
    clip-path: inset(0 0 100% 0);
    animation: slide-in-from-top 0.65s forwards cubic-bezier(0.65, 0, 0.35, 1);
  }

  ::view-transition-old(theme-transition) {
    animation: none;
  }

  @keyframes slide-in-from-top {
    to {
      clip-path: inset(0 0 0 0);
    }
  }
}

================
File: app/layout.tsx
================
import MailComposeModal from "@/components/mail/mail-compose-modal";
import { Geist, Geist_Mono } from "next/font/google";
import { Analytics } from "@vercel/analytics/react";
import { siteConfig } from "@/lib/site-config";
import { Toast } from "@/components/ui/toast";
import { Providers } from "@/lib/providers";
import { cn } from "@/lib/utils";
import { Suspense } from "react";
import "./globals.css";

// Import your CommandPaletteProvider
import { CommandPaletteProvider } from "@/components/context/command-palette-context";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata = siteConfig;

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en" suppressHydrationWarning>
      <body className={cn(geistSans.variable, geistMono.variable, "antialiased")}>
        <Providers attribute="class" defaultTheme="dark" enableSystem disableTransitionOnChange>
          <CommandPaletteProvider>
            <Suspense>
              <MailComposeModal />
            </Suspense>
            {children}
            <Toast />
            <Analytics />
          </CommandPaletteProvider>
        </Providers>
      </body>
    </html>
  );
}

================
File: app/not-found.tsx
================
import { NotFound } from "./(error)/not-found";

export default NotFound;

================
File: app/page.tsx
================
"use client";

import HeroImage from "@/components/home/hero-image";
import Navbar from "@/components/home/navbar";
import Hero from "@/components/home/hero";

export default function Home() {
  return (
    <div className="relative h-screen min-h-screen w-full overflow-hidden bg-grid-small-black/[0.09] dark:bg-grid-small-white/[0.025]">
      {/* <div className="pointer-events-none absolute inset-0 flex items-center justify-center">
        <div className="h-[500px] w-[500px] rounded-full bg-gradient-to-r from-orange-500/10 via-pink-500/10 to-purple-500/10 blur-[120px]" />
      </div> */}
      <div className="relative mx-auto mb-4 flex max-w-7xl flex-col">
        <Navbar />
        <Hero />
        <HeroImage />
      </div>
    </div>
  );
}

================
File: components/context/command-palette-context.tsx
================
"use client";

import {
  CommandDialog,
  CommandEmpty,
  CommandGroup,
  CommandInput,
  CommandItem,
  CommandList,
  CommandSeparator,
  CommandShortcut,
} from "@/components/ui/command";
import { DialogTitle, DialogDescription } from "@/components/ui/dialog";
import { useOpenComposeModal } from "@/hooks/use-open-compose-modal";
import { VisuallyHidden } from "@radix-ui/react-visually-hidden";
import { navigationConfig, NavItem } from "@/config/navigation";
import { ArrowUpRight, CircleHelp, Pencil } from "lucide-react";
import { useConnections } from "@/hooks/use-connections";
import { useRouter, usePathname } from "next/navigation";
import { keyboardShortcuts } from "@/config/shortcuts";
import { useSession, $fetch } from "@/lib/auth-client";
import { IConnection } from "@/types";
import { useState } from "react";
import Image from "next/image";
import { toast } from "sonner";
import * as React from "react";

type Props = {
  children?: React.ReactNode | React.ReactNode[];
};

type CommandPaletteContext = {
  open: boolean;
  setOpen: (open: boolean) => void;
  openModal: () => void;
};

const CommandPaletteContext = React.createContext<CommandPaletteContext | null>(null);

export function useCommandPalette() {
  const context = React.useContext(CommandPaletteContext);
  if (!context) {
    throw new Error("useCommandPalette must be used within a CommandPaletteProvider.");
  }
  return context;
}

export function CommandPaletteProvider({ children }: Props) {
  const [open, setOpen] = React.useState(false);
  const { open: openComposeModal } = useOpenComposeModal();
  const router = useRouter();
  const pathname = usePathname();
  const { data: session, refetch } = useSession();
  const { data: connections, mutate } = useConnections();
  const [searchValue, setSearchValue] = useState("");

  React.useEffect(() => {
    const down = (e: KeyboardEvent) => {
      if ((e.metaKey || e.ctrlKey) && e.key.toLowerCase() === "k") {
        e.preventDefault();
        setOpen((prevOpen) => !prevOpen);
      }
    };

    document.addEventListener("keydown", down);
    return () => document.removeEventListener("keydown", down);
  }, []);

  const runCommand = React.useCallback((command: () => unknown) => {
    setOpen(false);
    setSearchValue(""); // Clear search input on command execution
    command();
  }, []);

  const allCommands = React.useMemo(() => {
    const mailCommands: { group: string; item: NavItem }[] = [];
    const settingsCommands: { group: string; item: NavItem }[] = [];
    const otherCommands: { group: string; item: NavItem }[] = [];

    for (const sectionKey in navigationConfig) {
      const section = navigationConfig[sectionKey];
      section.sections.forEach((group) => {
        group.items.forEach((item) => {
          if (!(sectionKey === "settings" && item.isBackButton)) {
            if (sectionKey === "mail") {
              mailCommands.push({ group: sectionKey, item });
            } else if (sectionKey === "settings") {
              settingsCommands.push({ group: sectionKey, item });
            } else {
              otherCommands.push({ group: sectionKey, item });
            }
          } else if (sectionKey === "settings") {
            settingsCommands.push({ group: sectionKey, item });
          }
        });
      });
    }

    const combinedCommands = [
      { group: "Mail", items: mailCommands.map((c) => c.item) },
      { group: "Settings", items: settingsCommands.map((c) => c.item) },
      ...otherCommands.map((section) => ({ group: section.group, items: section.item })),
    ];

    const filteredCommands = combinedCommands.map((group) => {
      if (group.group === "Settings") {
        return {
          ...group,
          items: group.items.filter((item) => {
            return pathname.startsWith("/settings") || !item.isBackButton;
          }),
        };
      }
      return group;
    });

    return filteredCommands;
  }, [pathname]);

  const accountCommands = React.useMemo(() => {
    if (!session?.user || !connections?.length) {
      return [];
    }

    return connections
      .filter((connection) => connection.id !== session.connectionId) // Exclude current account
      .map((connection: IConnection) => ({
        group: "Accounts",
        item: {
          title: `Switch to ${connection.email}`,
          url: `/api/v1/mail/connections/${connection.id}`,
          icon: () => (
            <Image
              src={connection.picture || "/placeholder.svg"}
              alt={connection.name || connection.email}
              width={16}
              height={16}
              className="h-4 w-4 rounded-full"
            />
          ),
          onSelect: () => {
            runCommand(() => {
              // First, update the default connection ID in the database
              fetch(`/api/v1/mail/connections/${connection.id}`, { method: "PUT" })
                .then((response) => {
                  if (response.ok) {
                    console.log(`Successfully switched to account: ${connection.email}`);
                    // THEN, update the session using better-auth's $fetch
                    return $fetch("/api/auth/session", {
                      method: "POST",
                      body: JSON.stringify({ connectionId: connection.id }),
                    }); // Update the session
                  } else {
                    console.error(`Failed to switch account: ${connection.email}`);
                    // Display more specific error using sonner's toast
                    response.json().then((data) => {
                      toast.error("Error switching connection", {
                        description: data.error, // Use more specific error message
                      });
                    });
                    throw new Error("Failed to update default connection ID"); // Stop execution on failure
                  }
                })
                .then(() => {
                  // Refetch session and connections after successful update
                  refetch(); // VERY IMPORTANT: Refetch the session
                  mutate(); // Refetch the connections list
                  router.refresh(); // AND refresh the router to update server state
                  toast.success(`Successfully switched to account: ${connection.email}`); // Show a success message
                })
                .catch((error) => {
                  console.error("Error during account switch:", error);
                  toast.error("Error switching connection", { description: String(error) });
                });
            });
          },
        },
      }));
  }, [session, connections, router, runCommand, mutate, refetch]); // Added refetch

  // Filter commands based on search
  const filteredAccountCommands = React.useMemo(() => {
    const searchTerm = searchValue.toLowerCase();
    return accountCommands.filter(
      (command) =>
        command.item.title.toLowerCase().includes(searchTerm) || "switch".includes(searchTerm),
    );
  }, [accountCommands, searchValue]);

  const filteredAllCommands = React.useMemo(() => {
    const searchTerm = searchValue.toLowerCase();
    return allCommands
      .map((group) => ({
        ...group,
        items: group.items.filter((item) => item.title.toLowerCase().includes(searchTerm)),
      }))
      .filter((group) => group.items.length > 0);
  }, [allCommands, searchValue]);

  return (
    <CommandPaletteContext.Provider
      value={{
        open,
        setOpen,
        openModal: () => {
          setOpen(false);
          openComposeModal();
        },
      }}
    >
      <CommandDialog open={open} onOpenChange={setOpen}>
        <VisuallyHidden>
          <DialogTitle>Mail 0 - Command Palette</DialogTitle>
          <DialogDescription>Quick navigation and actions for Mail 0.</DialogDescription>
        </VisuallyHidden>
        <CommandInput
          autoFocus
          placeholder="Type a command or search..."
          value={searchValue}
          onValueChange={setSearchValue}
        />
        <CommandList>
          <CommandEmpty>No results found.</CommandEmpty>
          <CommandGroup>
            <CommandItem onSelect={() => runCommand(() => openComposeModal())}>
              <Pencil size={16} strokeWidth={2} className="opacity-60" aria-hidden="true" />
              <span>Compose message</span>
              <CommandShortcut>
                {keyboardShortcuts
                  .find((s: { action: string; keys: string[] }) => s.action === "New Email")
                  ?.keys.join(" ")}
              </CommandShortcut>
            </CommandItem>
          </CommandGroup>

          {/* Render other command groups */}
          {filteredAllCommands.map((group, groupIndex) => (
            <React.Fragment key={groupIndex}>
              {group.items.length > 0 && (
                <CommandGroup heading={group.group}>
                  {group.items.map((item) => (
                    <CommandItem
                      key={item.url}
                      onSelect={() =>
                        runCommand(() => {
                          router.push(item.url);
                        })
                      }
                    >
                      {item.icon && (
                        <item.icon
                          size={16}
                          strokeWidth={2}
                          className="opacity-60"
                          aria-hidden="true"
                        />
                      )}
                      <span>{item.title}</span>
                      {item.shortcut && <CommandShortcut>{item.shortcut}</CommandShortcut>}
                    </CommandItem>
                  ))}
                </CommandGroup>
              )}
              {groupIndex < filteredAllCommands.length - 1 && <CommandSeparator />}
            </React.Fragment>
          ))}

          {/* Render filtered account commands */}
          {filteredAccountCommands.length > 0 && (
            <>
              <CommandSeparator />
              <CommandGroup heading="Accounts">
                {filteredAccountCommands.map((account) => (
                  <CommandItem key={account.item.url} onSelect={account.item.onSelect}>
                    {account.item.icon && account.item.icon()}
                    <span>{account.item.title}</span>
                  </CommandItem>
                ))}
              </CommandGroup>
            </>
          )}
          <CommandSeparator />
          <CommandGroup heading="Help">
            <CommandItem onSelect={() => runCommand(() => console.log("Help with shortcuts"))}>
              <CircleHelp size={16} strokeWidth={2} className="opacity-60" aria-hidden="true" />
              <span>Help with shortcuts</span>
              <CommandShortcut>
                {keyboardShortcuts
                  .find(
                    (s: { action: string; keys: string[] }) => s.action === "Help with shortcuts",
                  )
                  ?.keys.join(" ")}
              </CommandShortcut>
            </CommandItem>
            <CommandItem
              onSelect={() =>
                runCommand(() => window.open("https://github.com/nizzyabi/mail0", "_blank"))
              }
            >
              <ArrowUpRight size={16} strokeWidth={2} className="opacity-60" aria-hidden="true" />
              <span>Go to docs</span>
            </CommandItem>
          </CommandGroup>
        </CommandList>
      </CommandDialog>
      {children}
    </CommandPaletteContext.Provider>
  );
}

================
File: components/context/sidebar-context.tsx
================
"use client";

import {
  SIDEBAR_COOKIE_MAX_AGE,
  SIDEBAR_COOKIE_NAME,
  SIDEBAR_KEYBOARD_SHORTCUT,
  SIDEBAR_WIDTH,
  SIDEBAR_WIDTH_ICON,
} from "@/lib/constants";
import { useIsMobile } from "@/hooks/use-mobile";
import { TooltipProvider } from "../ui/tooltip";
import { cn, getCookie } from "@/lib/utils";
import * as React from "react";

export type SidebarContext = {
  state: "expanded" | "collapsed";
  open: boolean;
  setOpen: (open: boolean) => void;
  openMobile: boolean;
  setOpenMobile: (open: boolean) => void;
  isMobile: boolean;
  toggleSidebar: () => void;
};

export const SidebarContext = React.createContext<SidebarContext | null>(null);

export function useSidebar() {
  const context = React.useContext(SidebarContext);
  if (!context) {
    throw new Error("useSidebar must be used within a SidebarProvider.");
  }

  return context;
}

export const SidebarProvider = React.forwardRef<
  HTMLDivElement,
  React.ComponentProps<"div"> & {
    defaultOpen?: boolean;
    open?: boolean;
    onOpenChange?: (open: boolean) => void;
  }
>(
  (
    {
      defaultOpen = true,
      open: openProp,
      onOpenChange: setOpenProp,
      className,
      style,
      children,
      ...props
    },
    ref,
  ) => {
    const isMobile = useIsMobile();
    const [openMobile, setOpenMobile] = React.useState(false);

    // This is the internal state of the sidebar.
    // We use openProp and setOpenProp for control from outside the component.
    const [_open, _setOpen] = React.useState(defaultOpen);
    const open = openProp ?? _open;
    const setOpen = React.useCallback(
      (value: boolean | ((value: boolean) => boolean)) => {
        const openState = typeof value === "function" ? value(open) : value;
        if (setOpenProp) {
          setOpenProp(openState);
        } else {
          _setOpen(openState);
        }

        // This sets the cookie to keep the sidebar state.
        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`;
      },
      [setOpenProp, open],
    );

    // Helper to toggle the sidebar.
    const toggleSidebar = React.useCallback(() => {
      return isMobile ? setOpenMobile((open) => !open) : setOpen((open) => !open);
    }, [isMobile, setOpen, setOpenMobile]);

    React.useEffect(() => {
      // In nextjs, browser apis are guarded so we need to do this in a use effect to not get an error that document is not defined.
      const sidebarCookie = getCookie(SIDEBAR_COOKIE_NAME);
      const isDefaultOpen = sidebarCookie ? sidebarCookie === "true" : defaultOpen;
      _setOpen(isDefaultOpen);
    }, [defaultOpen]);

    // Adds a keyboard shortcut to toggle the sidebar.
    React.useEffect(() => {
      const handleKeyDown = (event: KeyboardEvent) => {
        if (event.key === SIDEBAR_KEYBOARD_SHORTCUT && (event.metaKey || event.ctrlKey)) {
          event.preventDefault();
          toggleSidebar();
        }
      };

      window.addEventListener("keydown", handleKeyDown);
      return () => window.removeEventListener("keydown", handleKeyDown);
    }, [toggleSidebar]);

    // We add a state so that we can do data-state="expanded" or "collapsed".
    // This makes it easier to style the sidebar with Tailwind classes.
    const state = open ? "expanded" : "collapsed";

    const contextValue = React.useMemo<SidebarContext>(
      () => ({
        state,
        open,
        setOpen,
        isMobile,
        openMobile,
        setOpenMobile,
        toggleSidebar,
      }),
      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar],
    );

    return (
      <SidebarContext.Provider value={contextValue}>
        <TooltipProvider delayDuration={0}>
          <div
            style={
              {
                "--sidebar-width": SIDEBAR_WIDTH,
                "--sidebar-width-icon": SIDEBAR_WIDTH_ICON,
                ...style,
              } as React.CSSProperties
            }
            className={cn(
              "group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar",
              className,
            )}
            ref={ref}
            {...props}
          >
            {children}
          </div>
        </TooltipProvider>
      </SidebarContext.Provider>
    );
  },
);
SidebarProvider.displayName = "SidebarProvider";

================
File: components/draft/draftHooks/useDrafts.ts
================
import { draftsAtom, DraftType } from "@/store/draftStates";
import { useAtom } from "jotai";

export const useDrafts = () => {
  const [drafts, setDrafts] = useAtom(draftsAtom);

  const addDraft = (draft: DraftType) => {
    setDrafts((prevDrafts) => {
      const draftIndex = prevDrafts.findIndex((d) => d.id === draft.id);
      if (draftIndex !== -1) {
        // Update existing draft
        const updatedDrafts = [...prevDrafts];
        updatedDrafts[draftIndex] = { ...prevDrafts[draftIndex], ...draft };
        return updatedDrafts;
      } else {
        // Add new draft
        return [...prevDrafts, draft];
      }
    });
  };

  const removeDraft = (id: string) => {
    setDrafts((prev) => prev.filter((draft) => draft.id !== id));
  };

  return { drafts, addDraft, removeDraft };
};

================
File: components/draft/draft.tsx
================
"use client";

import { ResizableHandle, ResizablePanel, ResizablePanelGroup } from "@/components/ui/resizable";
import { AlignVerticalSpaceAround, Trash2 } from "lucide-react";
import { TooltipProvider } from "@/components/ui/tooltip";
import { Tabs, TabsContent } from "@/components/ui/tabs";
import { Separator } from "@/components/ui/separator";
import { SearchIcon } from "../icons/animated/search";
import { SidebarToggle } from "../ui/sidebar-toggle";
import { useDrafts } from "./draftHooks/useDrafts";
import { Button } from "@/components/ui/button";
import { DraftType } from "@/store/draftStates";
import { useState } from "react";
import * as React from "react";

export function Draft() {
  const { drafts, addDraft, removeDraft } = useDrafts();

  // Todo: store this in cookies / local storage
  const [isCompact, setIsCompact] = useState(false);
  const [selectedDraft, setSelectedDraft] = useState<DraftType | null>(null);
  const [isMobile, setIsMobile] = useState(false);

  // checking if the screen is mobile
  React.useEffect(() => {
    const checkIsMobile = () => {
      setIsMobile(window.innerWidth < 768);
    };
    checkIsMobile();
    window.addEventListener("resize", checkIsMobile);
    return () => window.removeEventListener("resize", checkIsMobile);
  }, []);

  // Handle changes to subject or message
  const handleInputChange = (field: "subject" | "message", value: string) => {
    if (!selectedDraft) return;
    setSelectedDraft((prevDraft) => {
      if (!prevDraft) return null;
      return { ...prevDraft, [field]: value };
    });
  };

  const editMail = () => {
    if (!selectedDraft) return;
    addDraft(selectedDraft);
    setSelectedDraft(null); // closing panel after editing
  };

  return (
    <TooltipProvider delayDuration={0}>
      <div className="flex h-dvh">
        <ResizablePanelGroup direction="horizontal" autoSaveId="draft-panel-layout">
          <ResizablePanel defaultSize={isMobile ? 100 : 35} minSize={isMobile ? 100 : 35}>
            <div className="flex-1 overflow-y-auto border-r">
              <Tabs defaultValue="all">
                <div className="flex items-center justify-between p-4">
                  <SidebarToggle className="block md:hidden" />
                  <h1 className="hidden text-xl font-bold md:block">Drafts</h1>
                  <div className="flex items-center space-x-1.5">
                    <Button variant="ghost" size="icon" onClick={() => setIsCompact(!isCompact)}>
                      <AlignVerticalSpaceAround />
                    </Button>
                  </div>
                </div>
                <div className="bg-background backdrop-blur supports-[backdrop-filter]:bg-background">
                  <form className="flex space-x-1.5 p-4 pt-0">
                    <div className="flex w-full items-center space-x-3 rounded-md border p-2 px-3">
                      <SearchIcon />
                      <input
                        type="text"
                        className="w-full flex-1 border-none bg-background outline-none"
                        placeholder="Search drafts"
                      />
                    </div>
                  </form>
                </div>
                <Separator />
                <TabsContent value="all" className="m-0">
                  {drafts.length === 0 ? (
                    <div className="p-8 text-center text-muted-foreground">No drafts available</div>
                  ) : (
                    <div className="space-y-1">
                      {drafts.map((draft) => (
                        <div
                          key={draft.id}
                          className={`flex cursor-pointer items-center justify-between p-4 transition-colors hover:bg-secondary/80 ${
                            selectedDraft?.id === draft.id ? "bg-secondary" : ""
                          }`}
                          onClick={() => {
                            setSelectedDraft(draft); // selecting the draft
                          }}
                        >
                          <div className="mr-4 min-w-0 flex-1">
                            <h3 className="truncate font-medium">
                              {draft.subject || "No subject"}
                            </h3>
                            <p className="mt-1 truncate text-sm text-muted-foreground">
                              {draft.message?.substring(0, 50) || "No message"}...
                            </p>
                          </div>
                          <div className="flex shrink-0 gap-2">
                            <Button
                              variant="ghost"
                              size="default"
                              onClick={(e) => {
                                e.stopPropagation();
                                removeDraft(draft.id);
                              }}
                              className="opacity-100 hover:bg-destructive hover:text-destructive-foreground group-hover:opacity-100"
                            >
                              <Trash2 />
                            </Button>
                          </div>
                        </div>
                      ))}
                    </div>
                  )}
                </TabsContent>
              </Tabs>
            </div>
          </ResizablePanel>

          {/* draft editor */}
          {!isMobile && selectedDraft && <ResizableHandle withHandle />}
          {selectedDraft && (
            <ResizablePanel
              defaultSize={isMobile ? 0 : 65}
              minSize={isMobile ? 0 : 25}
              className="hidden md:block"
            >
              <div className="flex h-full flex-col">
                <div className="flex items-center justify-between p-2">
                  <div className="flex items-center space-x-2">
                    <Button
                      onClick={editMail} // save the updated draft
                      variant="ghost"
                      size="sm"
                    >
                      Save
                    </Button>
                    <Button
                      onClick={() => {
                        removeDraft(selectedDraft.id); // Remove the draft
                        setSelectedDraft(null);
                      }}
                      variant="ghost"
                      size="sm"
                    >
                      Discard
                    </Button>
                  </div>
                  <Button variant="default" size="sm">
                    Send
                  </Button>
                </div>
                <Separator />
                <div className="flex-1 overflow-y-auto p-4">
                  <input
                    type="text"
                    placeholder="Subject"
                    className="mb-4 w-full rounded-md border bg-background p-2"
                    value={selectedDraft.subject || ""}
                    onChange={(e) => handleInputChange("subject", e.target.value)}
                  />
                  <textarea
                    placeholder="Write your message..."
                    className="h-[calc(100%-120px)] w-full resize-none rounded-md border bg-background p-2"
                    value={selectedDraft.message || ""}
                    onChange={(e) => handleInputChange("message", e.target.value)}
                  />
                </div>
              </div>
            </ResizablePanel>
          )}
        </ResizablePanelGroup>
      </div>
    </TooltipProvider>
  );
}

================
File: components/home/hero-image.tsx
================
import Image from "next/image";

const HeroImage = () => {
  return (
    <div className="mx-auto mt-8 w-full max-w-5xl px-4">
      <div className="relative items-center justify-center rounded-xl border border-muted-foreground/30 bg-muted p-1 shadow-xl shadow-black/40 backdrop-blur-lg dark:shadow-xl dark:shadow-black/85 md:flex md:animate-move-up md:p-2">
        <Image
          src="/homepage-image.png"
          alt="hero"
          width={800}
          height={600}
          className="h-full w-full rounded-xl shadow-md shadow-black invert dark:invert-0 md:rounded-lg"
        />
      </div>
    </div>
  );
};

export default HeroImage;

================
File: components/home/hero.tsx
================
"use client";

import { Form, FormControl, FormField, FormItem } from "../ui/form";
import { zodResolver } from "@hookform/resolvers/zod";
import { Card, CardContent } from "../ui/card";
import { ArrowRightIcon } from "lucide-react";
import Balancer from "react-wrap-balancer";
import { useForm } from "react-hook-form";
import { Button } from "../ui/button";
import { Input } from "../ui/input";
import { useState } from "react";
import { toast } from "sonner";
import Link from "next/link";
import axios from "axios";
import { z } from "zod";

const betaSignupSchema = z.object({
  email: z.string().email().min(9),
});

export default function Hero() {
  const [isSubmitting, setIsSubmitting] = useState(false);

  const form = useForm<z.infer<typeof betaSignupSchema>>({
    resolver: zodResolver(betaSignupSchema),
    defaultValues: {
      email: "",
    },
  });

  const onSubmit = async (values: z.infer<typeof betaSignupSchema>) => {
    setIsSubmitting(true);
    try {
      console.log("Starting form submission with email:", values.email);

      const response = await axios.post("/api/auth/early-access", {
        email: values.email,
      });

      console.log("Response data:", response.data);

      form.reset();
      console.log("Form submission successful");
      toast.success("Thanks for signing up for early access!");
    } catch (error) {
      console.error("Form submission error:", {
        error,
        message: error instanceof Error ? error.message : "Unknown error",
      });
      toast.error("Something went wrong. Please try again.");
    } finally {
      setIsSubmitting(false);
      console.log("Form submission completed");
    }
  };

  return (
    <div className="mx-auto w-full max-w-2xl animate-fade-in pt-20 md:px-0 md:pt-20">
      <p className="px-1 text-center text-5xl font-medium sm:text-6xl md:px-0">Email, reimagined</p>
      <Balancer className="mx-auto mt-3 max-w-2xl text-center text-lg text-muted-foreground">
        Chat with your inbox using a modern, open source, and secure platform that puts you in
        control.
      </Balancer>

      <Card className="mt-3 w-full border-none bg-transparent shadow-none">
        <CardContent className="flex items-center justify-center px-0">
          {process.env.NODE_ENV === "development" ? (
            <Button variant="outline" className="group h-9" asChild>
              <Link href="/login">
                Get Started
                <ArrowRightIcon />
              </Link>
            </Button>
          ) : (
            <Form {...form}>
              <form
                onSubmit={form.handleSubmit(onSubmit)}
                className="flex items-center justify-center gap-4"
              >
                <FormField
                  control={form.control}
                  name="email"
                  render={({ field }) => (
                    <FormItem>
                      <FormControl>
                        <Input
                          type="email"
                          placeholder="you@example.com"
                          className="placeholder:text-sm md:w-80"
                          {...field}
                        />
                      </FormControl>
                    </FormItem>
                  )}
                />
                <div>
                  <Button type="submit" className="w-full px-4" disabled={isSubmitting}>
                    Join waitlist
                  </Button>
                </div>
              </form>
            </Form>
          )}
        </CardContent>
      </Card>
    </div>
  );
}

================
File: components/home/navbar.tsx
================
import { Sheet, SheetContent, SheetHeader, SheetTitle, SheetTrigger } from "../ui/sheet";
import { ArrowRightIcon, Menu } from "lucide-react";
import { Button } from "../ui/button";
import Link from "next/link";

export default function Navbar() {
  return (
    <div className="mx-auto flex w-full items-center justify-between p-4">
      <div className="w-[180px]">
        <p className="text-2xl font-bold">Mail0</p>
      </div>

      {/* Desktop Navigation */}
      <div className="hidden gap-10 text-sm text-muted-foreground md:flex">
        <Link href="https://github.com/nizzyabi/Mail0">Github</Link>
        <Link href=" https://discord.gg/adkjqMUK">Discord</Link>
        <Link href="/privacy">Privacy</Link>
      </div>

      {/* Mobile Navigation */}
      <div className="md:hidden">
        <Sheet>
          <SheetTrigger asChild>
            <Button variant="ghost" size="icon">
              <Menu className="h-9 w-9" />
            </Button>
          </SheetTrigger>
          <SheetContent className="w-52">
            <SheetHeader>
              <SheetTitle className="text-left text-2xl">Mail0</SheetTitle>
            </SheetHeader>
            <div className="mt-7 flex flex-col gap-4 text-muted-foreground">
              <Link href="https://github.com/nizzyabi/mail0">Github</Link>
              <Link href="https://discord.gg/5nwrvt3JH2">Discord</Link>
              <Link href="/privacy">Terms & Privacy</Link>
            </div>
          </SheetContent>
        </Sheet>
      </div>

      {process.env.NODE_ENV === "development" ? (
        <Button variant="outline" className="hidden h-9 w-[180px] md:inline-flex" asChild>
          <Link href="/login">
            Get Started
            <ArrowRightIcon />
          </Link>
        </Button>
      ) : null}
    </div>
  );
}

================
File: components/icons/animated/align-vertical.tsx
================
"use client";

import { forwardRef, useCallback, useImperativeHandle, useRef } from "react";
import { motion, useAnimation } from "motion/react";
import type { Variants } from "motion/react";
import type { HTMLAttributes } from "react";

export interface AlignVerticalSpaceAroundIconHandle {
  startAnimation: () => void;
  stopAnimation: () => void;
}

const rectVariants: Variants = {
  normal: {
    y: 0,
    transition: {
      type: "spring",
      stiffness: 400,
      damping: 30,
    },
  },
  animate: {
    y: [-1, 1],
    transition: {
      type: "spring",
      stiffness: 400,
      damping: 15,
      duration: 0.3,
    },
  },
};

const pathVariants: Variants = {
  normal: { pathLength: 1 },
  animate: { pathLength: [0.7, 1] },
  transition: {
    type: "spring",
  },
};

const AlignVerticalSpaceAroundIcon = forwardRef<
  AlignVerticalSpaceAroundIconHandle,
  HTMLAttributes<HTMLDivElement>
>(({ onMouseEnter, onMouseLeave, ...props }, ref) => {
  const controls = useAnimation();
  const isControlledRef = useRef(false);

  useImperativeHandle(ref, () => {
    isControlledRef.current = true;

    return {
      startAnimation: () => controls.start("animate"),
      stopAnimation: () => controls.start("normal"),
    };
  });

  const handleMouseEnter = useCallback(
    (e: React.MouseEvent<HTMLDivElement>) => {
      if (!isControlledRef.current) {
        controls.start("animate");
      } else {
        onMouseEnter?.(e);
      }
    },
    [controls, onMouseEnter],
  );

  const handleMouseLeave = useCallback(
    (e: React.MouseEvent<HTMLDivElement>) => {
      if (!isControlledRef.current) {
        controls.start("normal");
      } else {
        onMouseLeave?.(e);
      }
    },
    [controls, onMouseLeave],
  );

  return (
    <div
      className="flex cursor-pointer select-none items-center justify-center rounded-md transition-colors duration-200 hover:bg-accent"
      onMouseEnter={handleMouseEnter}
      onMouseLeave={handleMouseLeave}
      {...props}
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="15"
        height="15"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        strokeWidth="2"
        strokeLinecap="round"
        strokeLinejoin="round"
      >
        <motion.rect
          width="10"
          height="6"
          x="7"
          y="9"
          rx="2"
          variants={rectVariants}
          initial="normal"
          animate={controls}
        />
        <motion.path
          d="M22 20H2"
          variants={pathVariants}
          initial="normal"
          animate={controls}
          transition={{ duration: 0.4 }}
        />
        <motion.path
          d="M22 4H2"
          variants={pathVariants}
          initial="normal"
          animate={controls}
          transition={{ duration: 0.4 }}
        />
      </svg>
    </div>
  );
});

AlignVerticalSpaceAroundIcon.displayName = "AlignVerticalSpaceAroundIcon";

export { AlignVerticalSpaceAroundIcon };

================
File: components/icons/animated/archive.tsx
================
"use client";

import { forwardRef, useCallback, useImperativeHandle, useRef } from "react";
import { motion, useAnimation } from "motion/react";
import type { Variants } from "motion/react";
import type { HTMLAttributes } from "react";

export interface ArchiveIconHandle {
  startAnimation: () => void;
  stopAnimation: () => void;
}

const rectVariants: Variants = {
  normal: {
    translateY: 0,
    transition: {
      duration: 0.2,
      type: "spring",
      stiffness: 200,
      damping: 25,
    },
  },
  animate: {
    translateY: -1.5,
    transition: {
      duration: 0.2,
      type: "spring",
      stiffness: 200,
      damping: 25,
    },
  },
};

const pathVariants: Variants = {
  normal: { d: "M4 8v11a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8" },
  animate: { d: "M4 11v9a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V11" },
};

const secondaryPathVariants: Variants = {
  normal: { d: "M10 12h4" },
  animate: { d: "M10 15h4" },
};

const ArchiveIcon = forwardRef<ArchiveIconHandle, HTMLAttributes<HTMLDivElement>>(
  ({ onMouseEnter, onMouseLeave, ...props }, ref) => {
    const controls = useAnimation();
    const isControlledRef = useRef(false);

    useImperativeHandle(ref, () => {
      isControlledRef.current = true;

      return {
        startAnimation: () => controls.start("animate"),
        stopAnimation: () => controls.start("normal"),
      };
    });

    const handleMouseEnter = useCallback(
      (e: React.MouseEvent<HTMLDivElement>) => {
        if (!isControlledRef.current) {
          controls.start("animate");
        } else {
          onMouseEnter?.(e);
        }
      },
      [controls, onMouseEnter],
    );

    const handleMouseLeave = useCallback(
      (e: React.MouseEvent<HTMLDivElement>) => {
        if (!isControlledRef.current) {
          controls.start("normal");
        } else {
          onMouseLeave?.(e);
        }
      },
      [controls, onMouseLeave],
    );

    return (
      <div
        className="flex cursor-pointer select-none items-center justify-center rounded-md p-2 transition-colors duration-200 hover:bg-accent"
        onMouseEnter={handleMouseEnter}
        onMouseLeave={handleMouseLeave}
        {...props}
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="17"
          height="17"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          strokeWidth="2"
          strokeLinecap="round"
          strokeLinejoin="round"
          className="relative bottom-0.5"
        >
          <motion.rect
            width="20"
            height="5"
            x="2"
            y="3"
            rx="1"
            initial="normal"
            animate={controls}
            variants={rectVariants}
          />
          <motion.path
            d="M4 8v11a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8"
            variants={pathVariants}
            animate={controls}
          />
          <motion.path d="M10 12h4" variants={secondaryPathVariants} animate={controls} />
        </svg>
      </div>
    );
  },
);

ArchiveIcon.displayName = "ArchiveIcon";

export { ArchiveIcon };

================
File: components/icons/animated/bell.tsx
================
"use client";

import { forwardRef, useCallback, useImperativeHandle, useRef } from "react";
import { motion, useAnimation } from "motion/react";
import type { Variants } from "motion/react";
import type { HTMLAttributes } from "react";

export interface BellIconHandle {
  startAnimation: () => void;
  stopAnimation: () => void;
}

const svgVariants: Variants = {
  normal: { rotate: 0 },
  animate: { rotate: [0, -10, 10, -10, 0] },
};

const BellIcon = forwardRef<BellIconHandle, HTMLAttributes<HTMLDivElement>>(
  ({ onMouseEnter, onMouseLeave, ...props }, ref) => {
    const controls = useAnimation();
    const isControlledRef = useRef(false);

    useImperativeHandle(ref, () => {
      isControlledRef.current = true;

      return {
        startAnimation: () => controls.start("animate"),
        stopAnimation: () => controls.start("normal"),
      };
    });

    const handleMouseEnter = useCallback(
      (e: React.MouseEvent<HTMLDivElement>) => {
        if (!isControlledRef.current) {
          controls.start("animate");
        } else {
          onMouseEnter?.(e);
        }
      },
      [controls, onMouseEnter],
    );

    const handleMouseLeave = useCallback(
      (e: React.MouseEvent<HTMLDivElement>) => {
        if (!isControlledRef.current) {
          controls.start("normal");
        } else {
          onMouseLeave?.(e);
        }
      },
      [controls, onMouseLeave],
    );
    return (
      <div
        className="flex cursor-pointer select-none items-center justify-center rounded-md p-2 transition-colors duration-200 hover:bg-accent"
        onMouseEnter={handleMouseEnter}
        onMouseLeave={handleMouseLeave}
        {...props}
      >
        <motion.svg
          xmlns="http://www.w3.org/2000/svg"
          width="17"
          height="17"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          strokeWidth="2"
          strokeLinecap="round"
          strokeLinejoin="round"
          variants={svgVariants}
          animate={controls}
          className="relative bottom-0.5"
          transition={{
            duration: 0.5,
            ease: "easeInOut",
          }}
        >
          <path d="M6 8a6 6 0 0 1 12 0c0 7 3 9 3 9H3s3-2 3-9" />
          <path d="M10.3 21a1.94 1.94 0 0 0 3.4 0" />
        </motion.svg>
      </div>
    );
  },
);

BellIcon.displayName = "BellIcon";

export { BellIcon };

================
File: components/icons/animated/book-text.tsx
================
"use client";

import { forwardRef, useCallback, useImperativeHandle, useRef } from "react";
import { motion, useAnimation } from "motion/react";
import type { HTMLAttributes } from "react";

export interface BookTextIconHandle {
  startAnimation: () => void;
  stopAnimation: () => void;
}

const BookTextIcon = forwardRef<BookTextIconHandle, HTMLAttributes<HTMLDivElement>>(
  ({ onMouseEnter, onMouseLeave, ...props }, ref) => {
    const controls = useAnimation();
    const isControlledRef = useRef(false);

    useImperativeHandle(ref, () => {
      isControlledRef.current = true;

      return {
        startAnimation: () => controls.start("animate"),
        stopAnimation: () => controls.start("normal"),
      };
    });

    const handleMouseEnter = useCallback(
      (e: React.MouseEvent<HTMLDivElement>) => {
        if (!isControlledRef.current) {
          controls.start("animate");
        } else {
          onMouseEnter?.(e);
        }
      },
      [controls, onMouseEnter],
    );

    const handleMouseLeave = useCallback(
      (e: React.MouseEvent<HTMLDivElement>) => {
        if (!isControlledRef.current) {
          controls.start("normal");
        } else {
          onMouseLeave?.(e);
        }
      },
      [controls, onMouseLeave],
    );

    return (
      <div
        className="flex cursor-pointer select-none items-center justify-center rounded-md p-2 transition-colors duration-200 hover:bg-accent"
        onMouseEnter={handleMouseEnter}
        onMouseLeave={handleMouseLeave}
        {...props}
      >
        <motion.svg
          animate={controls}
          variants={{
            animate: {
              scale: [1, 1.04, 1],
              rotate: [0, -8, 8, -8, 0],
              y: [0, -2, 0],
              transition: {
                duration: 0.6,
                ease: "easeInOut",
                times: [0, 0.2, 0.5, 0.8, 1],
              },
            },
            normal: {
              scale: 1,
              rotate: 0,
              y: 0,
            },
          }}
          xmlns="http://www.w3.org/2000/svg"
          width="17"
          height="17"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          strokeWidth="2"
          strokeLinecap="round"
          strokeLinejoin="round"
          className="relative bottom-0.5"
        >
          <path d="M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20" />
          <path d="M8 11h8" />
          <path d="M8 7h6" />
        </motion.svg>
      </div>
    );
  },
);

BookTextIcon.displayName = "BookTextIcon";

export { BookTextIcon };

================
File: components/icons/animated/cart.tsx
================
"use client";

import { forwardRef, useCallback, useImperativeHandle, useRef } from "react";
import { motion, useAnimation } from "motion/react";
import type { Variants } from "motion/react";
import type { HTMLAttributes } from "react";

export interface CartIconHandle {
  startAnimation: () => void;
  stopAnimation: () => void;
}

const cartVariants: Variants = {
  normal: { scale: 1 },
  animate: {
    scale: 1.1,
    y: [0, -5, 0],
    transition: {
      duration: 0.3,
      ease: "easeInOut",
      y: { repeat: 1, delay: 0.1, duration: 0.4 },
    },
  },
};

const CartIcon = forwardRef<CartIconHandle, HTMLAttributes<HTMLDivElement>>(
  ({ onMouseEnter, onMouseLeave, ...props }, ref) => {
    const controls = useAnimation();
    const isControlledRef = useRef(false);

    useImperativeHandle(ref, () => {
      isControlledRef.current = true;

      return {
        startAnimation: () => controls.start("animate"),
        stopAnimation: () => controls.start("normal"),
      };
    });

    const handleMouseEnter = useCallback(
      (e: React.MouseEvent<HTMLDivElement>) => {
        if (!isControlledRef.current) {
          controls.start("animate");
        } else {
          onMouseEnter?.(e);
        }
      },
      [controls, onMouseEnter],
    );

    const handleMouseLeave = useCallback(
      (e: React.MouseEvent<HTMLDivElement>) => {
        if (!isControlledRef.current) {
          controls.start("normal");
        } else {
          onMouseLeave?.(e);
        }
      },
      [controls, onMouseLeave],
    );
    return (
      <div
        className="flex cursor-pointer select-none items-center justify-center rounded-md p-2 transition-colors duration-200 hover:bg-accent"
        onMouseEnter={handleMouseEnter}
        onMouseLeave={handleMouseLeave}
        {...props}
      >
        <motion.svg
          xmlns="http://www.w3.org/2000/svg"
          width="17"
          height="17"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          strokeWidth="2"
          strokeLinecap="round"
          strokeLinejoin="round"
          variants={cartVariants}
          animate={controls}
          transition={{ duration: 0.2 }}
          className="relative bottom-0.5"
        >
          <path d="M6.29977 5H21L19 12H7.37671M20 16H8L6 3H3M9 20C9 20.5523 8.55228 21 8 21C7.44772 21 7 20.5523 7 20C7 19.4477 7.44772 19 8 19C8.55228 19 9 19.4477 9 20ZM20 20C20 20.5523 19.5523 21 19 21C18.4477 21 18 20.5523 18 20C18 19.4477 18.4477 19 19 19C19.5523 19 20 19.4477 20 20Z" />
        </motion.svg>
      </div>
    );
  },
);

CartIcon.displayName = "CartIcon";

export { CartIcon };

================
File: components/icons/animated/check-check.tsx
================
"use client";

import { forwardRef, useCallback, useImperativeHandle, useRef } from "react";
import { motion, useAnimation } from "motion/react";
import type { Variants } from "motion/react";
import type { HTMLAttributes } from "react";

export interface CheckCheckIconHandle {
  startAnimation: () => void;
  stopAnimation: () => void;
}

const pathVariants: Variants = {
  normal: {
    opacity: 1,
    pathLength: 1,
    scale: 1,
    transition: {
      duration: 0.3,
      opacity: { duration: 0.1 },
    },
  },
  animate: (custom: number) => ({
    opacity: [0, 1],
    pathLength: [0, 1],
    scale: [0.5, 1],
    transition: {
      duration: 0.4,
      opacity: { duration: 0.1 },
      delay: 0.1 * custom,
    },
  }),
};

const CheckCheckIcon = forwardRef<CheckCheckIconHandle, HTMLAttributes<HTMLDivElement>>(
  ({ onMouseEnter, onMouseLeave, ...props }, ref) => {
    const controls = useAnimation();
    const isControlledRef = useRef(false);

    useImperativeHandle(ref, () => {
      isControlledRef.current = true;

      return {
        startAnimation: () => controls.start("animate"),
        stopAnimation: () => controls.start("normal"),
      };
    });

    const handleMouseEnter = useCallback(
      (e: React.MouseEvent<HTMLDivElement>) => {
        if (!isControlledRef.current) {
          controls.start("animate");
        } else {
          onMouseEnter?.(e);
        }
      },
      [controls, onMouseEnter],
    );

    const handleMouseLeave = useCallback(
      (e: React.MouseEvent<HTMLDivElement>) => {
        if (!isControlledRef.current) {
          controls.start("normal");
        } else {
          onMouseLeave?.(e);
        }
      },
      [controls, onMouseLeave],
    );

    return (
      <div
        className="flex cursor-pointer select-none items-center justify-center rounded-md p-2 transition-colors duration-200 hover:bg-accent"
        onMouseEnter={handleMouseEnter}
        onMouseLeave={handleMouseLeave}
        {...props}
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="17"
          height="17"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          strokeWidth="2"
          strokeLinecap="round"
          strokeLinejoin="round"
          className="relative bottom-0.5"
        >
          <motion.path
            variants={pathVariants}
            initial="normal"
            animate={controls}
            d="M2 12 7 17L18 6"
            custom={0}
          />
          <motion.path
            variants={pathVariants}
            initial="normal"
            animate={controls}
            d="M13 16L14.5 17.5L22 10"
            custom={1}
          />
        </svg>
      </div>
    );
  },
);

CheckCheckIcon.displayName = "CheckCheckIcon";

export { CheckCheckIcon };

================
File: components/icons/animated/filter.tsx
================
"use client";

import type React from "react";

import { forwardRef, useCallback, useImperativeHandle, useRef } from "react";
import { motion, useAnimation } from "motion/react";
import type { Variants } from "motion/react";
import type { HTMLAttributes } from "react";

export interface FilterListIconHandle {
  startAnimation: () => void;
  stopAnimation: () => void;
}

const lineVariants: Variants = {
  normal: {
    pathLength: 1,
    transition: { duration: 0.3 },
  },
  animate: {
    pathLength: [1, 0, 1],
    transition: { duration: 0.5, times: [0, 0.5, 1] },
  },
};

const FilterListIcon = forwardRef<FilterListIconHandle, HTMLAttributes<HTMLDivElement>>(
  ({ onMouseEnter, onMouseLeave, ...props }, ref) => {
    const controls = useAnimation();
    const isControlledRef = useRef(false);

    useImperativeHandle(ref, () => {
      isControlledRef.current = true;

      return {
        startAnimation: () => controls.start("animate"),
        stopAnimation: () => controls.start("normal"),
      };
    });

    const handleMouseEnter = useCallback(
      (e: React.MouseEvent<HTMLDivElement>) => {
        if (!isControlledRef.current) {
          controls.start("animate");
        } else {
          onMouseEnter?.(e);
        }
      },
      [controls, onMouseEnter],
    );

    const handleMouseLeave = useCallback(
      (e: React.MouseEvent<HTMLDivElement>) => {
        if (!isControlledRef.current) {
          controls.start("normal");
        } else {
          onMouseLeave?.(e);
        }
      },
      [controls, onMouseLeave],
    );

    return (
      <div
        className="flex cursor-pointer select-none items-center justify-center rounded-md transition-colors duration-200 hover:bg-accent"
        onMouseEnter={handleMouseEnter}
        onMouseLeave={handleMouseLeave}
        {...props}
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="17"
          height="17"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          strokeWidth="2"
          strokeLinecap="round"
          strokeLinejoin="round"
        >
          <motion.path d="M3 6h18" variants={lineVariants} initial="normal" animate={controls} />
          <motion.path d="M7 12h10" variants={lineVariants} initial="normal" animate={controls} />
          <motion.path d="M10 18h4" variants={lineVariants} initial="normal" animate={controls} />
        </svg>
      </div>
    );
  },
);

FilterListIcon.displayName = "FilterListIcon";

export { FilterListIcon };

================
File: components/icons/animated/inbox.tsx
================
"use client";

import { forwardRef, useCallback, useImperativeHandle, useRef } from "react";
import { motion, useAnimation } from "motion/react";
import type { Variants } from "motion/react";
import type { HTMLAttributes } from "react";

export interface InboxIconHandle {
  startAnimation: () => void;
  stopAnimation: () => void;
}

const polylineVariants: Variants = {
  normal: { points: "22 12 16 12 14 15 10 15 8 12 2 12" },
  animate: { points: "22 14 16 14 14 18 10 18 8 14 2 14" },
};

const pathVariants: Variants = {
  normal: {
    d: "M5.45 5.11 2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z",
  },
  animate: {
    d: "M5.45 7.11 2 14v4a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-4l-3.45-6.89A2 2 0 0 0 16.76 6H7.24a2 2 0 0 0-1.79 1.11z",
  },
};

const InboxIcon = forwardRef<InboxIconHandle, HTMLAttributes<HTMLDivElement>>(
  ({ onMouseEnter, onMouseLeave, ...props }, ref) => {
    const controls = useAnimation();
    const isControlledRef = useRef(false);

    useImperativeHandle(ref, () => {
      isControlledRef.current = true;

      return {
        startAnimation: () => controls.start("animate"),
        stopAnimation: () => controls.start("normal"),
      };
    });

    const handleMouseEnter = useCallback(
      (e: React.MouseEvent<HTMLDivElement>) => {
        if (!isControlledRef.current) {
          controls.start("animate");
        } else {
          onMouseEnter?.(e);
        }
      },
      [controls, onMouseEnter],
    );

    const handleMouseLeave = useCallback(
      (e: React.MouseEvent<HTMLDivElement>) => {
        if (!isControlledRef.current) {
          controls.start("normal");
        } else {
          onMouseLeave?.(e);
        }
      },
      [controls, onMouseLeave],
    );

    return (
      <div
        className="flex cursor-pointer select-none items-center justify-center rounded-md p-2 transition-colors duration-200 hover:bg-accent"
        onMouseEnter={handleMouseEnter}
        onMouseLeave={handleMouseLeave}
        {...props}
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="17"
          height="17"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          strokeWidth="2"
          strokeLinecap="round"
          strokeLinejoin="round"
          className="relative bottom-0.5"
        >
          <motion.polyline
            variants={polylineVariants}
            initial="normal"
            animate={controls}
            transition={{ type: "spring", stiffness: 300, damping: 20 }}
          />
          <motion.path
            variants={pathVariants}
            initial="normal"
            animate={controls}
            transition={{ type: "spring", stiffness: 300, damping: 20 }}
          />
        </svg>
      </div>
    );
  },
);

InboxIcon.displayName = "InboxIcon";

export { InboxIcon };

================
File: components/icons/animated/message.tsx
================
"use client";

import { forwardRef, useCallback, useImperativeHandle, useRef } from "react";
import { motion, useAnimation } from "motion/react";
import type { Variants } from "motion/react";
import type { HTMLAttributes } from "react";

export interface MessageCircleIconHandle {
  startAnimation: () => void;
  stopAnimation: () => void;
}

const iconVariants: Variants = {
  normal: {
    scale: 1,
    rotate: 0,
  },
  animate: {
    scale: 1.05,
    rotate: [0, -7, 7, 0],
    transition: {
      rotate: {
        duration: 0.5,
        ease: "easeInOut",
      },
      scale: {
        type: "spring",
        stiffness: 400,
        damping: 10,
      },
    },
  },
};

const MessageCircleIcon = forwardRef<MessageCircleIconHandle, HTMLAttributes<HTMLDivElement>>(
  ({ onMouseEnter, onMouseLeave, ...props }, ref) => {
    const controls = useAnimation();
    const isControlledRef = useRef(false);

    useImperativeHandle(ref, () => {
      isControlledRef.current = true;

      return {
        startAnimation: () => controls.start("animate"),
        stopAnimation: () => controls.start("normal"),
      };
    });

    const handleMouseEnter = useCallback(
      (e: React.MouseEvent<HTMLDivElement>) => {
        if (!isControlledRef.current) {
          controls.start("animate");
        } else {
          onMouseEnter?.(e);
        }
      },
      [controls, onMouseEnter],
    );

    const handleMouseLeave = useCallback(
      (e: React.MouseEvent<HTMLDivElement>) => {
        if (!isControlledRef.current) {
          controls.start("normal");
        } else {
          onMouseLeave?.(e);
        }
      },
      [controls, onMouseLeave],
    );

    return (
      <div
        className="flex cursor-pointer select-none items-center justify-center rounded-md p-2 transition-colors duration-200 hover:bg-accent"
        onMouseEnter={handleMouseEnter}
        onMouseLeave={handleMouseLeave}
        {...props}
      >
        <motion.svg
          xmlns="http://www.w3.org/2000/svg"
          width="17"
          height="17"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          strokeWidth="2"
          strokeLinecap="round"
          strokeLinejoin="round"
          variants={iconVariants}
          animate={controls}
          className="relative bottom-0.5"
        >
          <path d="M7.9 20A9 9 0 1 0 4 16.1L2 22Z" />
        </motion.svg>
      </div>
    );
  },
);

MessageCircleIcon.displayName = "MessageCircleIcon";

export { MessageCircleIcon };

================
File: components/icons/animated/moon.tsx
================
"use client";

import { forwardRef, useCallback, useImperativeHandle, useRef } from "react";
import type { Transition, Variants } from "motion/react";
import { motion, useAnimation } from "motion/react";
import type { HTMLAttributes } from "react";

export interface MoonIconHandle {
  startAnimation: () => void;
  stopAnimation: () => void;
}

const svgVariants: Variants = {
  normal: {
    rotate: 0,
  },
  animate: {
    rotate: [0, -10, 10, -5, 5, 0],
  },
};

const svgTransition: Transition = {
  duration: 1.2,
  ease: "easeInOut",
};

const MoonIcon = forwardRef<MoonIconHandle, HTMLAttributes<HTMLDivElement>>(
  ({ onMouseEnter, onMouseLeave, ...props }, ref) => {
    const controls = useAnimation();
    const isControlledRef = useRef(false);

    useImperativeHandle(ref, () => {
      isControlledRef.current = true;

      return {
        startAnimation: () => controls.start("animate"),
        stopAnimation: () => controls.start("normal"),
      };
    });

    const handleMouseEnter = useCallback(
      (e: React.MouseEvent<HTMLDivElement>) => {
        if (!isControlledRef.current) {
          controls.start("animate");
        } else {
          onMouseEnter?.(e);
        }
      },
      [controls, onMouseEnter],
    );

    const handleMouseLeave = useCallback(
      (e: React.MouseEvent<HTMLDivElement>) => {
        if (!isControlledRef.current) {
          controls.start("normal");
        } else {
          onMouseLeave?.(e);
        }
      },
      [controls, onMouseLeave],
    );
    return (
      <div
        className="flex cursor-pointer select-none items-center justify-center rounded-md p-2 transition-colors duration-200 hover:bg-accent"
        onMouseEnter={handleMouseEnter}
        onMouseLeave={handleMouseLeave}
        {...props}
      >
        <motion.svg
          xmlns="http://www.w3.org/2000/svg"
          width="17"
          height="17"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          strokeWidth="2"
          strokeLinecap="round"
          strokeLinejoin="round"
          variants={svgVariants}
          animate={controls}
          transition={svgTransition}
        >
          <path d="M12 3a6 6 0 0 0 9 9 9 9 0 1 1-9-9Z" />
        </motion.svg>
      </div>
    );
  },
);

MoonIcon.displayName = "MoonIcon";

export { MoonIcon };

================
File: components/icons/animated/search.tsx
================
"use client";

import { forwardRef, useCallback, useImperativeHandle, useRef } from "react";
import { motion, useAnimation } from "motion/react";
import type { HTMLAttributes } from "react";

export interface SearchIconHandle {
  startAnimation: () => void;
  stopAnimation: () => void;
}

const SearchIcon = forwardRef<SearchIconHandle, HTMLAttributes<HTMLDivElement>>(
  ({ onMouseEnter, onMouseLeave, ...props }, ref) => {
    const controls = useAnimation();
    const isControlledRef = useRef(false);

    useImperativeHandle(ref, () => {
      isControlledRef.current = true;

      return {
        startAnimation: () => controls.start("animate"),
        stopAnimation: () => controls.start("normal"),
      };
    });

    const handleMouseEnter = useCallback(
      (e: React.MouseEvent<HTMLDivElement>) => {
        if (!isControlledRef.current) {
          controls.start("animate");
        } else {
          onMouseEnter?.(e);
        }
      },
      [controls, onMouseEnter],
    );

    const handleMouseLeave = useCallback(
      (e: React.MouseEvent<HTMLDivElement>) => {
        if (!isControlledRef.current) {
          controls.start("normal");
        } else {
          onMouseLeave?.(e);
        }
      },
      [controls, onMouseLeave],
    );

    return (
      <div
        className="flex cursor-pointer select-none items-center justify-center rounded-md p-2 transition-colors duration-200 hover:bg-accent"
        onMouseEnter={handleMouseEnter}
        onMouseLeave={handleMouseLeave}
        {...props}
      >
        <motion.svg
          xmlns="http://www.w3.org/2000/svg"
          width="14"
          height="14"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          strokeWidth="2"
          strokeLinecap="round"
          strokeLinejoin="round"
          variants={{
            normal: { x: 0, y: 0 },
            animate: {
              x: [0, 0, -3, 0],
              y: [0, -4, 0, 0],
            },
          }}
          transition={{
            duration: 1,
            bounce: 0.3,
          }}
          animate={controls}
        >
          <circle cx="11" cy="11" r="8" />
          <path d="m21 21-4.3-4.3" />
        </motion.svg>
      </div>
    );
  },
);

SearchIcon.displayName = "SearchIcon";

export { SearchIcon };

================
File: components/icons/animated/settings-gear.tsx
================
"use client";

import type React from "react";

import { forwardRef, useCallback, useImperativeHandle, useRef } from "react";
import { motion, useAnimation } from "motion/react";
import type { HTMLAttributes } from "react";

export interface SettingsGearIconHandle {
  startAnimation: () => void;
  stopAnimation: () => void;
}

const SettingsGearIcon = forwardRef<SettingsGearIconHandle, HTMLAttributes<HTMLDivElement>>(
  ({ onMouseEnter, onMouseLeave, ...props }, ref) => {
    const controls = useAnimation();
    const isControlledRef = useRef(false);

    useImperativeHandle(ref, () => {
      isControlledRef.current = true;

      return {
        startAnimation: () => controls.start("animate"),
        stopAnimation: () => controls.start("normal"),
      };
    });

    const handleMouseEnter = useCallback(
      (e: React.MouseEvent<HTMLDivElement>) => {
        if (!isControlledRef.current) {
          controls.start("animate");
        } else {
          onMouseEnter?.(e);
        }
      },
      [controls, onMouseEnter],
    );

    const handleMouseLeave = useCallback(
      (e: React.MouseEvent<HTMLDivElement>) => {
        if (!isControlledRef.current) {
          controls.start("normal");
        } else {
          onMouseLeave?.(e);
        }
      },
      [controls, onMouseLeave],
    );

    return (
      <div
        className="flex cursor-pointer select-none items-center justify-center rounded-md p-2 transition-colors duration-200 hover:bg-accent"
        onMouseEnter={handleMouseEnter}
        onMouseLeave={handleMouseLeave}
        {...props}
      >
        <motion.svg
          xmlns="http://www.w3.org/2000/svg"
          width="17"
          height="17"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          strokeWidth="2"
          strokeLinecap="round"
          strokeLinejoin="round"
          className="relative bottom-0.5"
          transition={{ type: "spring", stiffness: 50, damping: 10 }}
          variants={{
            normal: {
              rotate: 0,
            },
            animate: {
              rotate: 180,
            },
          }}
          animate={controls}
        >
          <path d="M12.22 2h-.44a2 2 0 0 0-2 2v.18a2 2 0 0 1-1 1.73l-.43.25a2 2 0 0 1-2 0l-.15-.08a2 2 0 0 0-2.73.73l-.22.38a2 2 0 0 0 .73 2.73l.15.1a2 2 0 0 1 1 1.72v.51a2 2 0 0 1-1 1.74l-.15.09a2 2 0 0 0-.73 2.73l.22.38a2 2 0 0 0 2.73.73l.15-.08a2 2 0 0 1 2 0l.43.25a2 2 0 0 1 1 1.73V20a2 2 0 0 0 2 2h.44a2 2 0 0 0 2-2v-.18a2 2 0 0 1 1-1.73l.43-.25a2 2 0 0 1 2 0l.15.08a2 2 0 0 0 2.73-.73l.22-.39a2 2 0 0 0-.73-2.73l-.15-.08a2 2 0 0 1-1-1.74v-.5a2 2 0 0 1 1-1.74l.15-.09a2 2 0 0 0 .73-2.73l-.22-.38a2 2 0 0 0-2.73-.73l-.15.08a2 2 0 0 1-2 0l-.43-.25a2 2 0 0 1-1-1.73V4a2 2 0 0 0-2-2z" />
          <circle cx="12" cy="12" r="3" />
        </motion.svg>
      </div>
    );
  },
);

SettingsGearIcon.displayName = "SettingsGearIcon";

export { SettingsGearIcon };

================
File: components/icons/animated/settings-lines.tsx
================
"use client";

import { forwardRef, useCallback, useImperativeHandle, useRef } from "react";
import { motion, useAnimation } from "motion/react";
import type { Transition } from "motion/react";
import type { HTMLAttributes } from "react";

export interface SettingsIconHandle {
  startAnimation: () => void;
  stopAnimation: () => void;
}

const defaultTransition: Transition = {
  type: "spring",
  stiffness: 100,
  damping: 12,
  mass: 0.4,
};

const SettingsIcon = forwardRef<SettingsIconHandle, HTMLAttributes<HTMLDivElement>>(
  ({ onMouseEnter, onMouseLeave, ...props }, ref) => {
    const controls = useAnimation();
    const isControlledRef = useRef(false);

    useImperativeHandle(ref, () => {
      isControlledRef.current = true;

      return {
        startAnimation: () => controls.start("animate"),
        stopAnimation: () => controls.start("normal"),
      };
    });

    const handleMouseEnter = useCallback(
      (e: React.MouseEvent<HTMLDivElement>) => {
        if (!isControlledRef.current) {
          controls.start("animate");
        } else {
          onMouseEnter?.(e);
        }
      },
      [controls, onMouseEnter],
    );

    const handleMouseLeave = useCallback(
      (e: React.MouseEvent<HTMLDivElement>) => {
        if (!isControlledRef.current) {
          controls.start("normal");
        } else {
          onMouseLeave?.(e);
        }
      },
      [controls, onMouseLeave],
    );

    return (
      <div
        className="flex cursor-pointer select-none items-center justify-center rounded-md p-2 transition-colors duration-200 hover:bg-accent"
        onMouseEnter={handleMouseEnter}
        onMouseLeave={handleMouseLeave}
        {...props}
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="28"
          height="28"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          strokeWidth="2"
          strokeLinecap="round"
          strokeLinejoin="round"
        >
          <motion.line
            x1="21"
            x2="14"
            y1="4"
            y2="4"
            initial={false}
            variants={{
              normal: {
                x2: 14,
              },
              animate: {
                x2: 10,
              },
            }}
            animate={controls}
            transition={defaultTransition}
          />
          <motion.line
            x1="10"
            x2="3"
            y1="4"
            y2="4"
            variants={{
              normal: {
                x1: 10,
              },
              animate: {
                x1: 5,
              },
            }}
            animate={controls}
            transition={defaultTransition}
          />

          <motion.line
            x1="21"
            x2="12"
            y1="12"
            y2="12"
            variants={{
              normal: {
                x2: 12,
              },
              animate: {
                x2: 18,
              },
            }}
            animate={controls}
            transition={defaultTransition}
          />

          <motion.line
            x1="8"
            x2="3"
            y1="12"
            y2="12"
            variants={{
              normal: {
                x1: 8,
              },
              animate: {
                x1: 13,
              },
            }}
            animate={controls}
            transition={defaultTransition}
          />

          <motion.line
            x1="3"
            x2="12"
            y1="20"
            y2="20"
            variants={{
              normal: {
                x2: 12,
              },
              animate: {
                x2: 4,
              },
            }}
            animate={controls}
            transition={defaultTransition}
          />

          <motion.line
            x1="16"
            x2="21"
            y1="20"
            y2="20"
            variants={{
              normal: {
                x1: 16,
              },
              animate: {
                x1: 8,
              },
            }}
            animate={controls}
            transition={defaultTransition}
          />

          <motion.line
            x1="14"
            x2="14"
            y1="2"
            y2="6"
            variants={{
              normal: {
                x1: 14,
                x2: 14,
              },
              animate: {
                x1: 9,
                x2: 9,
              },
            }}
            animate={controls}
            transition={defaultTransition}
          />

          <motion.line
            x1="8"
            x2="8"
            y1="10"
            y2="14"
            variants={{
              normal: {
                x1: 8,
                x2: 8,
              },
              animate: {
                x1: 14,
                x2: 14,
              },
            }}
            animate={controls}
            transition={defaultTransition}
          />

          <motion.line
            x1="16"
            x2="16"
            y1="18"
            y2="22"
            variants={{
              normal: {
                x1: 16,
                x2: 16,
              },
              animate: {
                x1: 8,
                x2: 8,
              },
            }}
            animate={controls}
            transition={defaultTransition}
          />
        </svg>
      </div>
    );
  },
);

SettingsIcon.displayName = "SettingsIcon";

export { SettingsIcon };

================
File: components/icons/animated/square-pen.tsx
================
"use client";

import type React from "react";

import { forwardRef, useCallback, useImperativeHandle, useRef } from "react";
import { motion, useAnimation } from "motion/react";
import type { Variants } from "motion/react";
import type { HTMLAttributes } from "react";

export interface SquarePenIconHandle {
  startAnimation: () => void;
  stopAnimation: () => void;
}

const penVariants: Variants = {
  normal: {
    rotate: 0,
    x: 0,
    y: 0,
  },
  animate: {
    rotate: [-0.5, 0.5, -0.5],
    x: [0, -1, 1.5, 0],
    y: [0, 1.5, -1, 0],
  },
};

const SquarePenIcon = forwardRef<SquarePenIconHandle, HTMLAttributes<HTMLDivElement>>(
  ({ onMouseEnter, onMouseLeave, ...props }, ref) => {
    const controls = useAnimation();
    const isControlledRef = useRef(false);

    useImperativeHandle(ref, () => {
      isControlledRef.current = true;

      return {
        startAnimation: () => controls.start("animate"),
        stopAnimation: () => controls.start("normal"),
      };
    });

    const handleMouseEnter = useCallback(
      (e: React.MouseEvent<HTMLDivElement>) => {
        if (!isControlledRef.current) {
          controls.start("animate");
        } else {
          onMouseEnter?.(e);
        }
      },
      [controls, onMouseEnter],
    );

    const handleMouseLeave = useCallback(
      (e: React.MouseEvent<HTMLDivElement>) => {
        if (!isControlledRef.current) {
          controls.start("normal");
        } else {
          onMouseLeave?.(e);
        }
      },
      [controls, onMouseLeave],
    );

    return (
      <div
        className="flex cursor-pointer select-none items-center justify-center rounded-md transition-colors duration-200 hover:bg-accent/10"
        onMouseEnter={handleMouseEnter}
        onMouseLeave={handleMouseLeave}
        {...props}
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="15"
          height="15"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          strokeWidth="2"
          strokeLinecap="round"
          strokeLinejoin="round"
          style={{ overflow: "visible" }}
        >
          <path d="M12 3H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7" />
          <motion.path
            d="M18.375 2.625a1 1 0 0 1 3 3l-9.013 9.014a2 2 0 0 1-.853.505l-2.873.84a.5.5 0 0 1-.62-.62l.84-2.873a2 2 0 0 1 .506-.852z"
            variants={penVariants}
            animate={controls}
          />
        </svg>
      </div>
    );
  },
);

SquarePenIcon.displayName = "SquarePenIcon";

export { SquarePenIcon };

================
File: components/icons/animated/sun.tsx
================
"use client";

import { forwardRef, useCallback, useImperativeHandle, useRef } from "react";
import { motion, useAnimation } from "motion/react";
import type { Variants } from "motion/react";
import type { HTMLAttributes } from "react";

export interface SunIconHandle {
  startAnimation: () => void;
  stopAnimation: () => void;
}

const pathVariants: Variants = {
  normal: { opacity: 1 },
  animate: (i: number) => ({
    opacity: [0, 1],
    transition: { delay: i * 0.1, duration: 0.3 },
  }),
};

const SunIcon = forwardRef<SunIconHandle, HTMLAttributes<HTMLDivElement>>(
  ({ onMouseEnter, onMouseLeave, ...props }, ref) => {
    const controls = useAnimation();
    const isControlledRef = useRef(false);

    useImperativeHandle(ref, () => {
      isControlledRef.current = true;

      return {
        startAnimation: () => controls.start("animate"),
        stopAnimation: () => controls.start("normal"),
      };
    });

    const handleMouseEnter = useCallback(
      (e: React.MouseEvent<HTMLDivElement>) => {
        if (!isControlledRef.current) {
          controls.start("animate");
        } else {
          onMouseEnter?.(e);
        }
      },
      [controls, onMouseEnter],
    );

    const handleMouseLeave = useCallback(
      (e: React.MouseEvent<HTMLDivElement>) => {
        if (!isControlledRef.current) {
          controls.start("normal");
        } else {
          onMouseLeave?.(e);
        }
      },
      [controls, onMouseLeave],
    );
    return (
      <div
        className="flex cursor-pointer select-none items-center justify-center rounded-md p-2 transition-colors duration-200 hover:bg-accent"
        onMouseEnter={handleMouseEnter}
        onMouseLeave={handleMouseLeave}
        {...props}
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="15"
          height="15"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          strokeWidth="2"
          strokeLinecap="round"
          strokeLinejoin="round"
        >
          <circle cx="12" cy="12" r="4" />
          {[
            "M12 2v2",
            "m19.07 4.93-1.41 1.41",
            "M20 12h2",
            "m17.66 17.66 1.41 1.41",
            "M12 20v2",
            "m6.34 17.66-1.41 1.41",
            "M2 12h2",
            "m4.93 4.93 1.41 1.41",
          ].map((d, index) => (
            <motion.path
              key={d}
              d={d}
              animate={controls}
              variants={pathVariants}
              custom={index + 1}
            />
          ))}
        </svg>
      </div>
    );
  },
);

SunIcon.displayName = "SunIcon";

export { SunIcon };

================
File: components/icons/animated/trash.tsx
================
"use client";

import { forwardRef, useCallback, useImperativeHandle, useRef } from "react";
import { motion, useAnimation } from "motion/react";
import type { Variants } from "motion/react";
import type { HTMLAttributes } from "react";

export interface DeleteIconHandle {
  startAnimation: () => void;
  stopAnimation: () => void;
}

const lidVariants: Variants = {
  normal: { y: 0 },
  animate: { y: -1.1 },
};

const springTransition = {
  type: "spring",
  stiffness: 500,
  damping: 30,
};

const DeleteIcon = forwardRef<DeleteIconHandle, HTMLAttributes<HTMLDivElement>>(
  ({ onMouseEnter, onMouseLeave, ...props }, ref) => {
    const controls = useAnimation();
    const isControlledRef = useRef(false);

    useImperativeHandle(ref, () => {
      isControlledRef.current = true;

      return {
        startAnimation: () => controls.start("animate"),
        stopAnimation: () => controls.start("normal"),
      };
    });

    const handleMouseEnter = useCallback(
      (e: React.MouseEvent<HTMLDivElement>) => {
        if (!isControlledRef.current) {
          controls.start("animate");
        } else {
          onMouseEnter?.(e);
        }
      },
      [controls, onMouseEnter],
    );

    const handleMouseLeave = useCallback(
      (e: React.MouseEvent<HTMLDivElement>) => {
        if (!isControlledRef.current) {
          controls.start("normal");
        } else {
          onMouseLeave?.(e);
        }
      },
      [controls, onMouseLeave],
    );

    return (
      <div
        className="flex cursor-pointer select-none items-center justify-center rounded-md p-2 transition-colors duration-200 hover:bg-accent"
        onMouseEnter={handleMouseEnter}
        onMouseLeave={handleMouseLeave}
        {...props}
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="17"
          height="17"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          strokeWidth="2"
          strokeLinecap="round"
          strokeLinejoin="round"
          className="relative bottom-0.5"
        >
          <motion.g variants={lidVariants} animate={controls} transition={springTransition}>
            <path d="M3 6h18" />
            <path d="M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2" />
          </motion.g>
          <motion.path
            d="M19 8v12c0 1-1 2-2 2H7c-1 0-2-1-2-2V8"
            variants={{
              normal: { d: "M19 8v12c0 1-1 2-2 2H7c-1 0-2-1-2-2V8" },
              animate: { d: "M19 9v12c0 1-1 2-2 2H7c-1 0-2-1-2-2V9" },
            }}
            animate={controls}
            transition={springTransition}
          />
          <motion.line
            x1="10"
            x2="10"
            y1="11"
            y2="17"
            variants={{
              normal: { y1: 11, y2: 17 },
              animate: { y1: 11.5, y2: 17.5 },
            }}
            animate={controls}
            transition={springTransition}
          />
          <motion.line
            x1="14"
            x2="14"
            y1="11"
            y2="17"
            variants={{
              normal: { y1: 11, y2: 17 },
              animate: { y1: 11.5, y2: 17.5 },
            }}
            animate={controls}
            transition={springTransition}
          />
        </svg>
      </div>
    );
  },
);

DeleteIcon.displayName = "DeleteIcon";

export { DeleteIcon };

================
File: components/icons/animated/users.tsx
================
"use client";

import { forwardRef, useCallback, useImperativeHandle, useRef } from "react";
import { motion, useAnimation } from "motion/react";
import type { Variants } from "motion/react";
import type { HTMLAttributes } from "react";

export interface UsersIconHandle {
  startAnimation: () => void;
  stopAnimation: () => void;
}

const pathVariants: Variants = {
  normal: {
    translateX: 0,
    transition: {
      type: "spring",
      stiffness: 200,
      damping: 13,
    },
  },
  animate: {
    translateX: [-6, 0],
    transition: {
      delay: 0.1,
      type: "spring",
      stiffness: 200,
      damping: 13,
    },
  },
};

const UsersIcon = forwardRef<UsersIconHandle, HTMLAttributes<HTMLDivElement>>(
  ({ onMouseEnter, onMouseLeave, ...props }, ref) => {
    const controls = useAnimation();
    const isControlledRef = useRef(false);

    useImperativeHandle(ref, () => {
      isControlledRef.current = true;

      return {
        startAnimation: () => controls.start("animate"),
        stopAnimation: () => controls.start("normal"),
      };
    });

    const handleMouseEnter = useCallback(
      (e: React.MouseEvent<HTMLDivElement>) => {
        if (!isControlledRef.current) {
          controls.start("animate");
        } else {
          onMouseEnter?.(e);
        }
      },
      [controls, onMouseEnter],
    );

    const handleMouseLeave = useCallback(
      (e: React.MouseEvent<HTMLDivElement>) => {
        if (!isControlledRef.current) {
          controls.start("normal");
        } else {
          onMouseLeave?.(e);
        }
      },
      [controls, onMouseLeave],
    );

    return (
      <div
        className="flex cursor-pointer select-none items-center justify-center rounded-md p-2 transition-colors duration-200 hover:bg-accent"
        onMouseEnter={handleMouseEnter}
        onMouseLeave={handleMouseLeave}
        {...props}
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="17"
          height="17"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          strokeWidth="2"
          strokeLinecap="round"
          strokeLinejoin="round"
          className="relative bottom-0.5"
        >
          <path d="M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2" />
          <circle cx="9" cy="7" r="4" />
          <motion.path d="M22 21v-2a4 4 0 0 0-3-3.87" variants={pathVariants} animate={controls} />
          <motion.path d="M16 3.13a4 4 0 0 1 0 7.75" variants={pathVariants} animate={controls} />
        </svg>
      </div>
    );
  },
);

UsersIcon.displayName = "UsersIcon";

export { UsersIcon };

================
File: components/icons/animated/x.tsx
================
"use client";

import { forwardRef, useCallback, useImperativeHandle, useRef } from "react";
import { motion, useAnimation } from "motion/react";
import type { Variants } from "motion/react";
import type { HTMLAttributes } from "react";

export interface XIconHandle {
  startAnimation: () => void;
  stopAnimation: () => void;
}

const pathVariants: Variants = {
  normal: {
    opacity: 1,
    pathLength: 1,
  },
  animate: {
    opacity: [0, 1],
    pathLength: [0, 1],
  },
};

const XIcon = forwardRef<XIconHandle, HTMLAttributes<HTMLDivElement>>(
  ({ onMouseEnter, onMouseLeave, ...props }, ref) => {
    const controls = useAnimation();
    const isControlledRef = useRef(false);

    useImperativeHandle(ref, () => {
      isControlledRef.current = true;

      return {
        startAnimation: () => controls.start("animate"),
        stopAnimation: () => controls.start("normal"),
      };
    });

    const handleMouseEnter = useCallback(
      (e: React.MouseEvent<HTMLDivElement>) => {
        if (!isControlledRef.current) {
          controls.start("animate");
        } else {
          onMouseEnter?.(e);
        }
      },
      [controls, onMouseEnter],
    );

    const handleMouseLeave = useCallback(
      (e: React.MouseEvent<HTMLDivElement>) => {
        if (!isControlledRef.current) {
          controls.start("normal");
        } else {
          onMouseLeave?.(e);
        }
      },
      [controls, onMouseLeave],
    );
    return (
      <div
        className="flex cursor-pointer select-none items-center justify-center rounded-md p-2 transition-colors duration-200 hover:bg-accent"
        onMouseEnter={handleMouseEnter}
        onMouseLeave={handleMouseLeave}
        {...props}
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="17"
          height="17"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          strokeWidth="2"
          strokeLinecap="round"
          strokeLinejoin="round"
          className="relative bottom-0.5"
        >
          <motion.path variants={pathVariants} animate={controls} d="M18 6 6 18" />
          <motion.path
            transition={{ delay: 0.2 }}
            variants={pathVariants}
            animate={controls}
            d="m6 6 12 12"
          />
        </svg>
      </div>
    );
  },
);

XIcon.displayName = "XIcon";

export { XIcon };

================
File: components/icons/icons.tsx
================
import { cn } from "@/lib/utils";

export const Vercel = ({ className }: { className?: string }) => (
  <svg role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" className={className}>
    <title>Vercel</title>
    <path d="M24 22.525H0l12-21.05 12 21.05z" fill="var(--icon-color)" />
  </svg>
);

export const Gmail = ({ className }: { className?: string }) => (
  <svg role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" className={className}>
    <title>Gmail</title>
    <path
      d="M24 5.457v13.909c0 .904-.732 1.636-1.636 1.636h-3.819V11.73L12 16.64l-6.545-4.91v9.273H1.636A1.636 1.636 0 0 1 0 19.366V5.457c0-2.023 2.309-3.178 3.927-1.964L5.455 4.64 12 9.548l6.545-4.91 1.528-1.145C21.69 2.28 24 3.434 24 5.457z"
      fill="var(--icon-color)"
    />
  </svg>
);

export const Outlook = ({ className }: { className?: string }) => (
  <svg role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" className={className}>
    <title>Outlook</title>
    <path
      d="M4 4H20C21.1 4 22 4.9 22 6V18C22 19.1 21.1 20 20 20H4C2.9 20 2 19.1 2 18V6C2 4.9 2.9 4 4 4Z"
      fill="var(--icon-color)"
    />
  </svg>
);

export const Discord = ({ className }: { className?: string }) => (
  <svg
    xmlns="http://www.w3.org/2000/svg"
    width="16"
    height="16"
    fill="currentColor"
    className={cn("bi bi-discord", className)}
    viewBox="0 0 16 16"
  >
    <path d="M13.545 2.907a13.2 13.2 0 0 0-3.257-1.011.05.05 0 0 0-.052.025c-.141.25-.297.577-.406.833a12.2 12.2 0 0 0-3.658 0 8 8 0 0 0-.412-.833.05.05 0 0 0-.052-.025c-1.125.194-2.22.534-3.257 1.011a.04.04 0 0 0-.021.018C.356 6.024-.213 9.047.066 12.032q.003.022.021.037a13.3 13.3 0 0 0 3.995 2.02.05.05 0 0 0 .056-.019q.463-.63.818-1.329a.05.05 0 0 0-.01-.059l-.018-.011a9 9 0 0 1-1.248-.595.05.05 0 0 1-.02-.066l.015-.019q.127-.095.248-.195a.05.05 0 0 1 .051-.007c2.619 1.196 5.454 1.196 8.041 0a.05.05 0 0 1 .053.007q.121.1.248.195a.05.05 0 0 1-.004.085 8 8 0 0 1-1.249.594.05.05 0 0 0-.03.03.05.05 0 0 0 .003.041c.24.465.515.909.817 1.329a.05.05 0 0 0 .056.019 13.2 13.2 0 0 0 4.001-2.02.05.05 0 0 0 .021-.037c.334-3.451-.559-6.449-2.366-9.106a.03.03 0 0 0-.02-.019m-8.198 7.307c-.789 0-1.438-.724-1.438-1.612s.637-1.613 1.438-1.613c.807 0 1.45.73 1.438 1.613 0 .888-.637 1.612-1.438 1.612m5.316 0c-.788 0-1.438-.724-1.438-1.612s.637-1.613 1.438-1.613c.807 0 1.451.73 1.438 1.613 0 .888-.631 1.612-1.438 1.612" />
  </svg>
);

export const Google = ({ className }: { className?: string }) => (
  <svg
    xmlns="http://www.w3.org/2000/svg"
    width="1em"
    height="1em"
    viewBox="0 0 24 24"
    className={className}
  >
    <path
      fill="currentColor"
      d="M11.99 13.9v-3.72h9.36c.14.63.25 1.22.25 2.05c0 5.71-3.83 9.77-9.6 9.77c-5.52 0-10-4.48-10-10S6.48 2 12 2c2.7 0 4.96.99 6.69 2.61l-2.84 2.76c-.72-.68-1.98-1.48-3.85-1.48c-3.31 0-6.01 2.75-6.01 6.12s2.7 6.12 6.01 6.12c3.83 0 5.24-2.65 5.5-4.22h-5.51z"
    ></path>
  </svg>
);

export const GitHub = ({ className }: { className?: string }) => (
  <svg role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" className={className}>
    <title>GitHub</title>
    <path
      d="M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12"
      fill="var(--icon-color)"
    />
  </svg>
);

export const Twitter = ({ className }: { className?: string }) => (
  <svg role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" className={className}>
    <title>X (Twitter)</title>
    <path
      d="M18.901 1.153h3.68l-8.04 9.19L24 22.846h-7.406l-5.8-7.584-6.638 7.584H.474l8.6-9.83L0 1.154h7.594l5.243 6.932ZM17.61 20.644h2.039L6.486 3.24H4.298Z"
      fill="var(--icon-color)"
    />
  </svg>
);

export const YouTube = ({ className }: { className?: string }) => (
  <svg role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" className={className}>
    <title>YouTube</title>
    <path
      d="M23.498 6.186a3.016 3.016 0 0 0-2.122-2.136C19.505 3.545 12 3.545 12 3.545s-7.505 0-9.377.505A3.017 3.017 0 0 0 .502 6.186C0 8.07 0 12 0 12s0 3.93.502 5.814a3.016 3.016 0 0 0 2.122 2.136c1.871.505 9.376.505 9.376.505s7.505 0 9.377-.505a3.015 3.015 0 0 0 2.122-2.136C24 15.93 24 12 24 12s0-3.93-.502-5.814zM9.545 15.568V8.432L15.818 12l-6.273 3.568z"
      fill="var(--icon-color)"
    />
  </svg>
);

================
File: components/mail/account-switcher.tsx
================
"use client";

import * as React from "react";

import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import { cn } from "@/lib/utils";

interface AccountSwitcherProps {
  isCollapsed: boolean;
  accounts: {
    label: string;
    email: string;
    icon: React.ReactNode;
  }[];
}

export function AccountSwitcher({ isCollapsed, accounts }: AccountSwitcherProps) {
  const [selectedAccount, setSelectedAccount] = React.useState<string>(accounts[0].email);

  return (
    <Select defaultValue={selectedAccount} onValueChange={setSelectedAccount}>
      <SelectTrigger
        className={cn(
          "bg-backgroundflex items-center gap-2 text-primary [&>span]:line-clamp-1 [&>span]:flex [&>span]:w-full [&>span]:items-center [&>span]:gap-1 [&>span]:truncate [&_svg]:h-4 [&_svg]:w-4 [&_svg]:shrink-0",
          isCollapsed &&
            "flex h-9 w-9 shrink-0 items-center justify-center p-0 [&>span]:w-auto [&>svg]:hidden",
        )}
        aria-label="Select account"
      >
        <SelectValue
          placeholder="Select an account"
          className="text-primary placeholder:text-primary"
        >
          {accounts.find((account) => account.email === selectedAccount)?.icon}
          <span className={cn("ml-2", isCollapsed && "hidden")}>
            {accounts.find((account) => account.email === selectedAccount)?.label}
          </span>
        </SelectValue>
      </SelectTrigger>
      <SelectContent>
        {accounts.map((account) => (
          <SelectItem key={account.email} value={account.email}>
            <div className="flex items-center gap-4 [&_svg]:h-4 [&_svg]:w-4 [&_svg]:shrink-0 [&_svg]:text-primary">
              {account.icon}
              {account.email}
            </div>
          </SelectItem>
        ))}
      </SelectContent>
    </Select>
  );
}

================
File: components/mail/data.tsx
================
export const mails = [
  {
    id: "6c84fb90-12c4-11e1-840d-7b25c5ee775a",
    name: "William Smith",
    email: "williamsmith@example.com",
    subject: "Meeting Tomorrow",
    text: "Hi, let's have a meeting tomorrow to discuss the project. I've been reviewing the project details and have some ideas I'd like to share. It's crucial that we align on our next steps to ensure the project's success.\n\nPlease come prepared with any questions or insights you may have. Looking forward to our meeting!\n\nBest regards, William",
    date: "2025-02-06T10:30:00",
    read: true,
    labels: ["meeting", "work", "important"],
    muted: true,
  },
  {
    id: "110e8400-e29b-11d4-a716-446655440000",
    name: "Alice Smith",
    email: "alicesmith@example.com",
    subject: "Re: Project Update",
    text: "Thank you for the project update. It looks great! I've gone through the report, and the progress is impressive. The team has done a fantastic job, and I appreciate the hard work everyone has put in.\n\nI have a few minor suggestions that I'll include in the attached document.\n\nLet's discuss these during our next meeting. Keep up the excellent work!\n\nBest regards, Alice",
    date: "2025-02-06T13:15:00",
    read: true,
    labels: ["work", "important"],
    muted: true,
  },
  {
    id: "3e7c3f6d-bdf5-46ae-8d90-171300f27ae2",
    name: "Bob Johnson",
    email: "bobjohnson@example.com",
    subject: "Weekend Plans",
    text: "Any plans for the weekend? I was thinking of going hiking in the nearby mountains. It's been a while since we had some outdoor fun.\n\nIf you're interested, let me know, and we can plan the details. It'll be a great way to unwind and enjoy nature.\n\nLooking forward to your response!\n\nBest, Bob",
    date: "2025-02-10T11:45:00",
    read: true,
    labels: ["personal"],
  },
  {
    id: "61c35085-72d7-42b4-8d62-738f700d4b92",
    name: "Emily Davis",
    email: "emilydavis@example.com",
    subject: "Re: Question about Budget",
    text: "I have a question about the budget for the upcoming project. It seems like there's a discrepancy in the allocation of resources.\n\nI've reviewed the budget report and identified a few areas where we might be able to optimize our spending without compromising the project's quality.\n\nI've attached a detailed analysis for your reference. Let's discuss this further in our next meeting.\n\nThanks, Emily",
    date: "2025-01-01T13:15:00",
    read: false,
    labels: ["work", "budget"],
  },
  {
    id: "8f7b5db9-d935-4e42-8e05-1f1d0a3dfb97",
    name: "Michael Wilson",
    email: "michaelwilson@example.com",
    subject: "Important Announcement",
    text: "I have an important announcement to make during our team meeting. It pertains to a strategic shift in our approach to the upcoming product launch. We've received valuable feedback from our beta testers, and I believe it's time to make some adjustments to better meet our customers' needs.\n\nThis change is crucial to our success, and I look forward to discussing it with the team. Please be prepared to share your insights during the meeting.\n\nRegards, Michael",
    date: "2023-03-10T15:00:00",
    read: false,
    labels: ["meeting", "work", "important"],
  },
  {
    id: "1f0f2c02-e299-40de-9b1d-86ef9e42126b",
    name: "Sarah Brown",
    email: "sarahbrown@example.com",
    subject: "Re: Feedback on Proposal",
    text: "Thank you for your feedback on the proposal. It looks great! I'm pleased to hear that you found it promising. The team worked diligently to address all the key points you raised, and I believe we now have a strong foundation for the project.\n\nI've attached the revised proposal for your review.\n\nPlease let me know if you have any further comments or suggestions. Looking forward to your response.\n\nBest regards, Sarah",
    date: "2023-02-15T16:30:00",
    read: true,
    labels: ["work"],
  },
  {
    id: "17c0a96d-4415-42b1-8b4f-764efab57f66",
    name: "David Lee",
    email: "davidlee@example.com",
    subject: "New Project Idea",
    text: "I have an exciting new project idea to discuss with you. It involves expanding our services to target a niche market that has shown considerable growth in recent months.\n\nI've prepared a detailed proposal outlining the potential benefits and the strategy for execution.\n\nThis project has the potential to significantly impact our business positively. Let's set up a meeting to dive into the details and determine if it aligns with our current goals.\n\nBest regards, David",
    date: "2023-01-28T17:45:00",
    read: false,
    labels: ["meeting", "work", "important"],
  },
  {
    id: "2f0130cb-39fc-44c4-bb3c-0a4337edaaab",
    name: "Olivia Wilson",
    email: "oliviawilson@example.com",
    subject: "Vacation Plans",
    text: "Let's plan our vacation for next month. What do you think? I've been thinking of visiting a tropical paradise, and I've put together some destination options.\n\nI believe it's time for us to unwind and recharge. Please take a look at the options and let me know your preferences.\n\nWe can start making arrangements to ensure a smooth and enjoyable trip.\n\nExcited to hear your thoughts! Olivia",
    date: "2022-12-20T18:30:00",
    read: true,
    labels: ["personal"],
  },
  {
    id: "de305d54-75b4-431b-adb2-eb6b9e546014",
    name: "James Martin",
    email: "jamesmartin@example.com",
    subject: "Re: Conference Registration",
    text: "I've completed the registration for the conference next month. The event promises to be a great networking opportunity, and I'm looking forward to attending the various sessions and connecting with industry experts.\n\nI've also attached the conference schedule for your reference.\n\nIf there are any specific topics or sessions you'd like me to explore, please let me know. It's an exciting event, and I'll make the most of it.\n\nBest regards, James",
    date: "2022-11-30T19:15:00",
    read: true,
    labels: ["work", "conference"],
  },
  {
    id: "7dd90c63-00f6-40f3-bd87-5060a24e8ee7",
    name: "Sophia White",
    email: "sophiawhite@example.com",
    subject: "Team Dinner",
    text: "Let's have a team dinner next week to celebrate our success. We've achieved some significant milestones, and it's time to acknowledge our hard work and dedication.\n\nI've made reservations at a lovely restaurant, and I'm sure it'll be an enjoyable evening.\n\nPlease confirm your availability and any dietary preferences. Looking forward to a fun and memorable dinner with the team!\n\nBest, Sophia",
    date: "2022-11-05T20:30:00",
    read: false,
    labels: ["meeting", "work"],
  },
  {
    id: "99a88f78-3eb4-4d87-87b7-7b15a49a0a05",
    name: "Daniel Johnson",
    email: "danieljohnson@example.com",
    subject: "Feedback Request",
    text: "I'd like your feedback on the latest project deliverables. We've made significant progress, and I value your input to ensure we're on the right track.\n\nI've attached the deliverables for your review, and I'm particularly interested in any areas where you think we can further enhance the quality or efficiency.\n\nYour feedback is invaluable, and I appreciate your time and expertise. Let's work together to make this project a success.\n\nRegards, Daniel",
    date: "2022-10-22T09:30:00",
    read: false,
    labels: ["work"],
  },
  {
    id: "f47ac10b-58cc-4372-a567-0e02b2c3d479",
    name: "Ava Taylor",
    email: "avataylor@example.com",
    subject: "Re: Meeting Agenda",
    text: "Here's the agenda for our meeting next week. I've included all the topics we need to cover, as well as time allocations for each.\n\nIf you have any additional items to discuss or any specific points to address, please let me know, and we can integrate them into the agenda.\n\nIt's essential that our meeting is productive and addresses all relevant matters.\n\nLooking forward to our meeting! Ava",
    date: "2022-10-10T10:45:00",
    read: true,
    labels: ["meeting", "work"],
  },
  {
    id: "c1a0ecb4-2540-49c5-86f8-21e5ce79e4e6",
    name: "William Anderson",
    email: "williamanderson@example.com",
    subject: "Product Launch Update",
    text: "The product launch is on track. I'll provide an update during our call. We've made substantial progress in the development and marketing of our new product.\n\nI'm excited to share the latest updates with you during our upcoming call. It's crucial that we coordinate our efforts to ensure a successful launch. Please come prepared with any questions or insights you may have.\n\nLet's make this product launch a resounding success!\n\nBest regards, William",
    date: "2022-09-20T12:00:00",
    read: false,
    labels: ["meeting", "work", "important"],
  },
  {
    id: "ba54eefd-4097-4949-99f2-2a9ae4d1a836",
    name: "Mia Harris",
    email: "miaharris@example.com",
    subject: "Re: Travel Itinerary",
    text: "I've received the travel itinerary. It looks great! Thank you for your prompt assistance in arranging the details. I've reviewed the schedule and the accommodations, and everything seems to be in order. I'm looking forward to the trip, and I'm confident it'll be a smooth and enjoyable experience.\n\nIf there are any specific activities or attractions you recommend at our destination, please feel free to share your suggestions.\n\nExcited for the trip! Mia",
    date: "2022-09-10T13:15:00",
    read: true,
    labels: ["personal", "travel"],
  },
  {
    id: "df09b6ed-28bd-4e0c-85a9-9320ec5179aa",
    name: "Ethan Clark",
    email: "ethanclark@example.com",
    subject: "Team Building Event",
    text: "Let's plan a team-building event for our department. Team cohesion and morale are vital to our success, and I believe a well-organized team-building event can be incredibly beneficial. I've done some research and have a few ideas for fun and engaging activities.\n\nPlease let me know your thoughts and availability. We want this event to be both enjoyable and productive.\n\nTogether, we'll strengthen our team and boost our performance.\n\nRegards, Ethan",
    date: "2022-08-25T15:30:00",
    read: false,
    labels: ["meeting", "work"],
  },
  {
    id: "d67c1842-7f8b-4b4b-9be1-1b3b1ab4611d",
    name: "Chloe Hall",
    email: "chloehall@example.com",
    subject: "Re: Budget Approval",
    text: "The budget has been approved. We can proceed with the project. I'm delighted to inform you that our budget proposal has received the green light from the finance department. This is a significant milestone, and it means we can move forward with the project as planned.\n\nI've attached the finalized budget for your reference. Let's ensure that we stay on track and deliver the project on time and within budget.\n\nIt's an exciting time for us! Chloe",
    date: "2022-08-10T16:45:00",
    read: true,
    labels: ["work", "budget"],
  },
  {
    id: "6c9a7f94-8329-4d70-95d3-51f68c186ae1",
    name: "Samuel Turner",
    email: "samuelturner@example.com",
    subject: "Weekend Hike",
    text: "Who's up for a weekend hike in the mountains? I've been craving some outdoor adventure, and a hike in the mountains sounds like the perfect escape. If you're up for the challenge, we can explore some scenic trails and enjoy the beauty of nature.\n\nI've done some research and have a few routes in mind.\n\nLet me know if you're interested, and we can plan the details.\n\nIt's sure to be a memorable experience! Samuel",
    date: "2022-07-28T17:30:00",
    read: false,
    labels: ["personal"],
  },
];

export type Mail = (typeof mails)[number];

export const accounts = [
  {
    label: "Alicia Koch",
    email: "alicia@example.com",
    icon: (
      <svg role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
        <title>Vercel</title>
        <path d="M24 22.525H0l12-21.05 12 21.05z" fill="currentColor" />
      </svg>
    ),
  },
  {
    label: "Alicia Koch",
    email: "alicia@gmail.com",
    icon: (
      <svg role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
        <title>Gmail</title>
        <path
          d="M24 5.457v13.909c0 .904-.732 1.636-1.636 1.636h-3.819V11.73L12 16.64l-6.545-4.91v9.273H1.636A1.636 1.636 0 0 1 0 19.366V5.457c0-2.023 2.309-3.178 3.927-1.964L5.455 4.64 12 9.548l6.545-4.91 1.528-1.145C21.69 2.28 24 3.434 24 5.457z"
          fill="currentColor"
        />
      </svg>
    ),
  },
  {
    label: "Alicia Koch",
    email: "alicia@me.com",
    icon: (
      <svg role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
        <title>iCloud</title>
        <path
          d="M13.762 4.29a6.51 6.51 0 0 0-5.669 3.332 3.571 3.571 0 0 0-1.558-.36 3.571 3.571 0 0 0-3.516 3A4.918 4.918 0 0 0 0 14.796a4.918 4.918 0 0 0 4.92 4.914 4.93 4.93 0 0 0 .617-.045h14.42c2.305-.272 4.041-2.258 4.043-4.589v-.009a4.594 4.594 0 0 0-3.727-4.508 6.51 6.51 0 0 0-6.511-6.27z"
          fill="currentColor"
        />
      </svg>
    ),
  },
];

export type Account = (typeof accounts)[number];

export const contacts = [
  {
    name: "Emma Johnson",
    email: "emma.johnson@example.com",
  },
  {
    name: "Liam Wilson",
    email: "liam.wilson@example.com",
  },
  {
    name: "Olivia Davis",
    email: "olivia.davis@example.com",
  },
  {
    name: "Noah Martinez",
    email: "noah.martinez@example.com",
  },
  {
    name: "Ava Taylor",
    email: "ava.taylor@example.com",
  },
  {
    name: "Lucas Brown",
    email: "lucas.brown@example.com",
  },
  {
    name: "Sophia Smith",
    email: "sophia.smith@example.com",
  },
  {
    name: "Ethan Wilson",
    email: "ethan.wilson@example.com",
  },
  {
    name: "Isabella Jackson",
    email: "isabella.jackson@example.com",
  },
  {
    name: "Mia Clark",
    email: "mia.clark@example.com",
  },
  {
    name: "Mason Lee",
    email: "mason.lee@example.com",
  },
  {
    name: "Layla Harris",
    email: "layla.harris@example.com",
  },
  {
    name: "William Anderson",
    email: "william.anderson@example.com",
  },
  {
    name: "Ella White",
    email: "ella.white@example.com",
  },
  {
    name: "James Thomas",
    email: "james.thomas@example.com",
  },
  {
    name: "Harper Lewis",
    email: "harper.lewis@example.com",
  },
  {
    name: "Benjamin Moore",
    email: "benjamin.moore@example.com",
  },
  {
    name: "Aria Hall",
    email: "aria.hall@example.com",
  },
  {
    name: "Henry Turner",
    email: "henry.turner@example.com",
  },
  {
    name: "Scarlett Adams",
    email: "scarlett.adams@example.com",
  },
];

export type Contact = (typeof contacts)[number];

================
File: components/mail/empty-state.tsx
================
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogHeader,
  DialogTitle,
  DialogClose,
} from "@/components/ui/dialog";
import {
  Archive,
  ArchiveX,
  FileText,
  Inbox,
  LucideIcon,
  Plus,
  SearchX,
  Send,
  Trash2,
} from "lucide-react";
import { emailProviders } from "@/constants/emailProviders";
import { useConnections } from "@/hooks/use-connections";
import { Button } from "@/components/ui/button";
import { cn } from "@/lib/utils";
import { useMemo } from "react";

// Types for default inbox filters
export type FolderType = "inbox" | "draft" | "sent" | "spam" | "trash" | "archive" | "search";

interface EmptyStateConfig {
  icon: LucideIcon;
  title: string;
  description: string;
}

type FolderConfig = Record<FolderType, EmptyStateConfig>;

// Scoped styles for no messages state
const styles = {
  container: "w-full flex items-center justify-center text-center px-4",
  content: "flex flex-col items-center",
  icon: "h-8 w-8 text-muted-foreground/50 mb-2",
  title: "text-lg font-semibold text-muted-foreground",
  description: "text-sm text-muted-foreground/80",
} as const;

// Config for default inbox filters
const FOLDER_CONFIGS: FolderConfig = {
  inbox: {
    icon: Inbox,
    title: "Your inbox is empty",
    description: "Nothing here, well done.",
  },
  draft: {
    icon: FileText,
    title: "No saved drafts",
    description: "Drafts you create will appear here",
  },
  sent: {
    icon: Send,
    title: "No sent messages",
    description: "Messages you send will appear here",
  },
  spam: {
    icon: ArchiveX,
    title: "No spam messages",
    description: "Messages marked as spam will appear here",
  },
  trash: {
    icon: Trash2,
    title: "Trash is empty",
    description: "Deleted messages will appear here",
  },
  archive: {
    icon: Archive,
    title: "No archived messages",
    description: "Messages you archive will appear here",
  },
  search: {
    icon: SearchX,
    title: "No results found",
    description: "Try adjusting your search or filters to find what you're looking for",
  },
} as const;

// interface for empty state
interface EmptyStateProps {
  folder: FolderType;
  className?: string;
}

/**
 * empty-state.tsx
 *
 * Displays an empty state message for each default inbox filter when no messages exist.
 * Displays the corresponding icon and text appropriate for each empty mailbox state.
 *
 * @param folder - The mailbox to display the empty state for
 * @param className - Any styling to apply to the container
 */
function EmptyState({ folder, className }: EmptyStateProps) {
  // Dev warning for invalid folder types
  if (process.env.NODE_ENV === "development" && !(folder in FOLDER_CONFIGS)) {
    console.warn(`Invalid folder type provided: ${folder}`);
  }

  const config = FOLDER_CONFIGS[folder] ?? FOLDER_CONFIGS.inbox;
  const Icon = config.icon;
  const connections = useConnections();
  const noConnection = useMemo(
    () => connections.data && connections.data.length === 0,
    [connections?.data],
  );

  // Don't render anything while loading
  if (connections.isLoading) return null;

  return (
    <div>
      {noConnection ? (
        <Dialog open={noConnection}>
          <DialogContent className="sm:max-w-md">
            <DialogHeader>
              <DialogTitle>Connect Email</DialogTitle>
              <DialogDescription>Select an email provider to connect</DialogDescription>
            </DialogHeader>
            <div className="mt-4 grid grid-cols-2 gap-4">
              {emailProviders.map((provider) => (
                <a key={provider.name} href={`/api/v1/mail/auth/${provider.providerId}/init`}>
                  <Button
                    variant="outline"
                    className="h-24 w-full flex-col items-center justify-center gap-2"
                  >
                    <svg viewBox="0 0 24 24" className="h-12 w-12">
                      <path fill="currentColor" d={provider.icon} />
                    </svg>
                    <span className="text-xs">{provider.name}</span>
                  </Button>
                </a>
              ))}
              <Button
                variant="outline"
                className="h-24 flex-col items-center justify-center gap-2 border-dashed"
              >
                <Plus className="h-12 w-12" />
                <span className="text-xs">More Coming Soon</span>
              </Button>
            </div>
            <DialogClose />
          </DialogContent>
        </Dialog>
      ) : (
        <div
          role="status"
          aria-live="polite"
          data-testid="empty-state"
          className={cn(styles.container, className)}
        >
          <div className={styles.content}>
            <Icon className={styles.icon} aria-hidden="true" data-testid="empty-state-icon" />
            <h3 className={styles.title}>{config.title}</h3>
            <p className={styles.description}>{config.description}</p>
          </div>
        </div>
      )}
    </div>
  );
}

export { EmptyState };

================
File: components/mail/mail-compose-modal.tsx
================
"use client";

import {
  Credenza,
  CredenzaBody,
  CredenzaClose,
  CredenzaContent,
  CredenzaFooter,
  CredenzaHeader,
  CredenzaTitle,
} from "@/components/ui/responsive-modal";
import { useOpenComposeModal } from "@/hooks/use-open-compose-modal";
import { VisuallyHidden } from "@radix-ui/react-visually-hidden";
import { MailCompose } from "./mail-compose";

export default function MailComposeModal() {
  const { isOpen, setIsOpen, close } = useOpenComposeModal();

  return (
    <Credenza open={isOpen} onOpenChange={setIsOpen}>
      <CredenzaContent className="md:min-w-[500px]">
        <VisuallyHidden>
          <CredenzaHeader>
            <CredenzaTitle>Compose</CredenzaTitle>
          </CredenzaHeader>
        </VisuallyHidden>
        <CredenzaBody>
          <MailCompose onClose={close} />
        </CredenzaBody>
        <CredenzaFooter>
          <CredenzaClose asChild>
            <button>Close</button>
          </CredenzaClose>
        </CredenzaFooter>
      </CredenzaContent>
    </Credenza>
  );
}

================
File: components/mail/mail-compose.tsx
================
import {
  X,
  Paperclip,
  Image as ImageIcon,
  Link2,
  Bold,
  Italic,
  List,
  ListOrdered,
  FileIcon,
  Send,
} from "lucide-react";
import { TooltipProvider, Tooltip, TooltipTrigger, TooltipContent } from "@/components/ui/tooltip";
import { compressText, decompressText, truncateFileName } from "@/lib/utils";
import { Popover, PopoverTrigger, PopoverContent } from "../ui/popover";
import { Card, CardContent, CardHeader, CardTitle } from "../ui/card";
import { useOpenComposeModal } from "@/hooks/use-open-compose-modal";
import { ToggleGroup, ToggleGroupItem } from "../ui/toggle-group";
import { TooltipPortal } from "@radix-ui/react-tooltip";
import { Separator } from "@/components/ui/separator";
import { DialogTitle } from "@/components/ui/dialog";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { sendEmail } from "@/actions/send";
import { useQueryState } from "nuqs";
import { Badge } from "../ui/badge";
import Image from "next/image";
import { toast } from "sonner";
import * as React from "react";

interface MailComposeProps {
  onClose: () => void;
  replyTo?: {
    email: string;
    subject: string;
  };
}

export function MailCompose({ onClose, replyTo }: MailComposeProps) {
  const editorRef = React.useRef<HTMLDivElement>(null);
  const [attachments, setAttachments] = React.useState<File[]>([]);
  const [toInput, setToInput] = React.useState(replyTo?.email || "");
  const [showSuggestions, setShowSuggestions] = React.useState(false);

  const [subject, setSubject] = useQueryState("subject", {
    defaultValue: "",
    parse: (value) => decompressText(value),
    serialize: (value) => compressText(value),
  });

  const [messageContent, setMessageContent] = useQueryState("body", {
    defaultValue: "",
    parse: (value) => decompressText(value),
    serialize: (value) => compressText(value),
  });

  const { isOpen } = useOpenComposeModal();

  // TODO: get past emails from driver/provider
  const pastEmails = [
    "alice@example.com",
    "bob@example.com",
    "carol@example.com",
    "david@example.com",
    "eve@example.com",
  ];

  React.useEffect(() => {
    if (!isOpen) {
      setMessageContent(null);
      setSubject(null);
    }
  }, [isOpen, setMessageContent, setSubject]);

  const filteredSuggestions = toInput
    ? pastEmails.filter((email) => email.toLowerCase().includes(toInput.toLowerCase()))
    : [];

  const handleAttachment = (e: React.ChangeEvent<HTMLInputElement>) => {
    if (e.target.files) {
      setAttachments([...attachments, ...Array.from(e.target.files)]);
    }
  };

  const removeAttachment = (index: number) => {
    setAttachments(attachments.filter((_, i) => i !== index));
  };

  const insertFormat = (format: string) => {
    if (!editorRef.current) return;
    document.execCommand("styleWithCSS", false, "true");

    switch (format) {
      case "bold":
        document.execCommand("bold", false);
        break;
      case "italic":
        document.execCommand("italic", false);
        break;
      case "list":
        document.execCommand("insertUnorderedList", false);
        break;
      case "ordered-list":
        document.execCommand("insertOrderedList", false);
        break;
      case "link":
        const url = prompt("Enter URL:");
        if (url) document.execCommand("createLink", false, url);
        break;
    }
    editorRef.current.focus();
  };

  const MAX_VISIBLE_ATTACHMENTS = 3;
  const hasHiddenAttachments = React.useMemo(
    () => attachments.length > MAX_VISIBLE_ATTACHMENTS,
    [attachments],
  );

  const handleSendEmail = async () => {
    try {
      await sendEmail({
        to: toInput,
        subject: subject,
        message: messageContent,
        attachments: attachments,
      });
      onClose();
      toast.success("Email sent successfully!");
    } catch (error) {
      console.error("Error sending email:", error);
      toast.error("Failed to send email. Please try again.");
    }
  };

  const renderAttachments = React.useCallback(() => {
    if (attachments.length === 0) return null;

    return (
      <div className="mt-2 flex flex-wrap gap-2">
        {attachments.slice(0, MAX_VISIBLE_ATTACHMENTS).map((file, index) => (
          <Tooltip key={index}>
            <TooltipTrigger asChild>
              <Badge variant="secondary">
                {truncateFileName(file.name)}
                <Button
                  variant="ghost"
                  size="icon"
                  className="-mr-1 ml-2 h-5 w-5 rounded-full p-0"
                  onClick={(e) => {
                    e.preventDefault();
                    removeAttachment(index);
                  }}
                >
                  <X className="h-4 w-4" />
                </Button>
              </Badge>
            </TooltipTrigger>
            <TooltipPortal>
              <TooltipContent className="w-64 p-0" sideOffset={6}>
                <div className="relative h-32 w-full">
                  {file.type.startsWith("image/") ? (
                    <Image
                      src={URL.createObjectURL(file) || "/placeholder.svg"}
                      alt={file.name}
                      fill
                      className="rounded-t-md object-cover"
                    />
                  ) : (
                    <div className="flex h-full w-full items-center justify-center p-4">
                      <FileIcon className="h-16 w-16 text-primary" />
                    </div>
                  )}
                </div>
                <div className="bg-secondary p-2">
                  <p className="text-sm font-medium">{truncateFileName(file.name, 30)}</p>
                  <p className="text-xs text-muted-foreground">
                    Size: {(file.size / (1024 * 1024)).toFixed(2)} MB
                  </p>
                  <p className="text-xs text-muted-foreground">
                    Last modified: {new Date(file.lastModified).toLocaleDateString()}
                  </p>
                </div>
              </TooltipContent>
            </TooltipPortal>
          </Tooltip>
        ))}

        {hasHiddenAttachments && (
          <Popover>
            <PopoverTrigger asChild>
              <Badge variant="secondary" className="cursor-pointer hover:bg-secondary/80">
                +{attachments.length - MAX_VISIBLE_ATTACHMENTS} more...
              </Badge>
            </PopoverTrigger>
            <PopoverContent
              className="w-80 touch-auto"
              align="start"
              onOpenAutoFocus={(e) => e.preventDefault()}
            >
              <div className="space-y-2">
                <div className="px-1">
                  <h4 className="font-medium leading-none">Attachments</h4>
                  <p className="text-sm text-muted-foreground">
                    {attachments.length} files attached
                  </p>
                </div>
                <Separator />
                <div
                  className="h-[200px] touch-auto overflow-y-auto overscroll-contain px-1 py-1"
                  onWheel={(e) => e.stopPropagation()}
                  onTouchStart={(e) => e.stopPropagation()}
                  onTouchMove={(e) => e.stopPropagation()}
                  style={{
                    WebkitOverflowScrolling: "touch",
                  }}
                >
                  <div className="space-y-1">
                    {attachments.map((file, index) => (
                      <Tooltip key={index}>
                        <TooltipTrigger asChild>
                          <div
                            key={index}
                            className="flex items-center justify-between rounded-md p-2 hover:bg-muted"
                          >
                            <div className="flex items-center gap-2 overflow-hidden">
                              <Paperclip className="h-4 w-4 flex-shrink-0" />
                              <span className="truncate text-sm">
                                {truncateFileName(file.name)}
                              </span>
                            </div>
                            <Button
                              variant="ghost"
                              size="icon"
                              className="h-8 w-8 flex-shrink-0"
                              onClick={(e) => {
                                e.preventDefault();
                                e.stopPropagation();
                                removeAttachment(index);
                              }}
                            >
                              <X className="h-4 w-4" />
                            </Button>
                          </div>
                        </TooltipTrigger>
                        <TooltipContent className="w-64 p-0">
                          <div className="relative h-32 w-full">
                            {file.type.startsWith("image/") ? (
                              <Image
                                src={URL.createObjectURL(file) || "/placeholder.svg"}
                                alt={file.name}
                                fill
                                className="rounded-t-md object-cover"
                              />
                            ) : (
                              <div className="flex h-full w-full items-center justify-center p-4">
                                <FileIcon className="h-16 w-16 text-primary" />
                              </div>
                            )}
                          </div>
                          <div className="bg-secondary p-2">
                            <p className="text-sm font-medium">{file.name}</p>
                            <p className="text-xs text-muted-foreground">
                              Size: {(file.size / (1024 * 1024)).toFixed(2)} MB
                            </p>
                            <p className="text-xs text-muted-foreground">
                              Last modified: {new Date(file.lastModified).toLocaleDateString()}
                            </p>
                          </div>
                        </TooltipContent>
                      </Tooltip>
                    ))}
                  </div>
                </div>
              </div>
            </PopoverContent>
          </Popover>
        )}
      </div>
    );
    // TODO: FIX
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [attachments, hasHiddenAttachments]);

  return (
    <>
      <DialogTitle className="sr-only">Compose Email</DialogTitle>
      <TooltipProvider>
        <Card className="h-full w-full border-none shadow-none">
          <CardHeader>
            <CardTitle className="text-2xl font-semibold tracking-tight">New Message</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="grid gap-2">
              <div className="relative">
                <Input
                  tabIndex={1}
                  placeholder="To"
                  value={toInput}
                  onChange={(e) => {
                    setToInput(e.target.value);
                    setShowSuggestions(true);
                  }}
                />
                {showSuggestions && filteredSuggestions.length > 0 && (
                  <ul className="absolute left-0 right-0 top-full z-10 mt-1 max-h-40 overflow-auto rounded-md border border-input bg-background shadow-lg">
                    {filteredSuggestions.map((email, index) => (
                      <li
                        key={index}
                        onClick={() => {
                          setToInput(email);
                          setShowSuggestions(false);
                        }}
                        className="cursor-pointer p-2 hover:bg-muted"
                      >
                        {email}
                      </li>
                    ))}
                  </ul>
                )}
              </div>
              <Input
                placeholder="Subject"
                defaultValue={subject || ""}
                onChange={(e) => setSubject(e.target.value)}
                tabIndex={2}
              />

              <div className="flex justify-end">
                <ToggleGroup type="multiple">
                  <ToggleGroupItem tabIndex={3} value="bold" onClick={() => insertFormat("bold")}>
                    <Bold className="h-4 w-4" />
                  </ToggleGroupItem>
                  <ToggleGroupItem
                    tabIndex={4}
                    value="italic"
                    onClick={() => insertFormat("italic")}
                  >
                    <Italic className="h-4 w-4" />
                  </ToggleGroupItem>
                  <ToggleGroupItem tabIndex={5} value="list" onClick={() => insertFormat("list")}>
                    <List className="h-4 w-4" />
                  </ToggleGroupItem>
                  <ToggleGroupItem
                    tabIndex={6}
                    value="ordered-list"
                    onClick={() => insertFormat("ordered-list")}
                  >
                    <ListOrdered className="h-4 w-4" />
                  </ToggleGroupItem>
                  <Button
                    variant="ghost"
                    size="icon"
                    tabIndex={7}
                    onClick={() => insertFormat("link")}
                  >
                    <Link2 className="h-4 w-4" />
                  </Button>
                  <Button
                    variant="ghost"
                    size="icon"
                    tabIndex={8}
                    onClick={() => {
                      const input = document.createElement("input");
                      input.type = "file";
                      input.accept = "image/*";
                      input.onchange = (e) => {
                        const file = (e.target as HTMLInputElement).files?.[0];
                        if (file) {
                          const reader = new FileReader();
                          reader.onload = () => {
                            insertFormat(`![${file.name}](${reader.result})`);
                          };
                          reader.readAsDataURL(file);
                        }
                      };
                      input.click();
                    }}
                  >
                    <ImageIcon className="h-4 w-4" />
                  </Button>
                </ToggleGroup>
              </div>

              <div
                ref={editorRef}
                contentEditable
                className="min-h-[300px] w-full resize-none overflow-y-auto rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50"
                role="textbox"
                aria-multiline="true"
                tabIndex={9}
                style={{
                  overflowWrap: "break-word",
                  wordWrap: "break-word",
                  whiteSpace: "pre-wrap",
                  maxWidth: "100%",
                }}
                onInput={() => {
                  setMessageContent(editorRef.current?.innerHTML || "");
                }}
              />

              {renderAttachments()}
              <div className="mt-4 flex justify-between">
                <label>
                  <Button
                    tabIndex={10}
                    variant="outline"
                    onClick={(e) => {
                      e.preventDefault();
                      const fileInput = e.currentTarget.nextElementSibling as HTMLInputElement;
                      fileInput?.click();
                    }}
                  >
                    <Paperclip className="mr-2 h-4 w-4" />
                    Attach files
                  </Button>
                  <Input type="file" className="hidden" multiple onChange={handleAttachment} />
                </label>
                <div className="flex gap-2">
                  <Button tabIndex={12} onClick={handleSendEmail}>
                    Send
                    <Send className="ml-2 h-3 w-3" />
                  </Button>
                </div>
              </div>
            </div>
          </CardContent>
        </Card>
      </TooltipProvider>
    </>
  );
}

================
File: components/mail/mail-display.tsx
================
import { Popover, PopoverContent, PopoverTrigger } from "../ui/popover";
import { Avatar, AvatarFallback, AvatarImage } from "../ui/avatar";
import { ChevronDown, ChevronUp } from "lucide-react";
import { BellOff, Lock } from "lucide-react";
import { Separator } from "../ui/separator";
import { useState, useEffect } from "react";
import { MailIframe } from "./mail-iframe";
import { ParsedMessage } from "@/types";
import { Button } from "../ui/button";
import { format } from "date-fns";
import { cn } from "@/lib/utils";

type Props = {
  emailData: ParsedMessage;
  isFullscreen: boolean;
  isMuted: boolean;
  isLoading: boolean;
  index: number;
};

const MailDisplay = ({ emailData, isFullscreen, isMuted, index }: Props) => {
  const [isCollapsed, setIsCollapsed] = useState<boolean>(true);
  const [openDetailsPopover, setOpenDetailsPopover] = useState<boolean>(false);

  useEffect(() => {
    if (index === 0) {
      setIsCollapsed(false);
    }
  }, [index]);

  return (
    <div className={cn("relative flex-1 overflow-hidden", isFullscreen && "h-[calc(100vh-4rem)]")}>
      <div className="relative h-full overflow-y-auto">
        <div className="flex flex-col gap-4 p-4 py-5 transition-all duration-200">
          <div className="flex items-start justify-between gap-4">
            <div className="flex items-start gap-4">
              <Avatar>
                <AvatarImage alt={emailData?.sender?.name} />
                <AvatarFallback>
                  {emailData?.sender?.name
                    .split(" ")
                    .map((chunk) => chunk[0])
                    .join("")}
                </AvatarFallback>
              </Avatar>
              <div className="flex-1 space-y-1">
                <div className="flex items-center justify-start gap-2">
                  <span className="font-semibold">{emailData?.sender?.name}</span>
                  <span className="flex grow-0 items-center gap-2 text-sm text-muted-foreground">
                    <span>{emailData?.sender?.email}</span>
                    {isMuted && <BellOff className="h-4 w-4" />}
                  </span>
                </div>
                <div className="flex items-center gap-2">
                  <time className="text-xs text-muted-foreground">
                    {format(new Date(emailData?.receivedOn), "PPp")}
                  </time>
                  <Popover open={openDetailsPopover} onOpenChange={setOpenDetailsPopover}>
                    <PopoverTrigger asChild>
                      <Button
                        variant="ghost"
                        size="sm"
                        className="h-auto p-0 text-xs underline"
                        onClick={() => setOpenDetailsPopover(true)}
                      >
                        Details
                      </Button>
                    </PopoverTrigger>
                    <PopoverContent
                      className="w-[420px] rounded-lg border p-3 shadow-lg"
                      onBlur={() => setOpenDetailsPopover(false)}
                    >
                      <div className="space-y-1 text-sm">
                        <div className="flex">
                          <span className="w-24 text-end text-gray-500">From:</span>
                          <div className="ml-3">
                            <span className="pr-1 font-bold text-muted-foreground">
                              {emailData?.sender?.name}
                            </span>
                            <span className="text-muted-foreground">
                              {emailData?.sender?.email}
                            </span>
                          </div>
                        </div>
                        <div className="flex">
                          <span className="w-24 text-end text-gray-500">To:</span>
                          <span className="ml-3 text-muted-foreground">
                            {emailData?.sender?.email}
                          </span>
                        </div>
                        <div className="flex">
                          <span className="w-24 text-end text-gray-500">Cc:</span>
                          <span className="ml-3 text-muted-foreground">
                            {emailData?.sender?.email}
                          </span>
                        </div>
                        <div className="flex">
                          <span className="w-24 text-end text-gray-500">Date:</span>
                          <span className="ml-3 text-muted-foreground">
                            {format(new Date(emailData?.receivedOn), "PPpp")}
                          </span>
                        </div>
                        <div className="flex">
                          <span className="w-24 text-end text-gray-500">Mailed-By:</span>
                          <span className="ml-3 text-muted-foreground">
                            {emailData?.sender?.email}
                          </span>
                        </div>
                        <div className="flex">
                          <span className="w-24 text-end text-gray-500">Signed-By:</span>
                          <span className="ml-3 text-muted-foreground">
                            {emailData?.sender?.email}
                          </span>
                        </div>
                        <div className="flex items-center">
                          <span className="w-24 text-end text-gray-500">Security:</span>
                          <div className="ml-3 flex items-center gap-1 text-muted-foreground">
                            <Lock className="h-4 w-4 text-green-600" /> Standard encryption (TLS)
                          </div>
                        </div>
                      </div>
                    </PopoverContent>
                  </Popover>
                </div>
              </div>
            </div>
            <div className="flex justify-end">
              <Button variant="ghost" size="icon" onClick={() => setIsCollapsed(!isCollapsed)}>
                {isCollapsed ? (
                  <ChevronDown className="h-4 w-4" />
                ) : (
                  <ChevronUp className="h-4 w-4" />
                )}
              </Button>
            </div>
          </div>
        </div>
        <div
          className={cn(
            "h-0 overflow-hidden transition-all duration-200",
            !isCollapsed && "h-[1px]",
          )}
        >
          <Separator />
        </div>

        <div
          className={cn(
            "grid overflow-hidden transition-all duration-200",
            isCollapsed ? "grid-rows-[0fr]" : "grid-rows-[1fr]",
          )}
        >
          <div className="min-h-0 overflow-hidden">
            <div className="h-fit w-full p-0">
              {emailData?.decodedBody ? (
                // <p className="flex h-[500px] w-full items-center justify-center">
                //   There should be an iframe in here
                // </p>
                <MailIframe html={emailData?.decodedBody} />
              ) : (
                <div
                  className="flex h-[500px] w-full items-center justify-center"
                  style={{ minHeight: "500px" }}
                >
                  <div className="h-32 w-32 animate-pulse rounded-full bg-secondary" />
                </div>
              )}
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default MailDisplay;

================
File: components/mail/mail-iframe.tsx
================
import { fixNonReadableColors, template } from "@/lib/email-utils";
import { useEffect, useMemo, useRef, useState } from "react";
import { Loader2 } from "lucide-react";
import { useTheme } from "next-themes";
import { cn } from "@/lib/utils";

export function MailIframe({ html }: { html: string }) {
  const iframeRef = useRef<HTMLIFrameElement>(null);
  const [height, setHeight] = useState(300);
  const { resolvedTheme } = useTheme();
  const [loaded, setLoaded] = useState(false);

  const iframeDoc = useMemo(() => template(html), [html]);

  useEffect(() => {
    if (!iframeRef.current) return;
    const url = URL.createObjectURL(new Blob([iframeDoc], { type: "text/html" }));
    iframeRef.current.src = url;
    const handler = () => {
      if (iframeRef.current?.contentWindow?.document.body) {
        const height = iframeRef.current.contentWindow.document.body.getBoundingClientRect().height;
        setHeight(height);
        fixNonReadableColors(iframeRef.current.contentWindow.document.body);
      }
      setLoaded(true);
    };
    iframeRef.current.onload = handler;

    return () => {
      URL.revokeObjectURL(url);
    };
  }, [iframeDoc]);

  useEffect(() => {
    if (iframeRef.current?.contentWindow?.document.body) {
      iframeRef.current.contentWindow.document.body.style.backgroundColor =
        resolvedTheme === "dark" ? "rgb(0, 0, 0)" : "rgb(255, 255, 255)";
      fixNonReadableColors(iframeRef.current.contentWindow.document.body);
    }
  }, [resolvedTheme]);

  return (
    <>
      {!loaded && (
        <div className="flex h-full w-full items-center justify-center gap-4 p-8">
          <Loader2 className="size-4 animate-spin" />
          <span>Loading email content...</span>
        </div>
      )}
      <iframe
        scrolling="no"
        height={height}
        ref={iframeRef}
        className={cn(
          "w-full flex-1 overflow-hidden transition-opacity duration-200",
          loaded ? "opacity-100" : "opacity-0",
        )}
        title="Email Content"
        sandbox="allow-same-origin allow-popups allow-popups-to-escape-sandbox allow-scripts"
        style={{
          width: "100%",
          overflow: "hidden",
        }}
      />
    </>
  );
}

================
File: components/mail/mail-list.tsx
================
import { EmptyState, type FolderType } from "@/components/mail/empty-state";
import { ComponentProps, useEffect, useRef, useState } from "react";
import { preloadThread, useMarkAsRead } from "@/hooks/use-threads";
import { useSearchValue } from "@/hooks/use-search-value";
import { ScrollArea } from "@/components/ui/scroll-area";
import { useKeyPressed } from "@/hooks/use-key-pressed";
import { useMail } from "@/components/mail/use-mail";
import { useSession } from "@/lib/auth-client";
import { Badge } from "@/components/ui/badge";
import { cn, formatDate } from "@/lib/utils";
import { InitialThread } from "@/types";

interface MailListProps {
  items: InitialThread[];
  isCompact?: boolean;
  folder: string;
}

const HOVER_DELAY = 300; // ms before prefetching

type MailSelectMode = "mass" | "range" | "single";

type ThreadProps = {
  message: InitialThread;
  selectMode: MailSelectMode;
  onSelect: (message: InitialThread) => void;
  isCompact?: boolean;
};

const Thread = ({ message: initialMessage, selectMode, onSelect, isCompact }: ThreadProps) => {
  const [message, setMessage] = useState(initialMessage);
  const [mail] = useMail();
  const { markAsRead } = useMarkAsRead();
  const { data: session } = useSession();
  const hoverTimeoutRef = useRef<ReturnType<typeof setTimeout> | undefined>(undefined);
  const isHovering = useRef<boolean>(false);
  const hasPrefetched = useRef<boolean>(false);
  const [searchValue] = useSearchValue();

  const isMailSelected = message.id === mail.selected;
  const isMailBulkSelected = mail.bulkSelected.includes(message.id);

  const highlightText = (text: string, highlight: string) => {
    if (!highlight?.trim()) return text;

    const regex = new RegExp(`(${highlight})`, "gi");
    const parts = text.split(regex);

    return parts.map((part, i) => {
      return i % 2 === 1 ? (
        <span
          key={i}
          className="ring-0.5 inline-flex items-center justify-center rounded bg-primary/10 px-1"
        >
          {part}
        </span>
      ) : (
        part
      );
    });
  };

  const handleMailClick = async () => {
    onSelect(message);

    if (!isMailSelected && message.unread) {
      try {
        await markAsRead(message.id);
        setMessage((prev) => ({ ...prev, unread: false }));
      } catch (error) {
        console.error("Error marking message as read:", error);
      }
    }
  };

  const handleMouseEnter = () => {
    isHovering.current = true;

    // Prefetch only in single select mode
    if (selectMode === "single" && session?.user.id && !hasPrefetched.current) {
      // Clear any existing timeout
      if (hoverTimeoutRef.current) {
        clearTimeout(hoverTimeoutRef.current);
      }

      // Set new timeout for prefetch
      hoverTimeoutRef.current = setTimeout(() => {
        if (isHovering.current) {
          const messageId = message.threadId ?? message.id;
          // Only prefetch if still hovering and hasn't been prefetched
          console.log(`🕒 Hover threshold reached for email ${messageId}, initiating prefetch...`);
          preloadThread(session.user.id, messageId, session.connectionId!);
          hasPrefetched.current = true;
        }
      }, HOVER_DELAY);
    }
  };

  const handleMouseLeave = () => {
    isHovering.current = false;
    if (hoverTimeoutRef.current) {
      clearTimeout(hoverTimeoutRef.current);
    }
  };

  // Reset prefetch flag when message changes
  useEffect(() => {
    hasPrefetched.current = false;
  }, [message.id]);

  // Cleanup timeout on unmount
  useEffect(() => {
    return () => {
      if (hoverTimeoutRef.current) {
        clearTimeout(hoverTimeoutRef.current);
      }
    };
  }, []);

  return (
    <div
      onClick={handleMailClick}
      onMouseEnter={handleMouseEnter}
      onMouseLeave={handleMouseLeave}
      key={message.id}
      className={cn(
        "group relative flex cursor-pointer flex-col items-start overflow-clip rounded-lg border border-transparent px-4 py-3 text-left text-sm transition-all hover:border-border hover:bg-accent hover:opacity-100",
        !message.unread && "opacity-70",
        (isMailSelected || isMailBulkSelected) && "border-border bg-accent opacity-100",
        isCompact && "py-2",
      )}
    >
      <div
        className={cn(
          "absolute inset-y-0 left-0 w-1 -translate-x-2 bg-primary transition-transform ease-out",
          isMailBulkSelected && "translate-x-0",
        )}
      />
      <div className="flex w-full items-center justify-between">
        <div className="flex items-center gap-2">
          <p
            className={cn(
              message.unread ? "font-bold" : "font-medium",
              "text-md flex items-baseline gap-1 group-hover:opacity-100",
            )}
          >
            {highlightText(message.sender.name, searchValue.highlight)}{" "}
            {message.totalReplies !== 1 ? (
              <span className="ml-0.5 text-xs opacity-70">{message.totalReplies}</span>
            ) : null}
            {message.unread ? <span className="ml-0.5 size-2 rounded-full bg-[#006FFE]" /> : null}
          </p>
        </div>
        {message.receivedOn ? (
          <p
            className={cn(
              "text-xs font-normal opacity-70 transition-opacity group-hover:opacity-100",
              isMailSelected && "opacity-100",
            )}
          >
            {formatDate(message.receivedOn.split(".")[0])}
          </p>
        ) : null}
      </div>
      <p
        className={cn(
          "mt-1 line-clamp-2 text-xs opacity-70 transition-opacity",
          isCompact && "line-clamp-1",
          isMailSelected && "opacity-100",
        )}
      >
        {highlightText(message.title, searchValue.highlight)}
      </p>
      {!isCompact && <MailLabels labels={message.tags} />}
    </div>
  );
};

export function MailList({ items, isCompact, folder }: MailListProps) {
  const [mail, setMail] = useMail();
  const { data: session } = useSession();
  const [searchValue, setSearchValue] = useSearchValue();

  const massSelectMode = useKeyPressed(["Control", "Meta"]);
  const rangeSelectMode = useKeyPressed("Shift");

  const selectMode: MailSelectMode = massSelectMode ? "mass" : rangeSelectMode ? "range" : "single";

  const handleMailClick = (message: InitialThread) => {
    if (selectMode === "mass") {
      const updatedBulkSelected = mail.bulkSelected.includes(message.id)
        ? mail.bulkSelected.filter((id) => id !== message.id)
        : [...mail.bulkSelected, message.id];

      setMail({ ...mail, bulkSelected: updatedBulkSelected });
      return;
    }

    if (selectMode === "range") {
      const lastSelectedItem =
        mail.bulkSelected[mail.bulkSelected.length - 1] ?? mail.selected ?? message.id;

      // Get the index range between last selected and current
      const mailsIndex = items.map((m) => m.id);
      const startIdx = mailsIndex.indexOf(lastSelectedItem);
      const endIdx = mailsIndex.indexOf(message.id);

      if (startIdx !== -1 && endIdx !== -1) {
        const selectedRange = mailsIndex.slice(
          Math.min(startIdx, endIdx),
          Math.max(startIdx, endIdx) + 1,
        );

        setMail({ ...mail, bulkSelected: selectedRange });
      }
      return;
    }

    if (mail.selected === message.threadId || mail.selected === message.id) {
      setMail({
        selected: null,
        bulkSelected: [],
      });
    } else {
      setMail({
        ...mail,
        selected: message.threadId ?? message.id,
        bulkSelected: [],
      });
    }
  };

  const isEmpty = items.length === 0;
  const isFiltering = searchValue.value.trim().length > 0;

  if (isEmpty && session) {
    if (isFiltering) {
      return <EmptyState folder="search" className="min-h-[90vh] md:min-h-[90vh]" />;
    }
    return <EmptyState folder={folder as FolderType} className="min-h-[90vh] md:min-h-[90vh]" />;
  }

  return (
    <ScrollArea className="h-full" type="scroll">
      <div
        className={cn(
          "flex flex-col gap-1.5 p-2",
          // Prevents accidental text selection while in range select mode.
          selectMode === "range" && "select-none",
        )}
      >
        {items.map((item) => (
          <Thread
            key={item.id}
            message={item}
            selectMode={selectMode}
            onSelect={handleMailClick}
            isCompact={isCompact}
          />
        ))}
      </div>
    </ScrollArea>
  );
}

function MailLabels({ labels }: { labels: string[] }) {
  if (!labels.length) return null;

  const visibleLabels = labels.filter(
    (label) => !["unread", "inbox"].includes(label.toLowerCase()),
  );

  if (!visibleLabels.length) return null;

  return (
    // TODO: When clicking on a label, apply filter to show only messages with that label.
    <div className={cn("mt-1.5 flex select-none items-center gap-2")}>
      {visibleLabels.map((label) => (
        <Badge key={label} className="rounded-full" variant={getDefaultBadgeStyle(label)}>
          <p className="text-xs font-medium lowercase">
            {label.replace(/^category_/i, "").replace(/_/g, " ")}
          </p>
        </Badge>
      ))}
    </div>
  );
}

function getDefaultBadgeStyle(label: string): ComponentProps<typeof Badge>["variant"] {
  const normalizedLabel = label.toLowerCase().replace(/^category_/i, "");

  switch (normalizedLabel) {
    case "important":
      return "important";
    case "promotions":
      return "promotions";
    case "personal":
      return "personal";
    case "updates":
      return "updates";
    case "work":
      return "default";
    case "forums":
      return "forums";
    default:
      return "secondary";
  }
}

================
File: components/mail/mail-skeleton.tsx
================
import { Archive, Copy, Maximize2, Minimize2, X, Reply, MoreVertical } from "lucide-react";
import { Skeleton } from "../ui/skeleton";
import { Button } from "../ui/button";
import { cn } from "@/lib/utils";

export const MailDisplaySkeleton = ({ isFullscreen }: { isFullscreen?: boolean }) => {
  return (
    <div
      className={cn(
        "relative m-4 flex-1 overflow-hidden rounded-lg border border-border bg-secondary/50 p-4",
        isFullscreen && "h-[calc(100vh-4rem)]",
      )}
    >
      <div className="relative inset-0 h-full overflow-y-auto pb-0">
        <div className="flex flex-col gap-4">
          <div className="flex items-start justify-between gap-4">
            <div className="flex items-start gap-4">
              <Skeleton className="h-10 w-10 rounded-full" />
              <div className="flex-1 space-y-2">
                <div className="flex items-center gap-2">
                  <Skeleton className="h-5 w-32" />
                  <Skeleton className="h-4 w-48" />
                </div>
                <div className="flex items-center gap-2">
                  <Skeleton className="h-3 w-24" />
                  <Skeleton className="h-3 w-16" />
                </div>
              </div>
            </div>
            <Skeleton className="h-6 w-6" />
          </div>
          <Skeleton className="h-[1px] w-full" />
          <div className="space-y-4">
            <div className="flex flex-col space-y-2">
              <Skeleton className="h-4 w-full" />
              <Skeleton className="h-4 w-[90%]" />
              <Skeleton className="h-4 w-[95%]" />
            </div>
            <div className="flex flex-col space-y-2">
              <Skeleton className="h-4 w-[88%]" />
              <Skeleton className="h-4 w-[92%]" />
              <Skeleton className="h-4 w-[85%]" />
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export const MailHeaderSkeleton = ({ isFullscreen }: { isFullscreen?: boolean }) => {
  return (
    <div className="flex items-center border-b p-[7px]">
      <div className="flex flex-1 items-center gap-2">
        <Button variant="ghost" className="md:h-fit md:px-2" disabled={true}>
          <X className="h-4 w-4" />
          <span className="sr-only">Close</span>
        </Button>
        <Skeleton className="w-[150px] max-w-[300px] flex-1 truncate text-sm font-medium" />
      </div>
      <div className="flex items-center gap-2">
        <Button variant="ghost" className="md:h-fit md:px-2" disabled={true}>
          {isFullscreen ? <Minimize2 className="h-4 w-4" /> : <Maximize2 className="h-4 w-4" />}
          <span className="sr-only">{isFullscreen ? "Exit fullscreen" : "Enter fullscreen"}</span>
        </Button>

        <Button variant="ghost" className="md:h-fit md:px-2" disabled={true}>
          <Copy className="h-4 w-4" />
          <span className="sr-only">Copy email data</span>
        </Button>
        <Button variant="ghost" className="md:h-fit md:px-2" disabled={true}>
          <Archive className="h-4 w-4" />
          <span className="sr-only">Archive</span>
        </Button>

        <Button variant="ghost" className="md:h-fit md:px-2" disabled={true}>
          <Reply className="h-4 w-4" />
          <span className="sr-only">Reply</span>
        </Button>
        <Button variant="ghost" className="md:h-fit md:px-2" disabled={true}>
          <MoreVertical className="h-4 w-4" />
          <span className="sr-only">More</span>
        </Button>
      </div>
    </div>
  );
};

================
File: components/mail/mail.tsx
================
"use client";

import {
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuTrigger,
} from "@/components/ui/dropdown-menu";
import {
  AlignVerticalSpaceAround,
  ArchiveX,
  BellOff,
  Check,
  ListFilter,
  SearchIcon,
  X,
} from "lucide-react";
import { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from "@/components/ui/tooltip";
import { ResizableHandle, ResizablePanel, ResizablePanelGroup } from "@/components/ui/resizable";
import { Drawer, DrawerContent, DrawerHeader, DrawerTitle } from "@/components/ui/drawer";
import { useState, useCallback, useMemo, useEffect, ReactNode } from "react";
import { ThreadDisplay } from "@/components/mail/thread-display";
import { useMediaQuery } from "../../hooks/use-media-query";
import { useSearchValue } from "@/hooks/use-search-value";
import { MailList } from "@/components/mail/mail-list";
import { useMail } from "@/components/mail/use-mail";
import { SidebarToggle } from "../ui/sidebar-toggle";
import { Skeleton } from "@/components/ui/skeleton";
import { type Mail } from "@/components/mail/data";
import { useSearchParams } from "next/navigation";
import { useThreads } from "@/hooks/use-threads";
import { Button } from "@/components/ui/button";
import { useSession } from "@/lib/auth-client";
import { useRouter } from "next/navigation";
import { SearchBar } from "./search-bar";
import { cn } from "@/lib/utils";

interface MailProps {
  accounts: {
    label: string;
    email: string;
    icon: ReactNode;
  }[];
  folder: string;
  defaultLayout: number[] | undefined;
  defaultCollapsed?: boolean;
  navCollapsedSize: number;
  muted?: boolean;
}

export function Mail({ folder }: MailProps) {
  const [searchMode, setSearchMode] = useState(false);
  const [searchValue] = useSearchValue();
  const [mail, setMail] = useMail();
  const [isCompact, setIsCompact] = useState(false);
  const searchParams = useSearchParams();
  const [isMobile, setIsMobile] = useState(false);
  const [filterValue, setFilterValue] = useState<"all" | "unread">("all");
  const router = useRouter();
  const { data: session, isPending } = useSession();

  useEffect(() => {
    if (!session?.user && !isPending) {
      router.push("/login");
    }
  }, [session?.user, isPending]);

  const labels = useMemo(() => {
    if (filterValue === "all") {
      if (searchParams.has("category")) {
        return [`CATEGORY_${searchParams.get("category")!.toUpperCase()}`];
      }
      return undefined;
    }
    if (filterValue) {
      if (searchParams.has("category")) {
        return [
          filterValue.toUpperCase(),
          `CATEGORY_${searchParams.get("category")!.toUpperCase()}`,
        ];
      }
      return [filterValue.toUpperCase()];
    }
    return undefined;
  }, [filterValue, searchParams]);

  const {
    data: threadsResponse,
    isLoading,
    isValidating,
  } = useThreads(searchValue.folder || folder, labels, searchValue.value);
  const [open, setOpen] = useState(false);
  const isDesktop = useMediaQuery("(min-width: 768px)");

  // Check if we're on mobile on mount and when window resizes
  useEffect(() => {
    const checkIsMobile = () => {
      setIsMobile(window.innerWidth < 768); // 768px is the 'md' breakpoint
    };

    checkIsMobile();
    window.addEventListener("resize", checkIsMobile);

    return () => window.removeEventListener("resize", checkIsMobile);
  }, []);

  useEffect(() => {
    if (mail.selected) {
      setOpen(true);
    } else {
      setOpen(false);
    }
  }, [mail.selected]);

  const handleClose = useCallback(() => {
    setOpen(false);
    setMail((mail) => ({ ...mail, selected: null }));
  }, [setMail]);

  return (
    <TooltipProvider delayDuration={0}>
      <div className="rounded-inherit flex">
        <ResizablePanelGroup
          direction="horizontal"
          autoSaveId="mail-panel-layout"
          className="rounded-inherit gap-1.5 overflow-hidden"
        >
          <ResizablePanel
            className="border-none !bg-transparent"
            defaultSize={isMobile ? 100 : 25}
            minSize={isMobile ? 100 : 25}
          >
            <div className="flex-1 flex-col overflow-y-auto bg-card shadow-sm md:flex md:rounded-2xl md:border md:shadow-sm">
              <div
                className={cn(
                  "sticky top-0 z-10 flex items-center justify-between gap-1.5 border-b-2 p-2 transition-colors",
                  isValidating ? "border-b-green-500" : "border-b-transparent",
                )}
              >
                <SidebarToggle className="h-fit px-2" />
                <Button
                  variant="ghost"
                  className="md:h-fit md:px-2"
                  onClick={() => setIsCompact(!isCompact)}
                >
                  <AlignVerticalSpaceAround />
                </Button>
                {searchMode && (
                  <div className="flex flex-1 items-center justify-center gap-1.5">
                    <SearchBar />
                    <Button
                      variant="ghost"
                      className="md:h-fit md:px-2"
                      onClick={() => setSearchMode(false)}
                    >
                      <X />
                    </Button>
                  </div>
                )}
                {!searchMode && (
                  <>
                    {mail.bulkSelected.length > 0 ? (
                      <>
                        <div className="flex flex-1 items-center justify-center">
                          <span className="text-sm font-medium tabular-nums">
                            {mail.bulkSelected.length} selected
                          </span>
                          <Tooltip>
                            <TooltipTrigger asChild>
                              <Button
                                variant="ghost"
                                size="sm"
                                className="ml-1.5 h-8 w-fit px-2 text-muted-foreground"
                                onClick={() => setMail({ ...mail, bulkSelected: [] })}
                              >
                                <X />
                              </Button>
                            </TooltipTrigger>
                            <TooltipContent>Clear Selection</TooltipContent>
                          </Tooltip>
                        </div>
                        <BulkSelectActions />
                      </>
                    ) : (
                      <>
                        <h1 className="flex-1 text-center text-sm font-medium capitalize">
                          {folder}
                        </h1>
                        <div className="flex items-center gap-1.5">
                          <Button
                            variant="ghost"
                            className="md:h-fit md:px-2"
                            onClick={() => setSearchMode(true)}
                          >
                            <SearchIcon />
                          </Button>
                        </div>
                      </>
                    )}
                  </>
                )}
                {mail.bulkSelected.length === 0 && (
                  <DropdownMenu>
                    <DropdownMenuTrigger asChild>
                      <Button variant="ghost" className="md:h-fit md:px-2">
                        <ListFilter className="h-4 w-4" />
                      </Button>
                    </DropdownMenuTrigger>
                    <DropdownMenuContent align="end">
                      <DropdownMenuItem onClick={() => setFilterValue("all")}>
                        All mail {filterValue === "all" && <Check />}
                      </DropdownMenuItem>
                      <DropdownMenuItem onClick={() => setFilterValue("unread")}>
                        Unread {filterValue === "unread" && <Check />}
                      </DropdownMenuItem>
                    </DropdownMenuContent>
                  </DropdownMenu>
                )}
              </div>
              <div className="h-[calc(100dvh-56px)] overflow-hidden pt-0 md:h-[calc(100dvh-(8px+8px+14px+44px))]">
                {isLoading ? (
                  <div className="flex flex-col">
                    {[...Array(8)].map((_, i) => (
                      <div key={i} className="flex flex-col px-4 py-3">
                        <div className="flex w-full items-center justify-between">
                          <div className="flex items-center gap-2">
                            <Skeleton className="h-4 w-24" />
                          </div>
                          <Skeleton className="h-3 w-12" />
                        </div>
                        <Skeleton className="mt-2 h-3 w-32" />
                        <Skeleton className="mt-2 h-3 w-full" />
                        <div className="mt-2 flex gap-2">
                          <Skeleton className="h-4 w-16 rounded-full" />
                          <Skeleton className="h-4 w-16 rounded-full" />
                        </div>
                      </div>
                    ))}
                  </div>
                ) : (
                  <MailList
                    items={threadsResponse?.threads || []}
                    isCompact={isCompact}
                    folder={folder}
                  />
                )}
              </div>
            </div>
          </ResizablePanel>

          {isDesktop && mail.selected && (
            <>
              <ResizableHandle className="opacity-0" />
              <ResizablePanel
                className="shadow-sm md:flex md:rounded-2xl md:border md:shadow-sm"
                defaultSize={75}
                minSize={25}
              >
                <div className="hidden h-[calc(100vh-(12px+14px))] flex-1 md:block">
                  <ThreadDisplay mail={mail.selected} onClose={handleClose} />
                </div>
              </ResizablePanel>
            </>
          )}
        </ResizablePanelGroup>

        {/* Mobile Drawer */}
        {isMobile && (
          <Drawer open={open} onOpenChange={setOpen}>
            <DrawerContent className="h-[calc(100vh-3rem)] bg-card p-0">
              <DrawerHeader className="sr-only">
                <DrawerTitle>Email Details</DrawerTitle>
              </DrawerHeader>
              <div className="flex h-full flex-col overflow-hidden">
                <ThreadDisplay mail={mail.selected} onClose={handleClose} isMobile={true} />
              </div>
            </DrawerContent>
          </Drawer>
        )}
      </div>
    </TooltipProvider>
  );
}

function BulkSelectActions() {
  return (
    <div className="flex items-center gap-1.5">
      <Tooltip>
        <TooltipTrigger asChild>
          <Button variant="ghost" className="md:h-fit md:px-2">
            <BellOff />
          </Button>
        </TooltipTrigger>
        <TooltipContent>Mute</TooltipContent>
      </Tooltip>
      <Tooltip>
        <TooltipTrigger asChild>
          <Button variant="ghost" className="md:h-fit md:px-2">
            <ArchiveX />
          </Button>
        </TooltipTrigger>
        <TooltipContent>Move to Junk</TooltipContent>
      </Tooltip>
    </div>
  );
}

================
File: components/mail/navbar.tsx
================
"use client";

import { LucideIcon } from "lucide-react";
import Link from "next/link";

import { Tooltip, TooltipContent, TooltipTrigger } from "@/components/ui/tooltip";
import { buttonVariants } from "@/components/ui/button";
import { cn } from "@/lib/utils";

interface NavProps {
  isCollapsed: boolean;
  links: {
    title: string;
    label?: string;
    icon: LucideIcon;
    variant: "default" | "ghost";
  }[];
}

export function Nav({ links, isCollapsed }: NavProps) {
  return (
    <div
      data-collapsed={isCollapsed}
      className="group flex flex-col gap-4 py-2 data-[collapsed=true]:py-2"
    >
      <nav className="grid gap-1 px-2 group-[[data-collapsed=true]]:justify-center group-[[data-collapsed=true]]:px-2">
        {links.map((link, index) =>
          isCollapsed ? (
            <Tooltip key={index} delayDuration={0}>
              <TooltipTrigger asChild>
                <Link
                  href="#"
                  className={cn(
                    buttonVariants({ variant: link.variant, size: "icon" }),
                    "h-9 w-9",
                    link.variant === "default" &&
                      "dark:bg-muted dark:text-muted-foreground dark:hover:bg-muted dark:hover:text-white",
                  )}
                >
                  <link.icon className="h-4 w-4" />
                  <span className="sr-only">{link.title}</span>
                </Link>
              </TooltipTrigger>
              <TooltipContent side="right" className="flex items-center gap-4">
                {link.title}
                {link.label && <span className="ml-auto text-muted-foreground">{link.label}</span>}
              </TooltipContent>
            </Tooltip>
          ) : (
            <Link
              key={index}
              href="#"
              className={cn(
                buttonVariants({ variant: link.variant, size: "sm" }),
                link.variant === "default" &&
                  "dark:bg-muted dark:text-white dark:hover:bg-muted dark:hover:text-white",
                "justify-start",
              )}
            >
              <link.icon className="mr-2 h-4 w-4" />
              {link.title}
              {link.label && (
                <span
                  className={cn(
                    "ml-auto",
                    link.variant === "default" && "text-background dark:text-white",
                  )}
                >
                  {link.label}
                </span>
              )}
            </Link>
          ),
        )}
      </nav>
    </div>
  );
}

================
File: components/mail/reply-composer.tsx
================
import { Tooltip, TooltipContent, TooltipTrigger } from "@/components/ui/tooltip";
import { FileIcon, Paperclip, Reply, Send, X } from "lucide-react";
import { cleanEmailAddress, truncateFileName } from "@/lib/utils";
import { Textarea } from "@/components/ui/textarea";
import { Button } from "@/components/ui/button";
import { sendEmail } from "@/actions/send";
import { useRef, useState } from "react";
import { ParsedMessage } from "@/types";
import { Badge } from "../ui/badge";
import Image from "next/image";
import { toast } from "sonner";

export default function ReplyCompose({ emailData }: { emailData: ParsedMessage[] }) {
  const editorRef = useRef<HTMLTextAreaElement>(null);
  const [attachments, setAttachments] = useState<File[]>([]);
  const [isUploading, setIsUploading] = useState(false);

  const [messageContent, setMessageContent] = useState("");

  const handleAttachment = async (e: React.ChangeEvent<HTMLInputElement>) => {
    if (e.target.files) {
      setIsUploading(true);
      try {
        await new Promise((resolve) => setTimeout(resolve, 500));
        setAttachments([...attachments, ...Array.from(e.target.files)]);
      } finally {
        setIsUploading(false);
      }
    }
  };

  const removeAttachment = (index: number) => {
    setAttachments(attachments.filter((_, i) => i !== index));
  };

  const constructReplyBody = (
    formattedMessage: string,
    originalDate: string,
    originalSender: { name?: string; email?: string } | undefined,
    cleanedToEmail: string,
    quotedMessage?: string,
  ) => {
    return `
      <div style="font-family: Arial, sans-serif;">
        <div style="margin-bottom: 20px;">
          ${formattedMessage}
        </div>
        <div style="padding-left: 1em; margin-top: 1em; border-left: 2px solid #ccc; color: #666;">
          <div style="margin-bottom: 1em;">
            On ${originalDate}, ${originalSender?.name ? `${originalSender.name} ` : ""}${originalSender?.email ? `&lt;${cleanedToEmail}&gt;` : ""} wrote:
          </div>
          <div style="white-space: pre-wrap;">
            ${quotedMessage}
          </div>
        </div>
      </div>
    `;
  };

  const handleSendEmail = async (e: React.MouseEvent<HTMLButtonElement>) => {
    e.preventDefault();
    try {
      const originalSubject = emailData[0]?.subject || "";
      const subject = originalSubject.startsWith("Re:")
        ? originalSubject
        : `Re: ${originalSubject}`;

      const originalSender = emailData[0]?.sender;
      const cleanedToEmail = cleanEmailAddress(emailData[emailData.length - 1]?.sender?.email);
      const originalDate = new Date(emailData[0]?.receivedOn || "").toLocaleString();
      const quotedMessage = emailData[0]?.decodedBody;
      const messageId = emailData[0]?.messageId;
      const threadId = emailData[0]?.threadId;

      const formattedMessage = messageContent
        .split("\n")
        .map((line) => `<div>${line || "<br/>"}</div>`)
        .join("");

      const replyBody = constructReplyBody(
        formattedMessage,
        originalDate,
        originalSender,
        cleanedToEmail,
        quotedMessage,
      );

      const inReplyTo = messageId;

      const existingRefs = emailData[0]?.references?.split(" ") || [];
      const references = [...existingRefs, emailData[0]?.inReplyTo, cleanEmailAddress(messageId)]
        .filter(Boolean)
        .join(" ");

      await sendEmail({
        to: cleanedToEmail,
        subject,
        message: replyBody,
        attachments,
        headers: {
          "In-Reply-To": inReplyTo ?? "",
          References: references,
          "Thread-Id": threadId ?? "",
        },
      });

      toast.success("Email sent successfully!");
    } catch (error) {
      console.error("Error sending email:", error);
      toast.error("Failed to send email. Please try again.");
    }
  };

  return (
    <div className="relative bottom-0 left-0 right-0 z-10 mb-6 bg-card px-2 pb-2 pt-2">
      <form className="relative mb-[2px] space-y-2.5 rounded-[10px] border p-2">
        <div className="flex items-center justify-between text-sm text-muted-foreground">
          <div className="flex items-center gap-2">
            <Reply className="h-4 w-4" />
            <p className="truncate">
              {emailData[emailData.length - 1]?.sender?.name} (
              {emailData[emailData.length - 1]?.sender?.email})
            </p>
          </div>
        </div>

        <Textarea
          ref={editorRef}
          className="min-h-[40px] w-full resize-none rounded-2xl border-0 bg-transparent leading-relaxed placeholder:text-muted-foreground/70 focus-visible:ring-0 focus-visible:ring-offset-0 md:text-base"
          placeholder="Write your reply..."
          spellCheck={true}
          value={messageContent}
          onChange={(e) => {
            setMessageContent(e.target.value);
          }}
        />

        {(attachments.length > 0 || isUploading) && (
          <div className="relative z-50 min-h-[32px]">
            <div className="hide-scrollbar absolute inset-x-0 flex gap-2 overflow-x-auto">
              {isUploading && (
                <Badge
                  variant="secondary"
                  className="inline-flex shrink-0 animate-pulse items-center bg-background/50 px-2 py-1.5 text-xs"
                >
                  Uploading...
                </Badge>
              )}
              {attachments.map((file, index) => (
                <Tooltip key={index}>
                  <TooltipTrigger asChild>
                    <Badge
                      key={index}
                      variant="secondary"
                      className="inline-flex shrink-0 items-center gap-1 bg-background/50 px-2 py-1.5 text-xs"
                    >
                      <span className="max-w-[120px] truncate">{truncateFileName(file.name)}</span>
                      <Button
                        variant="ghost"
                        size="icon"
                        className="ml-1 h-4 w-4 hover:bg-background/80"
                        onClick={(e) => {
                          e.preventDefault();
                          removeAttachment(index);
                        }}
                      >
                        <X className="h-3 w-3" />
                      </Button>
                    </Badge>
                  </TooltipTrigger>
                  <TooltipContent className="w-64 p-0">
                    <div className="relative h-32 w-full">
                      {file.type.startsWith("image/") ? (
                        <Image
                          src={URL.createObjectURL(file) || "/placeholder.svg"}
                          alt={file.name}
                          fill
                          className="rounded-t-md object-cover"
                        />
                      ) : (
                        <div className="flex h-full w-full items-center justify-center p-4">
                          <FileIcon className="h-16 w-16 text-primary" />
                        </div>
                      )}
                    </div>
                    <div className="bg-secondary p-2">
                      <p className="text-sm font-medium">{truncateFileName(file.name, 30)}</p>
                      <p className="text-xs text-muted-foreground">
                        Size: {(file.size / (1024 * 1024)).toFixed(2)} MB
                      </p>
                      <p className="text-xs text-muted-foreground">
                        Last modified: {new Date(file.lastModified).toLocaleDateString()}
                      </p>
                    </div>
                  </TooltipContent>
                </Tooltip>
              ))}
            </div>
          </div>
        )}

        <div className="mb-2 flex items-center justify-between">
          <div className="flex items-center gap-2">
            <Tooltip>
              <TooltipTrigger asChild>
                <Button
                  variant="ghost"
                  size="icon"
                  type="button"
                  className="h-8 w-8 hover:bg-background/80"
                  onClick={(e) => {
                    e.preventDefault();
                    document.getElementById("attachment-input")?.click();
                  }}
                >
                  <Paperclip className="h-4 w-4" />
                  <span className="sr-only">Add attachment</span>
                </Button>
              </TooltipTrigger>
              <TooltipContent>Attach file</TooltipContent>
            </Tooltip>
            <input
              type="file"
              id="attachment-input"
              className="hidden"
              onChange={handleAttachment}
              multiple
              accept="image/*,.pdf,.doc,.docx,.xls,.xlsx,.txt"
            />
          </div>
          <div className="flex items-center gap-2">
            <Button variant="ghost" size="sm" className="h-8">
              Save draft
            </Button>
            <Button size="sm" className="h-8" onClick={handleSendEmail}>
              Send <Send className="ml-2 h-3 w-3" />
            </Button>
          </div>
        </div>
      </form>
    </div>
  );
}

================
File: components/mail/search-bar.tsx
================
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import { Popover, PopoverContent, PopoverTrigger } from "@/components/ui/popover";
import { Search, SlidersHorizontal, CalendarIcon, Trash2 } from "lucide-react";
import { useSearchValue } from "@/hooks/use-search-value";
import { Separator } from "@/components/ui/separator";
import { Calendar } from "@/components/ui/calendar";
import { type DateRange } from "react-day-picker";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { useState, useEffect } from "react";
import { useForm } from "react-hook-form";
import { useDebounce } from "react-use";
import { Toggle } from "../ui/toggle";
import { format } from "date-fns";
import { cn } from "@/lib/utils";

const inboxes = ["inbox", "spam", "trash", "unread", "starred", "important", "sent", "draft"];

function DateFilter({ date, setDate }: { date: DateRange; setDate: (date: DateRange) => void }) {
  return (
    <div className="grid gap-2">
      <Popover>
        <PopoverTrigger asChild>
          <Button
            id="date"
            variant={"outline"}
            className={cn(
              "justify-start text-left font-normal",
              !date && "text-muted-foreground",
              "h-10 rounded-xl bg-muted/50",
            )}
          >
            <CalendarIcon className="mr-2 h-4 w-4" />
            {date?.from ? (
              date.to ? (
                <>
                  {format(date.from, "LLL dd, y")} - {format(date.to, "LLL dd, y")}
                </>
              ) : (
                format(date.from, "LLL dd, y")
              )
            ) : (
              <span>Pick a date or a range</span>
            )}
          </Button>
        </PopoverTrigger>
        <PopoverContent className="w-auto rounded-xl p-0" align="start">
          <Calendar
            initialFocus
            mode="range"
            defaultMonth={date?.from}
            selected={date}
            onSelect={(range) => range && setDate(range)}
            numberOfMonths={2}
            disabled={(date) => date > new Date()}
          />
        </PopoverContent>
      </Popover>
    </div>
  );
}

type SearchForm = {
  subject: string;
  from: string;
  to: string;
  q: string;
  dateRange: DateRange;
  category: string;
  folder: string;
};

export function SearchBar() {
  const [popoverOpen, setPopoverOpen] = useState(false);
  const [, setSearchValue] = useSearchValue();
  const [value, setValue] = useState<SearchForm>({
    folder: "",
    subject: "",
    from: "",
    to: "",
    q: "",
    dateRange: {
      from: undefined,
      to: undefined,
    },
    category: "",
  });

  const form = useForm<SearchForm>({
    defaultValues: value,
  });

  useEffect(() => {
    const subscription = form.watch((data) => {
      setValue(data as SearchForm);
    });
    return () => subscription.unsubscribe();
    /* eslint-disable-next-line react-hooks/exhaustive-deps */
  }, [form.watch]);

  useDebounce(
    () => {
      submitSearch(value);
    },
    250,
    [value],
  );

  const submitSearch = (data: SearchForm) => {
    const from = data.from ? `from:(${data.from})` : "";
    const to = data.to ? `to:(${data.to})` : "";
    const subject = data.subject ? `subject:(${data.subject})` : "";
    const dateAfter = data.dateRange.from
      ? `after:${format(data.dateRange.from, "MM/dd/yyyy")}`
      : "";
    const dateBefore = data.dateRange.to ? `before:${format(data.dateRange.to, "MM/dd/yyyy")}` : "";
    const category = data.category ? `category:(${data.category})` : "";
    const searchQuery = `${data.q} ${from} ${to} ${subject} ${dateAfter} ${dateBefore} ${category}`;
    const folder = data.folder ? data.folder.toUpperCase() : "";

    setSearchValue({
      value: searchQuery,
      highlight: data.q,
      folder: folder,
    });
  };

  const resetSearch = () => {
    form.reset();
    setSearchValue({
      value: "",
      highlight: "",
      folder: "",
    });
  };

  // might be bad but the alternatives are less readable and intuitive,
  // maybe to something else if we have to add more filters/search options
  const filtering =
    value.q.length > 0 ||
    value.from.length > 0 ||
    value.to.length > 0 ||
    value.dateRange.from ||
    value.dateRange.to ||
    value.category ||
    value.folder;

  return (
    <div className="relative flex-1 md:max-w-[600px]">
      <form className="relative flex items-center" onSubmit={form.handleSubmit(submitSearch)}>
        <Search className="absolute left-2.5 h-4 w-4 text-muted-foreground" aria-hidden="true" />
        <Input
          placeholder="Search"
          autoFocus
          className="h-9 w-full rounded-xl border-none bg-muted/50 pl-9 pr-14 text-muted-foreground shadow-none ring-1 ring-muted transition-colors placeholder:text-muted-foreground/70 hover:bg-muted focus-visible:bg-background focus-visible:ring-2 focus-visible:ring-ring"
          {...form.register("q")}
        />
        <div className="absolute right-2 flex items-center gap-1.5">
          {filtering && (
            <Button
              variant="ghost"
              size="icon"
              className="h-5 w-5 rounded-lg p-0 text-muted-foreground/70 transition-colors hover:bg-muted/50 hover:text-foreground"
              onClick={resetSearch}
            >
              <Trash2 className="h-4 w-4 text-inherit" aria-hidden="true" />
            </Button>
          )}
          <Popover open={popoverOpen} onOpenChange={setPopoverOpen}>
            <PopoverTrigger asChild>
              <Button
                variant="ghost"
                size="icon"
                className="h-5 w-5 rounded-lg p-0 text-muted-foreground/70 transition-colors hover:bg-muted/50 hover:text-foreground"
              >
                <SlidersHorizontal
                  className="h-4 w-4 text-inherit transition-colors"
                  aria-hidden="true"
                />
              </Button>
            </PopoverTrigger>
            <PopoverContent
              className="w-[min(calc(100vw-2rem),400px)] rounded-xl border bg-card/95 p-4 shadow-lg sm:w-[500px] md:w-[600px]"
              side="bottom"
              sideOffset={15}
              alignOffset={-8}
              align="end"
            >
              <div className="space-y-5">
                <div>
                  <h2 className="mb-3 text-xs font-semibold">Quick Filters</h2>
                  <div className="flex flex-wrap gap-2">
                    <Button
                      variant="outline"
                      size="sm"
                      className="h-7 rounded-xl bg-muted/50 text-xs hover:bg-muted"
                      onClick={() => form.setValue("q", "is:unread")}
                    >
                      Unread
                    </Button>
                    <Button
                      variant="outline"
                      size="sm"
                      className="h-7 rounded-xl bg-muted/50 text-xs hover:bg-muted"
                      onClick={() => form.setValue("q", "has:attachment")}
                    >
                      Has Attachment
                    </Button>
                    <Button
                      variant="outline"
                      size="sm"
                      className="h-7 rounded-xl bg-muted/50 text-xs hover:bg-muted"
                      onClick={() => form.setValue("q", "is:starred")}
                    >
                      Starred
                    </Button>
                  </div>
                </div>

                <Separator className="bg-border/50" />

                <div className="grid gap-5">
                  <div className="space-y-2">
                    <label className="text-xs font-semibold">Search in</label>
                    <Select
                      onValueChange={(value) => form.setValue("folder", value)}
                      value={form.watch("folder")}
                    >
                      <SelectTrigger className="h-8 rounded-xl bg-muted/50 capitalize">
                        <SelectValue placeholder="All Mail" />
                      </SelectTrigger>
                      <SelectContent className="rounded-xl">
                        {inboxes.map((inbox) => (
                          <SelectItem key={inbox} value={inbox} className="capitalize">
                            {inbox}
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </div>

                  <div className="space-y-2">
                    <label className="text-xs font-semibold">Subject</label>
                    <Input
                      placeholder="Email subject"
                      {...form.register("subject")}
                      className="h-8 rounded-xl bg-muted/50"
                    />
                  </div>

                  <div className="grid gap-4 sm:grid-cols-2">
                    <div className="space-y-2">
                      <label className="text-xs font-semibold">From</label>
                      <Input
                        placeholder="Sender"
                        {...form.register("from")}
                        className="h-8 rounded-xl bg-muted/50"
                      />
                    </div>

                    <div className="space-y-2">
                      <label className="text-xs font-semibold">To</label>
                      <Input
                        placeholder="Recipient"
                        {...form.register("to")}
                        className="h-8 rounded-xl bg-muted/50"
                      />
                    </div>
                  </div>

                  <div className="space-y-2">
                    <label className="text-xs font-semibold">Date Range</label>
                    <DateFilter
                      date={value.dateRange}
                      setDate={(range) => form.setValue("dateRange", range)}
                    />
                  </div>
                </div>

                <Separator className="bg-border/50" />

                <div>
                  <h2 className="mb-3 text-xs font-semibold">Category</h2>
                  <div className="flex flex-wrap gap-2">
                    <Toggle
                      variant="outline"
                      size="sm"
                      className="h-7 rounded-xl bg-muted/50 text-xs transition-colors data-[state=on]:bg-primary/10 data-[state=on]:text-primary data-[state=on]:ring-1 data-[state=on]:ring-primary/20"
                      pressed={form.watch("category") === "primary"}
                      onPressedChange={(pressed) =>
                        form.setValue("category", pressed ? "primary" : "")
                      }
                    >
                      Primary
                    </Toggle>
                    <Toggle
                      variant="outline"
                      size="sm"
                      className="h-7 rounded-xl bg-muted/50 text-xs transition-colors data-[state=on]:bg-primary/10 data-[state=on]:text-primary data-[state=on]:ring-1 data-[state=on]:ring-primary/20"
                      pressed={form.watch("category") === "updates"}
                      onPressedChange={(pressed) =>
                        form.setValue("category", pressed ? "updates" : "")
                      }
                    >
                      Updates
                    </Toggle>
                    <Toggle
                      variant="outline"
                      size="sm"
                      className="h-7 rounded-xl bg-muted/50 text-xs transition-colors data-[state=on]:bg-primary/10 data-[state=on]:text-primary data-[state=on]:ring-1 data-[state=on]:ring-primary/20"
                      pressed={form.watch("category") === "promotions"}
                      onPressedChange={(pressed) =>
                        form.setValue("category", pressed ? "promotions" : "")
                      }
                    >
                      Promotions
                    </Toggle>
                    <Toggle
                      variant="outline"
                      size="sm"
                      className="h-7 rounded-xl bg-muted/50 text-xs transition-colors data-[state=on]:bg-primary/10 data-[state=on]:text-primary data-[state=on]:ring-1 data-[state=on]:ring-primary/20"
                      pressed={form.watch("category") === "social"}
                      onPressedChange={(pressed) =>
                        form.setValue("category", pressed ? "social" : "")
                      }
                    >
                      Social
                    </Toggle>
                  </div>
                </div>

                <div className="flex items-center justify-between">
                  <Button
                    onClick={resetSearch}
                    variant="ghost"
                    size="sm"
                    className="h-8 rounded-xl text-xs text-muted-foreground transition-colors hover:bg-muted hover:text-foreground"
                  >
                    Reset
                  </Button>
                  <Button
                    size="sm"
                    className="h-8 rounded-xl bg-primary text-xs text-primary-foreground shadow-none transition-colors hover:bg-primary/90"
                    type="submit"
                    onClick={() => setPopoverOpen(false)}
                  >
                    Apply Filters
                  </Button>
                </div>
              </div>
            </PopoverContent>
          </Popover>
        </div>
      </form>
    </div>
  );
}

================
File: components/mail/thread-display.tsx
================
import {
  Archive,
  ArchiveX,
  Forward,
  MoreVertical,
  Reply,
  ReplyAll,
  X,
  Copy,
  Maximize2,
  Minimize2,
  Check,
} from "lucide-react";
import { DropdownMenuContent, DropdownMenuItem } from "@/components/ui/dropdown-menu";
import { DropdownMenu, DropdownMenuTrigger } from "@/components/ui/dropdown-menu";
import { Tooltip, TooltipContent, TooltipTrigger } from "@/components/ui/tooltip";
import { ScrollArea } from "@/components/ui/scroll-area";

import { MailDisplaySkeleton, MailHeaderSkeleton } from "./mail-skeleton";
import { useState, useEffect, useCallback } from "react";
import { Button } from "@/components/ui/button";
import { useThread } from "@/hooks/use-threads";
import ReplyCompose from "./reply-composer";
import MailDisplay from "./mail-display";
import { useMail } from "./use-mail";
import { cn } from "@/lib/utils";
import React from "react";

interface ThreadDisplayProps {
  mail: string | null;
  onClose?: () => void;
  isMobile?: boolean;
}

export function ThreadDisplay({ mail, onClose, isMobile }: ThreadDisplayProps) {
  const [, setMail] = useMail();
  const { data: emailData, isLoading } = useThread(mail ?? "");
  const [isMuted, setIsMuted] = useState(false);

  const [copySuccess, setCopySuccess] = useState(false);
  const [isFullscreen, setIsFullscreen] = useState(false);

  useEffect(() => {
    if (emailData) {
      setIsMuted(emailData[0].unread ?? false);
    }
  }, [emailData]);

  const handleClose = useCallback(() => {
    onClose?.();
    setMail((m) => ({ ...m, selected: null }));
  }, [onClose, setMail]);

  useEffect(() => {
    const handleEsc = (event: KeyboardEvent) => {
      if (event.key === "Escape") {
        handleClose();
      }
    };
    window.addEventListener("keydown", handleEsc);
    return () => window.removeEventListener("keydown", handleEsc);
  }, [handleClose]);

  const handleCopy = async () => {
    if (emailData) {
      try {
        await navigator.clipboard.writeText(JSON.stringify(emailData, null, 2));
        setCopySuccess(true);
        setTimeout(() => setCopySuccess(false), 2000); // Reset after 2 seconds
      } catch (err) {
        console.error("Failed to copy:", err);
      }
    }
  };

  if (!emailData)
    return (
      <div className="flex h-screen flex-col">
        <div
          className={cn(
            "relative flex h-full flex-col bg-background transition-all duration-300",
            isMobile ? "" : "rounded-r-lg",
            isFullscreen ? "fixed inset-0 z-50 bg-background" : "",
          )}
        >
          <MailHeaderSkeleton isFullscreen={isFullscreen} />
          <div className="h-full space-y-4 overflow-hidden">
            <MailDisplaySkeleton isFullscreen={isFullscreen} />
          </div>
        </div>
      </div>
    );

  return (
    <div className="flex h-screen flex-col">
      <div
        className={cn(
          "relative flex h-full flex-col bg-card transition-all duration-300",
          isMobile ? "" : "rounded-r-lg",
          isFullscreen ? "fixed inset-0 z-50 bg-background" : "",
        )}
      >
        <div className="flex items-center border-b p-2">
          <div className="flex flex-1 items-center gap-2">
            {!isMobile && (
              <Tooltip>
                <TooltipTrigger asChild>
                  <Button
                    variant="ghost"
                    className="md:h-fit md:px-2"
                    disabled={!emailData}
                    onClick={handleClose}
                  >
                    <X className="h-4 w-4" />
                    <span className="sr-only">Close</span>
                  </Button>
                </TooltipTrigger>
                <TooltipContent>Close</TooltipContent>
              </Tooltip>
            )}
          </div>
          <div className="flex items-center gap-2">
            <Tooltip>
              <TooltipTrigger asChild>
                <Button
                  variant="ghost"
                  className="md:h-fit md:px-2"
                  disabled={!emailData}
                  onClick={() => setIsFullscreen(!isFullscreen)}
                >
                  {isFullscreen ? (
                    <Minimize2 className="h-4 w-4" />
                  ) : (
                    <Maximize2 className="h-4 w-4" />
                  )}
                  <span className="sr-only">
                    {isFullscreen ? "Exit fullscreen" : "Enter fullscreen"}
                  </span>
                </Button>
              </TooltipTrigger>
              <TooltipContent>
                {isFullscreen ? "Exit fullscreen" : "Enter fullscreen"}
              </TooltipContent>
            </Tooltip>
            <Tooltip>
              <TooltipTrigger asChild>
                <Button
                  variant="ghost"
                  className="md:h-fit md:px-2"
                  disabled={!emailData}
                  onClick={handleCopy}
                >
                  {copySuccess ? (
                    <>
                      <Check className="h-4 w-4" />
                      <span className="sr-only">Copied</span>
                    </>
                  ) : (
                    <>
                      <Copy className="h-4 w-4" />
                      <span className="sr-only">Copy email data</span>
                    </>
                  )}
                </Button>
              </TooltipTrigger>
              <TooltipContent>{copySuccess ? "Copied!" : "Copy email data"}</TooltipContent>
            </Tooltip>
            <Tooltip>
              <TooltipTrigger asChild>
                <Button variant="ghost" className="md:h-fit md:px-2" disabled={!emailData}>
                  <Archive className="h-4 w-4" />
                  <span className="sr-only">Archive</span>
                </Button>
              </TooltipTrigger>
              <TooltipContent>Archive</TooltipContent>
            </Tooltip>
            <Tooltip>
              <TooltipTrigger asChild>
                <Button variant="ghost" className="md:h-fit md:px-2" disabled={!emailData}>
                  <Reply className="h-4 w-4" />
                  <span className="sr-only">Reply</span>
                </Button>
              </TooltipTrigger>
              <TooltipContent>Reply</TooltipContent>
            </Tooltip>
            <DropdownMenu>
              <DropdownMenuTrigger asChild>
                <Button variant="ghost" className="md:h-fit md:px-2" disabled={!emailData}>
                  <MoreVertical className="h-4 w-4" />
                  <span className="sr-only">More</span>
                </Button>
              </DropdownMenuTrigger>
              <DropdownMenuContent align="end">
                <DropdownMenuItem>
                  <ArchiveX className="mr-2 h-4 w-4" /> Move to spam
                </DropdownMenuItem>
                <DropdownMenuItem>
                  <ReplyAll className="mr-2 h-4 w-4" /> Reply all
                </DropdownMenuItem>
                <DropdownMenuItem>
                  <Forward className="mr-2 h-4 w-4" /> Forward
                </DropdownMenuItem>
                <DropdownMenuItem>Mark as unread</DropdownMenuItem>
                <DropdownMenuItem>Add label</DropdownMenuItem>
                <DropdownMenuItem>Mute thread</DropdownMenuItem>
              </DropdownMenuContent>
            </DropdownMenu>
          </div>
        </div>
        <ScrollArea className="h-full" type="scroll">
          <div className="h-full">
            {[...(emailData || [])].reverse().map((message, index) => (
              <div
                key={message.id}
                className={cn("transition-all duration-200", index > 0 && "border-t border-border")}
              >
                <MailDisplay
                  emailData={message}
                  isFullscreen={isFullscreen}
                  isMuted={isMuted}
                  isLoading={isLoading}
                  index={index}
                />
              </div>
            ))}
          </div>{" "}
        </ScrollArea>
        {!isFullscreen && <ReplyCompose emailData={emailData} />}
      </div>
    </div>
  );
}

<style jsx global>{`
  .hide-scrollbar {
    -ms-overflow-style: none;
    scrollbar-width: none;
  }
  .hide-scrollbar::-webkit-scrollbar {
    display: none;
  }
`}</style>;

================
File: components/mail/use-mail.ts
================
import { atom, useAtom } from "jotai";

import { Mail } from "@/components/mail/data";

type Config = {
  selected: Mail["id"] | null;
  bulkSelected: Mail["id"][];
};

const configAtom = atom<Config>({
  selected: null,
  bulkSelected: [],
});

export function useMail() {
  return useAtom(configAtom);
}

================
File: components/mail/use-tags.ts
================
import { DropdownMenuCheckboxItemProps } from "@radix-ui/react-dropdown-menu";
import { atomWithStorage } from "jotai/utils";

type Checked = DropdownMenuCheckboxItemProps["checked"];

export type Tag = {
  id: string;
  label: string;
  checked: Checked;
};

// we might need to init these from the backend, should fix the flicker also
const initialTags: Tag[] = [
  { id: "0", label: "important", checked: false },
  { id: "1", label: "budget", checked: false },
  { id: "2", label: "meeting", checked: false },
  { id: "3", label: "personal", checked: false },
  { id: "5", label: "a really long one to test", checked: false },
];

export const tagsAtom = atomWithStorage<Tag[]>("tags-config", initialTags);

================
File: components/settings/settings-card.tsx
================
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { cn } from "@/lib/utils";

interface SettingsCardProps extends React.HTMLAttributes<HTMLDivElement> {
  title: string;
  description?: string;
  children: React.ReactNode;
  footer?: React.ReactNode;
}

export function SettingsCard({
  title,
  description,
  children,
  footer,
  className,
}: SettingsCardProps) {
  return (
    <Card className={cn("w-full", className)}>
      <CardHeader>
        <CardTitle>{title}</CardTitle>
        {description && <CardDescription>{description}</CardDescription>}
      </CardHeader>
      <CardContent className="space-y-6">{children}</CardContent>
      {footer && <div className="border-t px-6 py-4">{footer}</div>}
    </Card>
  );
}

================
File: components/theme/sidebar-theme-switcher.tsx
================
"use client";

import { useTheme } from "next-themes";

import { MoonIcon } from "../icons/animated/moon";
import { SunIcon } from "../icons/animated/sun";
import { useEffect, useState } from "react";

export function SidebarThemeSwitch() {
  const [isRendered, setIsRendered] = useState(false);
  const { theme, resolvedTheme, setTheme } = useTheme();

  // Prevents hydration error
  useEffect(() => setIsRendered(true), []);

  async function handleThemeToggle() {
    const newTheme = theme === "dark" ? "light" : "dark";

    function update() {
      setTheme(newTheme);
    }

    if (document.startViewTransition && newTheme !== resolvedTheme) {
      document.documentElement.style.viewTransitionName = "theme-transition";
      await document.startViewTransition(update).finished;
      document.documentElement.style.viewTransitionName = "";
    } else {
      update();
    }
  }

  if (!isRendered) return null;

  return (
    <div onClick={handleThemeToggle} className="flex cursor-pointer items-center gap-2 text-[13px]">
      {theme === "dark" ? <MoonIcon className="opacity-60" /> : <SunIcon className="opacity-60" />}
      <p className="text-[13px] opacity-60">App Theme</p>
    </div>
  );
}

================
File: components/theme/theme-switcher.tsx
================
"use client";

import { ToggleGroup, ToggleGroupItem } from "@/components/ui/toggle-group";
import { useEffect, useState } from "react";

import { Laptop, Moon, Sun } from "lucide-react";
import { useTheme } from "next-themes";
import { cn } from "@/lib/utils";

interface ModeToggleProps {
  className?: string;
}

export function ModeToggle({ className }: ModeToggleProps) {
  const [mounted, setMounted] = useState(false);

  // Fixes SSR hydration
  useEffect(() => {
    setMounted(true);
  }, []);

  const { theme, systemTheme, resolvedTheme, setTheme } = useTheme();

  async function handleThemeChange(newTheme: string) {
    let nextResolvedTheme = newTheme;

    if (newTheme === "system" && systemTheme) {
      nextResolvedTheme = systemTheme;
    }

    function update() {
      setTheme(newTheme);
    }

    if (document.startViewTransition && nextResolvedTheme !== resolvedTheme) {
      document.documentElement.style.viewTransitionName = "theme-transition";
      await document.startViewTransition(update).finished;
      document.documentElement.style.viewTransitionName = "";
    } else {
      update();
    }
  }

  if (!mounted) {
    return <div className="h-9" />;
  }

  return (
    <ToggleGroup
      type="single"
      className={cn("h-9 max-w-xs justify-start", className)}
      suppressHydrationWarning
      value={theme}
      onValueChange={handleThemeChange}
    >
      <ToggleGroupItem
        suppressHydrationWarning
        value="light"
        className="flex flex-1 items-center gap-2"
      >
        <Sun className="h-5 w-5" />
        <span className="sr-only">Light</span>
      </ToggleGroupItem>

      <ToggleGroupItem
        suppressHydrationWarning
        value="dark"
        className="flex flex-1 items-center gap-2"
      >
        <Moon className="h-5 w-5" />
        <span className="sr-only">Dark</span>
      </ToggleGroupItem>

      <ToggleGroupItem
        suppressHydrationWarning
        value="system"
        className="flex flex-1 items-center gap-2"
      >
        <Laptop className="h-5 w-5" />
        <span className="sr-only">System</span>
      </ToggleGroupItem>
    </ToggleGroup>
  );
}

================
File: components/ui/account-switcher.tsx
================
"use client";

import { Check, ChevronsUpDown, Plus } from "lucide-react";
import { Account } from "@/types";
import { cn } from "@/lib/utils";

import {
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuLabel,
  DropdownMenuSeparator,
  DropdownMenuTrigger,
} from "@/components/ui/dropdown-menu";
import {
  Dialog,
  DialogContent,
  DialogHeader,
  DialogTitle,
  DialogDescription,
  DialogTrigger,
} from "@/components/ui/dialog";
import {
  SidebarMenu,
  SidebarMenuItem,
  SidebarMenuButton,
  useSidebar,
} from "@/components/ui/sidebar";
import React from "react";

interface AccountSwitcherProps {
  accounts: Account[];
}

export function AccountSwitcher({ accounts }: AccountSwitcherProps) {
  const [selectedAccount, setSelectedAccount] = React.useState(accounts[0]);

  const { isMobile, state } = useSidebar();
  const collapsed = state === "collapsed";

  return (
    <DropdownMenu>
      <SidebarMenu>
        <SidebarMenuItem>
          <DropdownMenuTrigger asChild>
            <SidebarMenuButton
              size="lg"
              className="data-[state=open]:bg-sidebar-accent data-[state=open]:text-sidebar-accent-foreground"
            >
              <div
                className={cn(
                  "flex aspect-square size-10 shrink-0 items-center justify-center rounded-lg bg-primary/10 text-sidebar-primary-foreground",
                  collapsed && "w-full",
                )}
              >
                <selectedAccount.logo className="size-5" />
              </div>
              <div className="flex min-w-0 flex-col gap-0.5 leading-none">
                <span className="font-semibold">{selectedAccount.name}</span>
                <span className="truncate">{selectedAccount.email}</span>
              </div>
              <ChevronsUpDown className="ml-auto size-4 shrink-0" />
            </SidebarMenuButton>
          </DropdownMenuTrigger>
        </SidebarMenuItem>
      </SidebarMenu>
      <DropdownMenuContent
        className="w-[--radix-dropdown-menu-trigger-width] min-w-64"
        align="start"
        side={isMobile ? "bottom" : "right"}
        sideOffset={4}
      >
        <DropdownMenuLabel>Accounts</DropdownMenuLabel>
        {accounts.map((account, index) => (
          <DropdownMenuItem key={account.name} onSelect={() => setSelectedAccount(account)}>
            <account.logo className="mr-2 size-4" />
            <span>{account.name}</span>
            <div className="ml-auto flex items-center gap-2">
              {account === selectedAccount && <Check className="size-4" />}
              <span className="rounded-md bg-muted px-1 text-xs">
                ⌘<span className="font-mono">{index + 1}</span>
              </span>
            </div>
          </DropdownMenuItem>
        ))}
        <DropdownMenuSeparator />
        <Dialog>
          <DialogTrigger asChild>
            <DropdownMenuItem>
              <Plus className="mr-2 size-4" />
              Add account
            </DropdownMenuItem>
          </DialogTrigger>
          <DialogContent>
            <DialogHeader>
              <DialogTitle>Add account</DialogTitle>
              <DialogDescription>
                Add a new account to switch between different email accounts.
              </DialogDescription>
            </DialogHeader>
          </DialogContent>
        </Dialog>
      </DropdownMenuContent>
    </DropdownMenu>
  );
}

================
File: components/ui/app-sidebar.tsx
================
"use client";

import { SquarePenIcon, SquarePenIconHandle } from "../icons/animated/square-pen";
import { Sidebar, SidebarContent, SidebarHeader } from "@/components/ui/sidebar";
import { useOpenComposeModal } from "@/hooks/use-open-compose-modal";
import { navigationConfig } from "@/config/navigation";
import { motion, AnimatePresence } from "motion/react";
import { useSidebar } from "@/components/ui/sidebar";
import { useIsMobile } from "@/hooks/use-mobile";
import React, { useMemo, useRef } from "react";
import { usePathname } from "next/navigation";
import { mailCount } from "@/actions/mail";
import { NavMain } from "./nav-main";
import { NavUser } from "./nav-user";
import { Button } from "./button";
import Image from "next/image";
import useSWR from "swr";

export function AppSidebar({ ...props }: React.ComponentProps<typeof Sidebar>) {
  const { data: stats } = useSWR<number[]>("mail-count", mailCount);

  const pathname = usePathname();

  const { currentSection, navItems } = useMemo(() => {
    // Find which section we're in based on the pathname
    const section = Object.entries(navigationConfig).find(([, config]) =>
      pathname.startsWith(config.path),
    );

    const currentSection = section?.[0] || "mail";
    const items = [...navigationConfig[currentSection].sections];

    if (currentSection === "mail" && stats) {
      if (items[0]?.items[0]) {
        items[0].items[0].badge = stats[0] ?? 0;
      }
      if (items[0]?.items[3]) {
        items[0].items[3].badge = stats[1] ?? 0;
      }
    }

    return { currentSection, navItems: items };
  }, [pathname, stats]);

  const showComposeButton = currentSection === "mail";

  return (
    <Sidebar collapsible="icon" {...props} className="flex flex-col items-center pl-1">
      <div className="flex w-full flex-col">
        <SidebarHeader className="flex flex-col gap-2 p-2">
          <NavUser />
          <AnimatePresence mode="wait">
            {showComposeButton && (
              <motion.div
                initial={{ opacity: 0, x: -20 }}
                animate={{ opacity: 1, x: 0 }}
                exit={{ opacity: 0, x: 20 }}
                transition={{ duration: 0.2 }}
              >
                <ComposeButton />
              </motion.div>
            )}
          </AnimatePresence>
        </SidebarHeader>
        <SidebarContent className="py-0 pt-0">
          <AnimatePresence mode="wait">
            <motion.div
              key={currentSection}
              initial={{ opacity: 0, x: currentSection === "mail" ? -20 : 20 }}
              animate={{ opacity: 1, x: 0 }}
              exit={{ opacity: 0, x: currentSection === "mail" ? 20 : -20 }}
              transition={{ duration: 0.2 }}
              className="flex-1 py-0"
            >
              <NavMain items={navItems} />
            </motion.div>
          </AnimatePresence>
        </SidebarContent>
      </div>

      <div className="mb-4 ml-1 mt-auto pl-1.5">
        <Image
          src="/black-icon.svg"
          alt="Mail0 Logo"
          width={28}
          height={28}
          className="dark:hidden"
        />
        <Image
          src="/white-icon.svg"
          alt="Mail0 Logo"
          width={28}
          height={28}
          className="hidden dark:block"
        />
      </div>
    </Sidebar>
  );
}

function ComposeButton() {
  const iconRef = useRef<SquarePenIconHandle>(null);
  const { open } = useOpenComposeModal();
  const { state } = useSidebar();
  const isMobile = useIsMobile();

  return (
    <Button
      onClick={open}
      className="relative isolate mt-1 h-8 w-[calc(100%)] overflow-hidden whitespace-nowrap bg-secondary text-primary shadow-[0_1px_3px_theme(colors.black/0.05)] ring-1 ring-black/5 before:pointer-events-none before:absolute before:inset-0 before:-z-10 before:rounded-md before:bg-gradient-to-b before:from-black/5 before:opacity-50 before:transition-opacity hover:bg-secondary/90 hover:before:opacity-100 dark:shadow-[0_1px_theme(colors.white/0.07)_inset] dark:ring-white/5 dark:before:from-white/20"
      onMouseEnter={() => () => iconRef.current?.startAnimation?.()}
      onMouseLeave={() => () => iconRef.current?.stopAnimation?.()}
    >
      {state === "collapsed" && !isMobile ? (
        <SquarePenIcon ref={iconRef} className="size-4" />
      ) : (
        <>
          <span className="text-center text-sm">Create Email</span>
        </>
      )}
    </Button>
  );
}

================
File: components/ui/avatar.tsx
================
"use client";

import * as AvatarPrimitive from "@radix-ui/react-avatar";
import * as React from "react";

import { cn } from "@/lib/utils";

const Avatar = React.forwardRef<
  React.ElementRef<typeof AvatarPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>
>(({ className, ...props }, ref) => (
  <AvatarPrimitive.Root
    ref={ref}
    className={cn("relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full", className)}
    {...props}
  />
));
Avatar.displayName = AvatarPrimitive.Root.displayName;

const AvatarImage = React.forwardRef<
  React.ElementRef<typeof AvatarPrimitive.Image>,
  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>
>(({ className, ...props }, ref) => (
  <AvatarPrimitive.Image
    ref={ref}
    className={cn("aspect-square h-full w-full", className)}
    {...props}
  />
));
AvatarImage.displayName = AvatarPrimitive.Image.displayName;

const AvatarFallback = React.forwardRef<
  React.ElementRef<typeof AvatarPrimitive.Fallback>,
  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>
>(({ className, ...props }, ref) => (
  <AvatarPrimitive.Fallback
    ref={ref}
    className={cn(
      "flex h-full w-full items-center justify-center rounded-full bg-muted",
      className,
    )}
    {...props}
  />
));
AvatarFallback.displayName = AvatarPrimitive.Fallback.displayName;

export { Avatar, AvatarImage, AvatarFallback };

================
File: components/ui/badge.tsx
================
import { cva, type VariantProps } from "class-variance-authority";
import * as React from "react";

import { cn } from "@/lib/utils";

const badgeVariants = cva(
  "inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2",
  {
    variants: {
      variant: {
        default: "border-transparent bg-primary text-primary-foreground hover:bg-primary/80",
        secondary:
          "border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80",
        destructive:
          "border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80",
        outline: "text-foreground",
        important:
          "border-0 bg-amber-100 text-amber-700 hover:bg-amber-200 dark:bg-amber-900/20 dark:text-amber-500 dark:hover:bg-amber-900/30",
        promotions:
          "border-0 bg-red-100 text-red-700 hover:bg-red-200 dark:bg-red-900/20 dark:text-red-500 dark:hover:bg-red-900/30",
        personal:
          "border-0 bg-green-100 text-green-700 hover:bg-green-200 dark:bg-green-900/20 dark:text-green-500 dark:hover:bg-green-900/30",
        updates:
          "border-0 bg-purple-100 text-purple-700 hover:bg-purple-200 dark:bg-purple-900/20 dark:text-purple-500 dark:hover:bg-purple-900/30",
        forums:
          "border-transparent bg-blue-500/10 text-blue-500 hover:bg-blue-500/15 dark:bg-blue-400/10 dark:text-blue-400 dark:hover:bg-blue-400/15",
      },
    },
    defaultVariants: {
      variant: "default",
    },
  },
);

export interface BadgeProps
  extends React.HTMLAttributes<HTMLDivElement>,
    VariantProps<typeof badgeVariants> {}

function Badge({ className, variant, ...props }: BadgeProps) {
  return <div className={cn(badgeVariants({ variant }), className)} {...props} />;
}

export { Badge, badgeVariants };

================
File: components/ui/button.tsx
================
import { cva, type VariantProps } from "class-variance-authority";
import { Slot } from "@radix-ui/react-slot";
import * as React from "react";

import { cn } from "@/lib/utils";

const buttonVariants = cva(
  "inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-lg text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0",
  {
    variants: {
      variant: {
        default: "bg-primary text-primary-foreground hover:bg-primary/90",
        destructive: "bg-destructive text-destructive-foreground hover:bg-destructive/90",
        outline: "border border-input bg-background hover:bg-accent hover:text-accent-foreground",
        secondary: "bg-secondary text-secondary-foreground hover:bg-secondary/80",
        ghost: "hover:bg-accent hover:text-accent-foreground",
        link: "text-primary underline-offset-4 hover:underline",
        main: "bg-muted text-primary",
      },
      size: {
        default: "h-10 px-4 py-2",
        sm: "h-9 rounded-md px-3",
        lg: "h-11 rounded-md px-8",
        icon: "h-10 w-10",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  },
);

export interface ButtonProps
  extends React.ButtonHTMLAttributes<HTMLButtonElement>,
    VariantProps<typeof buttonVariants> {
  asChild?: boolean;
}

const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(
  ({ className, variant, size, asChild = false, ...props }, ref) => {
    const Comp = asChild ? Slot : "button";
    return (
      <Comp className={cn(buttonVariants({ variant, size, className }))} ref={ref} {...props} />
    );
  },
);
Button.displayName = "Button";

export { Button, buttonVariants };

================
File: components/ui/calendar.tsx
================
"use client";

import { ChevronLeft, ChevronRight } from "lucide-react";
import { DayPicker } from "react-day-picker";
import * as React from "react";

import { buttonVariants } from "@/components/ui/button";
import { cn } from "@/lib/utils";

export type CalendarProps = React.ComponentProps<typeof DayPicker>;

function Calendar({ className, classNames, showOutsideDays = true, ...props }: CalendarProps) {
  return (
    <DayPicker
      showOutsideDays={showOutsideDays}
      className={cn("p-3", className)}
      classNames={{
        months: "flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0",
        month: "space-y-4",
        caption: "flex justify-center pt-1 relative items-center",
        caption_label: "text-sm font-medium",
        nav: "space-x-1 flex items-center",
        nav_button: cn(
          buttonVariants({ variant: "outline" }),
          "h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100",
        ),
        nav_button_previous: "absolute left-1",
        nav_button_next: "absolute right-1",
        table: "w-full border-collapse space-y-1",
        head_row: "flex",
        head_cell: "text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]",
        row: "flex w-full mt-2",
        cell: "h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20",
        day: cn(
          buttonVariants({ variant: "ghost" }),
          "h-9 w-9 p-0 font-normal aria-selected:opacity-100",
        ),
        day_range_end: "day-range-end",
        day_selected:
          "bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground",
        day_today: "bg-accent text-accent-foreground",
        day_outside:
          "day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground",
        day_disabled: "text-muted-foreground opacity-50",
        day_range_middle: "aria-selected:bg-accent aria-selected:text-accent-foreground",
        day_hidden: "invisible",
        ...classNames,
      }}
      components={{
        IconLeft: ({ className, ...props }) => (
          <ChevronLeft className={cn("h-4 w-4", className)} {...props} />
        ),
        IconRight: ({ className, ...props }) => (
          <ChevronRight className={cn("h-4 w-4", className)} {...props} />
        ),
      }}
      {...props}
    />
  );
}
Calendar.displayName = "Calendar";

export { Calendar };

================
File: components/ui/card.tsx
================
import * as React from "react";

import { cn } from "@/lib/utils";

const Card = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(
  ({ className, ...props }, ref) => (
    <div
      ref={ref}
      className={cn("rounded-lg border bg-card text-card-foreground shadow-sm", className)}
      {...props}
    />
  ),
);
Card.displayName = "Card";

const CardHeader = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(
  ({ className, ...props }, ref) => (
    <div ref={ref} className={cn("flex flex-col space-y-1.5 p-6", className)} {...props} />
  ),
);
CardHeader.displayName = "CardHeader";

const CardTitle = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(
  ({ className, ...props }, ref) => (
    <div
      ref={ref}
      className={cn("text-2xl font-semibold leading-none tracking-tight", className)}
      {...props}
    />
  ),
);
CardTitle.displayName = "CardTitle";

const CardDescription = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(
  ({ className, ...props }, ref) => (
    <div ref={ref} className={cn("text-sm text-muted-foreground", className)} {...props} />
  ),
);
CardDescription.displayName = "CardDescription";

const CardContent = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(
  ({ className, ...props }, ref) => (
    <div ref={ref} className={cn("p-6 pt-0", className)} {...props} />
  ),
);
CardContent.displayName = "CardContent";

const CardFooter = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(
  ({ className, ...props }, ref) => (
    <div ref={ref} className={cn("flex items-center p-6 pt-0", className)} {...props} />
  ),
);
CardFooter.displayName = "CardFooter";

export { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent };

================
File: components/ui/chart.tsx
================
"use client";

import * as RechartsPrimitive from "recharts";
import * as React from "react";

import { cn } from "@/lib/utils";

// Format: { THEME_NAME: CSS_SELECTOR }
const THEMES = { light: "", dark: ".dark" } as const;

export type ChartConfig = {
  [k in string]: {
    label?: React.ReactNode;
    icon?: React.ComponentType;
  } & (
    | { color?: string; theme?: never }
    | { color?: never; theme: Record<keyof typeof THEMES, string> }
  );
};

type ChartContextProps = {
  config: ChartConfig;
};

const ChartContext = React.createContext<ChartContextProps | null>(null);

function useChart() {
  const context = React.useContext(ChartContext);

  if (!context) {
    throw new Error("useChart must be used within a <ChartContainer />");
  }

  return context;
}

const ChartContainer = React.forwardRef<
  HTMLDivElement,
  React.ComponentProps<"div"> & {
    config: ChartConfig;
    children: React.ComponentProps<typeof RechartsPrimitive.ResponsiveContainer>["children"];
  }
>(({ id, className, children, config, ...props }, ref) => {
  const uniqueId = React.useId();
  const chartId = `chart-${id || uniqueId.replace(/:/g, "")}`;

  return (
    <ChartContext.Provider value={{ config }}>
      <div
        data-chart={chartId}
        ref={ref}
        className={cn(
          "flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none",
          className,
        )}
        {...props}
      >
        <ChartStyle id={chartId} config={config} />
        <RechartsPrimitive.ResponsiveContainer>{children}</RechartsPrimitive.ResponsiveContainer>
      </div>
    </ChartContext.Provider>
  );
});
ChartContainer.displayName = "Chart";

const ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {
  const colorConfig = Object.entries(config).filter(([, config]) => config.theme || config.color);

  if (!colorConfig.length) {
    return null;
  }

  return (
    <style
      dangerouslySetInnerHTML={{
        __html: Object.entries(THEMES)
          .map(
            ([theme, prefix]) => `
${prefix} [data-chart=${id}] {
${colorConfig
  .map(([key, itemConfig]) => {
    const color = itemConfig.theme?.[theme as keyof typeof itemConfig.theme] || itemConfig.color;
    return color ? `  --color-${key}: ${color};` : null;
  })
  .join("\n")}
}
`,
          )
          .join("\n"),
      }}
    />
  );
};

const ChartTooltip = RechartsPrimitive.Tooltip;

const ChartTooltipContent = React.forwardRef<
  HTMLDivElement,
  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &
    React.ComponentProps<"div"> & {
      hideLabel?: boolean;
      hideIndicator?: boolean;
      indicator?: "line" | "dot" | "dashed";
      nameKey?: string;
      labelKey?: string;
    }
>(
  (
    {
      active,
      payload,
      className,
      indicator = "dot",
      hideLabel = false,
      hideIndicator = false,
      label,
      labelFormatter,
      labelClassName,
      formatter,
      color,
      nameKey,
      labelKey,
    },
    ref,
  ) => {
    const { config } = useChart();

    const tooltipLabel = React.useMemo(() => {
      if (hideLabel || !payload?.length) {
        return null;
      }

      const [item] = payload;
      const key = `${labelKey || item.dataKey || item.name || "value"}`;
      const itemConfig = getPayloadConfigFromPayload(config, item, key);
      const value =
        !labelKey && typeof label === "string"
          ? config[label as keyof typeof config]?.label || label
          : itemConfig?.label;

      if (labelFormatter) {
        return (
          <div className={cn("font-medium", labelClassName)}>{labelFormatter(value, payload)}</div>
        );
      }

      if (!value) {
        return null;
      }

      return <div className={cn("font-medium", labelClassName)}>{value}</div>;
    }, [label, labelFormatter, payload, hideLabel, labelClassName, config, labelKey]);

    if (!active || !payload?.length) {
      return null;
    }

    const nestLabel = payload.length === 1 && indicator !== "dot";

    return (
      <div
        ref={ref}
        className={cn(
          "grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl",
          className,
        )}
      >
        {!nestLabel ? tooltipLabel : null}
        <div className="grid gap-1.5">
          {payload.map((item, index) => {
            const key = `${nameKey || item.name || item.dataKey || "value"}`;
            const itemConfig = getPayloadConfigFromPayload(config, item, key);
            const indicatorColor = color || item.payload.fill || item.color;

            return (
              <div
                key={item.dataKey}
                className={cn(
                  "flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground",
                  indicator === "dot" && "items-center",
                )}
              >
                {formatter && item?.value !== undefined && item.name ? (
                  formatter(item.value, item.name, item, index, item.payload)
                ) : (
                  <>
                    {itemConfig?.icon ? (
                      <itemConfig.icon />
                    ) : (
                      !hideIndicator && (
                        <div
                          className={cn(
                            "shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]",
                            {
                              "h-2.5 w-2.5": indicator === "dot",
                              "w-1": indicator === "line",
                              "w-0 border-[1.5px] border-dashed bg-transparent":
                                indicator === "dashed",
                              "my-0.5": nestLabel && indicator === "dashed",
                            },
                          )}
                          style={
                            {
                              "--color-bg": indicatorColor,
                              "--color-border": indicatorColor,
                            } as React.CSSProperties
                          }
                        />
                      )
                    )}
                    <div
                      className={cn(
                        "flex flex-1 justify-between leading-none",
                        nestLabel ? "items-end" : "items-center",
                      )}
                    >
                      <div className="grid gap-1.5">
                        {nestLabel ? tooltipLabel : null}
                        <span className="text-muted-foreground">
                          {itemConfig?.label || item.name}
                        </span>
                      </div>
                      {item.value && (
                        <span className="font-mono font-medium tabular-nums text-foreground">
                          {item.value.toLocaleString()}
                        </span>
                      )}
                    </div>
                  </>
                )}
              </div>
            );
          })}
        </div>
      </div>
    );
  },
);
ChartTooltipContent.displayName = "ChartTooltip";

const ChartLegend = RechartsPrimitive.Legend;

const ChartLegendContent = React.forwardRef<
  HTMLDivElement,
  React.ComponentProps<"div"> &
    Pick<RechartsPrimitive.LegendProps, "payload" | "verticalAlign"> & {
      hideIcon?: boolean;
      nameKey?: string;
    }
>(({ className, hideIcon = false, payload, verticalAlign = "bottom", nameKey }, ref) => {
  const { config } = useChart();

  if (!payload?.length) {
    return null;
  }

  return (
    <div
      ref={ref}
      className={cn(
        "flex items-center justify-center gap-4",
        verticalAlign === "top" ? "pb-3" : "pt-3",
        className,
      )}
    >
      {payload.map((item) => {
        const key = `${nameKey || item.dataKey || "value"}`;
        const itemConfig = getPayloadConfigFromPayload(config, item, key);

        return (
          <div
            key={item.value}
            className={cn(
              "flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground",
            )}
          >
            {itemConfig?.icon && !hideIcon ? (
              <itemConfig.icon />
            ) : (
              <div
                className="h-2 w-2 shrink-0 rounded-[2px]"
                style={{
                  backgroundColor: item.color,
                }}
              />
            )}
            {itemConfig?.label}
          </div>
        );
      })}
    </div>
  );
});
ChartLegendContent.displayName = "ChartLegend";

// Helper to extract item config from a payload.
function getPayloadConfigFromPayload(config: ChartConfig, payload: unknown, key: string) {
  if (typeof payload !== "object" || payload === null) {
    return undefined;
  }

  const payloadPayload =
    "payload" in payload && typeof payload.payload === "object" && payload.payload !== null
      ? payload.payload
      : undefined;

  let configLabelKey: string = key;

  if (key in payload && typeof payload[key as keyof typeof payload] === "string") {
    configLabelKey = payload[key as keyof typeof payload] as string;
  } else if (
    payloadPayload &&
    key in payloadPayload &&
    typeof payloadPayload[key as keyof typeof payloadPayload] === "string"
  ) {
    configLabelKey = payloadPayload[key as keyof typeof payloadPayload] as string;
  }

  return configLabelKey in config ? config[configLabelKey] : config[key as keyof typeof config];
}

export {
  ChartContainer,
  ChartTooltip,
  ChartTooltipContent,
  ChartLegend,
  ChartLegendContent,
  ChartStyle,
};

================
File: components/ui/collapsible.tsx
================
"use client";

import * as CollapsiblePrimitive from "@radix-ui/react-collapsible";

const Collapsible = CollapsiblePrimitive.Root;

const CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger;

const CollapsibleContent = CollapsiblePrimitive.CollapsibleContent;

export { Collapsible, CollapsibleTrigger, CollapsibleContent };

================
File: components/ui/command.tsx
================
"use client";

import { Dialog, DialogContent, DialogDescription, DialogTitle } from "@/components/ui/dialog";
import { type DialogProps } from "@radix-ui/react-dialog";
import { Command as CommandPrimitive } from "cmdk";

import { Search } from "lucide-react";
import { cn } from "@/lib/utils";
import * as React from "react";

const Command = React.forwardRef<
  React.ElementRef<typeof CommandPrimitive>,
  React.ComponentPropsWithoutRef<typeof CommandPrimitive>
>(({ className, ...props }, ref) => (
  <CommandPrimitive
    ref={ref}
    className={cn(
      "flex h-full w-full flex-col overflow-hidden rounded-lg bg-popover text-popover-foreground",
      className,
    )}
    {...props}
  />
));
Command.displayName = CommandPrimitive.displayName;

const CommandDialog = ({ children, ...props }: DialogProps) => {
  return (
    <Dialog {...props}>
      <DialogTitle className="sr-only">Command</DialogTitle>
      <DialogDescription className="sr-only">Command</DialogDescription>
      <DialogContent className="overflow-hidden p-0 sm:max-w-lg [&>button:last-child]:hidden">
        <Command className="[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]]:px-2 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-3 [&_[cmdk-item]]:py-2">
          {children}
        </Command>
      </DialogContent>
    </Dialog>
  );
};

const CommandInput = React.forwardRef<
  React.ElementRef<typeof CommandPrimitive.Input>,
  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>
>(({ className, ...props }, ref) => (
  <div className="flex items-center border-b border-input px-5" cmdk-input-wrapper="">
    <Search size={20} strokeWidth={2} className="me-3 text-muted-foreground/80" />
    <CommandPrimitive.Input
      ref={ref}
      className={cn(
        "flex h-10 w-full rounded-lg bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground/70 disabled:cursor-not-allowed disabled:opacity-50",
        className,
      )}
      {...props}
    />
  </div>
));

CommandInput.displayName = CommandPrimitive.Input.displayName;

const CommandList = React.forwardRef<
  React.ElementRef<typeof CommandPrimitive.List>,
  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>
>(({ className, ...props }, ref) => (
  <CommandPrimitive.List
    ref={ref}
    className={cn("max-h-80 overflow-y-auto overflow-x-hidden", className)}
    {...props}
  />
));

CommandList.displayName = CommandPrimitive.List.displayName;

const CommandEmpty = React.forwardRef<
  React.ElementRef<typeof CommandPrimitive.Empty>,
  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>
>((props, ref) => (
  <CommandPrimitive.Empty ref={ref} className="py-6 text-center text-sm" {...props} />
));

CommandEmpty.displayName = CommandPrimitive.Empty.displayName;

const CommandGroup = React.forwardRef<
  React.ElementRef<typeof CommandPrimitive.Group>,
  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>
>(({ className, ...props }, ref) => (
  <CommandPrimitive.Group
    ref={ref}
    className={cn(
      "overflow-hidden p-2 text-foreground [&_[cmdk-group-heading]]:px-3 [&_[cmdk-group-heading]]:py-2 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground",
      className,
    )}
    {...props}
  />
));

CommandGroup.displayName = CommandPrimitive.Group.displayName;

const CommandSeparator = React.forwardRef<
  React.ElementRef<typeof CommandPrimitive.Separator>,
  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>
>(({ className, ...props }, ref) => (
  <CommandPrimitive.Separator
    ref={ref}
    className={cn("-mx-1 h-px bg-border", className)}
    {...props}
  />
));
CommandSeparator.displayName = CommandPrimitive.Separator.displayName;

const CommandItem = React.forwardRef<
  React.ElementRef<typeof CommandPrimitive.Item>,
  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>
>(({ className, ...props }, ref) => (
  <CommandPrimitive.Item
    ref={ref}
    className={cn(
      "relative flex cursor-default select-none items-center gap-4 rounded-md px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected=true]:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0",
      className,
    )}
    {...props}
  />
));

CommandItem.displayName = CommandPrimitive.Item.displayName;

const CommandShortcut = ({ className, ...props }: React.HTMLAttributes<HTMLSpanElement>) => {
  return (
    <kbd
      className={cn(
        "-me-1 ms-auto inline-flex h-5 max-h-full items-center rounded border border-border bg-background px-1 font-[inherit] text-[0.625rem] font-medium text-muted-foreground/70",
        className,
      )}
      {...props}
    />
  );
};
CommandShortcut.displayName = "CommandShortcut";

export {
  Command,
  CommandDialog,
  CommandEmpty,
  CommandGroup,
  CommandInput,
  CommandItem,
  CommandList,
  CommandSeparator,
  CommandShortcut,
};

================
File: components/ui/dialog.tsx
================
"use client";

import * as DialogPrimitive from "@radix-ui/react-dialog";
import * as React from "react";

import { cn } from "@/lib/utils";

const Dialog = DialogPrimitive.Root;

const DialogTrigger = DialogPrimitive.Trigger;

const DialogPortal = DialogPrimitive.Portal;

const DialogClose = DialogPrimitive.Close;

const DialogOverlay = React.forwardRef<
  React.ElementRef<typeof DialogPrimitive.Overlay>,
  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>
>(({ className, ...props }, ref) => (
  <DialogPrimitive.Overlay
    ref={ref}
    className={cn(
      "fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",
      className,
    )}
    {...props}
  />
));
DialogOverlay.displayName = DialogPrimitive.Overlay.displayName;

const DialogContent = React.forwardRef<
  React.ElementRef<typeof DialogPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>
>(({ className, children, ...props }, ref) => (
  <DialogPortal>
    <DialogOverlay />
    <DialogPrimitive.Content
      ref={ref}
      className={cn(
        "fixed left-[50%] top-[50%] z-50 grid max-h-[95%] w-full max-w-md translate-x-[-50%] translate-y-[-50%] gap-4 overflow-y-auto border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-2xl",
        className,
      )}
      {...props}
    >
      {children}
    </DialogPrimitive.Content>
  </DialogPortal>
));
DialogContent.displayName = DialogPrimitive.Content.displayName;

const DialogHeader = ({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) => (
  <div className={cn("flex flex-col space-y-1.5 text-center sm:text-left", className)} {...props} />
);
DialogHeader.displayName = "DialogHeader";

const DialogFooter = ({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) => (
  <div
    className={cn("flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2", className)}
    {...props}
  />
);
DialogFooter.displayName = "DialogFooter";

const DialogTitle = React.forwardRef<
  React.ElementRef<typeof DialogPrimitive.Title>,
  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>
>(({ className, ...props }, ref) => (
  <DialogPrimitive.Title
    ref={ref}
    className={cn("text-lg font-semibold leading-none tracking-tight", className)}
    {...props}
  />
));
DialogTitle.displayName = DialogPrimitive.Title.displayName;

const DialogDescription = React.forwardRef<
  React.ElementRef<typeof DialogPrimitive.Description>,
  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>
>(({ className, ...props }, ref) => (
  <DialogPrimitive.Description
    ref={ref}
    className={cn("text-sm text-muted-foreground", className)}
    {...props}
  />
));
DialogDescription.displayName = DialogPrimitive.Description.displayName;

export {
  Dialog,
  DialogPortal,
  DialogOverlay,
  DialogClose,
  DialogTrigger,
  DialogContent,
  DialogHeader,
  DialogFooter,
  DialogTitle,
  DialogDescription,
};

================
File: components/ui/drawer.tsx
================
"use client";

import { Drawer as DrawerPrimitive } from "vaul";
import * as React from "react";

import { cn } from "@/lib/utils";

const Drawer = ({
  shouldScaleBackground = true,
  ...props
}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (
  <DrawerPrimitive.Root shouldScaleBackground={shouldScaleBackground} {...props} />
);
Drawer.displayName = "Drawer";

const DrawerTrigger = DrawerPrimitive.Trigger;

const DrawerPortal = DrawerPrimitive.Portal;

const DrawerClose = DrawerPrimitive.Close;

const DrawerOverlay = React.forwardRef<
  React.ElementRef<typeof DrawerPrimitive.Overlay>,
  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>
>(({ className, ...props }, ref) => (
  <DrawerPrimitive.Overlay
    ref={ref}
    className={cn("fixed inset-0 z-50 bg-black/80", className)}
    {...props}
  />
));
DrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName;

const DrawerContent = React.forwardRef<
  React.ElementRef<typeof DrawerPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>
>(({ className, children, ...props }, ref) => (
  <DrawerPortal>
    <DrawerOverlay />
    <DrawerPrimitive.Content
      ref={ref}
      className={cn(
        "fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background",
        className,
      )}
      {...props}
    >
      <div className="mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted" />
      {children}
    </DrawerPrimitive.Content>
  </DrawerPortal>
));
DrawerContent.displayName = "DrawerContent";

const DrawerHeader = ({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) => (
  <div className={cn("grid gap-1.5 p-4 text-center sm:text-left", className)} {...props} />
);
DrawerHeader.displayName = "DrawerHeader";

const DrawerFooter = ({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) => (
  <div className={cn("mt-auto flex flex-col gap-2 p-4", className)} {...props} />
);
DrawerFooter.displayName = "DrawerFooter";

const DrawerTitle = React.forwardRef<
  React.ElementRef<typeof DrawerPrimitive.Title>,
  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>
>(({ className, ...props }, ref) => (
  <DrawerPrimitive.Title
    ref={ref}
    className={cn("text-lg font-semibold leading-none tracking-tight", className)}
    {...props}
  />
));
DrawerTitle.displayName = DrawerPrimitive.Title.displayName;

const DrawerDescription = React.forwardRef<
  React.ElementRef<typeof DrawerPrimitive.Description>,
  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>
>(({ className, ...props }, ref) => (
  <DrawerPrimitive.Description
    ref={ref}
    className={cn("text-sm text-muted-foreground", className)}
    {...props}
  />
));
DrawerDescription.displayName = DrawerPrimitive.Description.displayName;

export {
  Drawer,
  DrawerPortal,
  DrawerOverlay,
  DrawerTrigger,
  DrawerClose,
  DrawerContent,
  DrawerHeader,
  DrawerFooter,
  DrawerTitle,
  DrawerDescription,
};

================
File: components/ui/dropdown-menu.tsx
================
"use client";

import * as DropdownMenuPrimitive from "@radix-ui/react-dropdown-menu";
import { Check, Circle } from "lucide-react";
import * as React from "react";

import { cn } from "@/lib/utils";

const DropdownMenu = DropdownMenuPrimitive.Root;

const DropdownMenuTrigger = DropdownMenuPrimitive.Trigger;

const DropdownMenuGroup = DropdownMenuPrimitive.Group;

const DropdownMenuPortal = DropdownMenuPrimitive.Portal;

const DropdownMenuSub = DropdownMenuPrimitive.Sub;

const DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup;

const DropdownMenuSubTrigger = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {
    inset?: boolean;
  }
>(({ className, inset, children, ...props }, ref) => (
  <DropdownMenuPrimitive.SubTrigger
    ref={ref}
    className={cn(
      "flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0",
      inset && "pl-8",
      className,
    )}
    {...props}
  >
    {children}
  </DropdownMenuPrimitive.SubTrigger>
));
DropdownMenuSubTrigger.displayName = DropdownMenuPrimitive.SubTrigger.displayName;

const DropdownMenuSubContent = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>
>(({ className, ...props }, ref) => (
  <DropdownMenuPrimitive.SubContent
    ref={ref}
    className={cn(
      "z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
      className,
    )}
    {...props}
  />
));
DropdownMenuSubContent.displayName = DropdownMenuPrimitive.SubContent.displayName;

const DropdownMenuContent = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>
>(({ className, sideOffset = 4, ...props }, ref) => (
  <DropdownMenuPrimitive.Portal>
    <DropdownMenuPrimitive.Content
      ref={ref}
      sideOffset={sideOffset}
      className={cn(
        "z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
        className,
      )}
      {...props}
    />
  </DropdownMenuPrimitive.Portal>
));
DropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName;

const DropdownMenuItem = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.Item>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {
    inset?: boolean;
  }
>(({ className, inset, ...props }, ref) => (
  <DropdownMenuPrimitive.Item
    ref={ref}
    className={cn(
      "relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0",
      inset && "pl-8",
      className,
    )}
    {...props}
  />
));
DropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName;

const DropdownMenuCheckboxItem = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>
>(({ className, children, checked, ...props }, ref) => (
  <DropdownMenuPrimitive.CheckboxItem
    ref={ref}
    className={cn(
      "relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      className,
    )}
    checked={checked}
    {...props}
  >
    <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
      <DropdownMenuPrimitive.ItemIndicator>
        <Check className="h-4 w-4" />
      </DropdownMenuPrimitive.ItemIndicator>
    </span>
    {children}
  </DropdownMenuPrimitive.CheckboxItem>
));
DropdownMenuCheckboxItem.displayName = DropdownMenuPrimitive.CheckboxItem.displayName;

const DropdownMenuRadioItem = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>
>(({ className, children, ...props }, ref) => (
  <DropdownMenuPrimitive.RadioItem
    ref={ref}
    className={cn(
      "relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      className,
    )}
    {...props}
  >
    <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
      <DropdownMenuPrimitive.ItemIndicator>
        <Circle className="h-2 w-2 fill-current" />
      </DropdownMenuPrimitive.ItemIndicator>
    </span>
    {children}
  </DropdownMenuPrimitive.RadioItem>
));
DropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName;

const DropdownMenuLabel = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.Label>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {
    inset?: boolean;
  }
>(({ className, inset, ...props }, ref) => (
  <DropdownMenuPrimitive.Label
    ref={ref}
    className={cn("px-2 py-1.5 text-sm font-semibold", inset && "pl-8", className)}
    {...props}
  />
));
DropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName;

const DropdownMenuSeparator = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>
>(({ className, ...props }, ref) => (
  <DropdownMenuPrimitive.Separator
    ref={ref}
    className={cn("-mx-1 my-1 h-px bg-muted", className)}
    {...props}
  />
));
DropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName;

const DropdownMenuShortcut = ({ className, ...props }: React.HTMLAttributes<HTMLSpanElement>) => {
  return (
    <span className={cn("ml-auto text-xs tracking-widest opacity-60", className)} {...props} />
  );
};
DropdownMenuShortcut.displayName = "DropdownMenuShortcut";

export {
  DropdownMenu,
  DropdownMenuTrigger,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuCheckboxItem,
  DropdownMenuRadioItem,
  DropdownMenuLabel,
  DropdownMenuSeparator,
  DropdownMenuShortcut,
  DropdownMenuGroup,
  DropdownMenuPortal,
  DropdownMenuSub,
  DropdownMenuSubContent,
  DropdownMenuSubTrigger,
  DropdownMenuRadioGroup,
};

================
File: components/ui/envelop.tsx
================
export default function Envelop() {
  return (
    <div className="relative h-[303.33px] w-[455px]">
      <div className="absolute left-0 h-[303.33px] w-[455px] rounded-[28.61px] border-4 border-slate-600 bg-gradient-to-b from-[#eeeff1] to-[#f9f9fa] backdrop-blur-[85.60px]" />
      <div className="overflow-hidden">
        <div className="absolute h-[303.33px] w-[455px] rounded-[28.61px] bg-black/10" />
        <div data-svg-wrapper className="absolute left-4 top-2">
          <svg
            width="420"
            height="300"
            viewBox="0 0 515 338"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <g opacity="0.4">
              <g filter="url(#filter0_f_5652_475)">
                <path
                  d="M10.7292 337.333L504.271 337.333L288.096 143.09C277.281 133.371 271.873 128.512 265.758 126.668C260.373 125.045 254.628 125.045 249.242 126.668C243.127 128.512 237.719 133.371 226.904 143.09L10.7292 337.333Z"
                  fill="#334155"
                  fillOpacity="0.4"
                />
              </g>
              <g filter="url(#filter1_f_5652_475)">
                <path
                  d="M39.3403 337.333L475.66 337.333L291.576 132.125C279.779 118.975 273.881 112.4 266.929 109.973C260.824 107.842 254.176 107.842 248.071 109.973C241.119 112.4 235.221 118.975 223.424 132.125L39.3403 337.333Z"
                  fill="#334155"
                  fillOpacity="0.2"
                />
              </g>
              <g filter="url(#filter2_f_5652_475)">
                <path
                  d="M10.7292 337.333L504.271 337.333L290.981 108.588C279.343 96.1067 273.524 89.8661 266.721 87.5499C260.742 85.5144 254.258 85.5144 248.279 87.5499C241.476 89.8661 235.657 96.1067 224.019 108.588L10.7292 337.333Z"
                  fill="#334155"
                  fillOpacity="0.1"
                />
              </g>
            </g>
            <foreignObject x="-16" y="108.743" width="547" height="244.591">
              <div
                style={{
                  backdropFilter: "blur(8px)",
                  clipPath: "url(#bgblur_0_5652_475_clip_path)",
                  height: "100%",
                  width: "100%",
                }}
              ></div>
            </foreignObject>
            <path
              data-figma-bg-blur-radius="16"
              d="M0 337.334L515 337.334L287.371 141.32C276.773 132.194 271.474 127.631 265.527 125.892C260.285 124.36 254.715 124.36 249.473 125.892C243.526 127.631 238.227 132.194 227.629 141.32L0 337.334Z"
              fill="url(#paint0_linear_5652_475)"
              fillOpacity="0.4"
            />
            <path
              d="M5.36459 330.181L227.653 139.422C238.245 130.333 243.54 125.789 249.48 124.059C254.714 122.535 260.276 122.538 265.509 124.068C271.446 125.804 276.736 130.355 287.317 139.456L513.212 333.757"
              stroke="#475569"
              strokeOpacity="0.06"
              strokeWidth="3.57639"
            />
            <defs>
              <filter
                id="filter0_f_5652_475"
                x="-3.57635"
                y="111.145"
                width="522.153"
                height="240.494"
                filterUnits="userSpaceOnUse"
                colorInterpolationFilters="sRGB"
              >
                <feFlood floodOpacity="0" result="BackgroundImageFix" />
                <feBlend mode="normal" in="SourceGraphic" in2="BackgroundImageFix" result="shape" />
                <feGaussianBlur stdDeviation="7.15278" result="effect1_foregroundBlur_5652_475" />
              </filter>
              <filter
                id="filter1_f_5652_475"
                x="-3.57635"
                y="65.4578"
                width="522.153"
                height="314.792"
                filterUnits="userSpaceOnUse"
                colorInterpolationFilters="sRGB"
              >
                <feFlood floodOpacity="0" result="BackgroundImageFix" />
                <feBlend mode="normal" in="SourceGraphic" in2="BackgroundImageFix" result="shape" />
                <feGaussianBlur stdDeviation="21.4583" result="effect1_foregroundBlur_5652_475" />
              </filter>
              <filter
                id="filter2_f_5652_475"
                x="-75.1041"
                y="0.189957"
                width="665.208"
                height="422.977"
                filterUnits="userSpaceOnUse"
                colorInterpolationFilters="sRGB"
              >
                <feFlood floodOpacity="0" result="BackgroundImageFix" />
                <feBlend mode="normal" in="SourceGraphic" in2="BackgroundImageFix" result="shape" />
                <feGaussianBlur stdDeviation="42.9167" result="effect1_foregroundBlur_5652_475" />
              </filter>
              <clipPath id="bgblur_0_5652_475_clip_path">
                <path
                  transform="translate(16 -108.743)"
                  d="M0 337.334L515 337.334L287.371 141.32C276.773 132.194 271.474 127.631 265.527 125.892C260.285 124.36 254.715 124.36 249.473 125.892C243.526 127.631 238.227 132.194 227.629 141.32L0 337.334Z"
                />
              </clipPath>
              <linearGradient
                id="paint0_linear_5652_475"
                x1="257.5"
                y1="115.597"
                x2="257.5"
                y2="337.333"
                gradientUnits="userSpaceOnUse"
              >
                <stop offset="0.524194" stopColor="#F4F5F6" />
                <stop offset="1" stopColor="#EEF0F1" />
              </linearGradient>
            </defs>
          </svg>
        </div>
        <div data-svg-wrapper className="absolute -top-1 left-4">
          <svg
            width="420"
            height="300"
            viewBox="0 0 515 338"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <g style={{ mixBlendMode: "multiply" }} opacity="0.7">
              <g filter="url(#filter0_f_5652_482)">
                <path
                  d="M10.7291 -6.10352e-05L504.271 -6.10352e-05L288.096 194.244C277.28 203.962 271.873 208.822 265.758 210.665C260.372 212.288 254.627 212.288 249.242 210.665C243.127 208.822 237.719 203.962 226.903 194.244L10.7291 -6.10352e-05Z"
                  fill="#334155"
                  fillOpacity="0.4"
                />
              </g>
              <g filter="url(#filter1_f_5652_482)">
                <path
                  d="M39.3402 -6.10352e-05L475.66 -6.10352e-05L291.576 205.208C279.779 218.358 273.881 224.934 266.929 227.36C260.824 229.492 254.176 229.492 248.071 227.36C241.119 224.934 235.221 218.358 223.424 205.208L39.3402 -6.10352e-05Z"
                  fill="#334155"
                  fillOpacity="0.2"
                />
              </g>
              <g filter="url(#filter2_f_5652_482)">
                <path
                  d="M10.7291 -6.10352e-05L504.271 -6.10352e-05L290.981 228.745C279.343 241.227 273.524 247.467 266.721 249.783C260.742 251.819 254.258 251.819 248.279 249.783C241.476 247.467 235.657 241.227 224.019 228.745L10.7291 -6.10352e-05Z"
                  fill="#334155"
                  fillOpacity="0.1"
                />
              </g>
              <g filter="url(#filter3_f_5652_482)">
                <path
                  d="M28.6111 -6.10352e-05L486.389 -6.10352e-05L273.337 233.026C264.829 242.331 250.171 242.331 241.663 233.026L28.6111 -6.10352e-05Z"
                  fill="#334155"
                  fillOpacity="0.05"
                />
              </g>
              <g filter="url(#filter4_f_5652_482)">
                <path
                  d="M7.15278 -3.57642L507.847 -3.57642L272.101 215.33C263.868 222.976 251.132 222.976 242.899 215.33L7.15278 -3.57642Z"
                  fill="#334155"
                  fillOpacity="0.1"
                />
              </g>
            </g>
            <path
              d="M5.36459 7.15272L227.653 197.911C238.245 207 243.54 211.545 249.48 213.274C254.714 214.798 260.276 214.795 265.509 213.265C271.446 211.529 276.736 206.978 287.317 197.877L513.212 3.57633"
              stroke="#475569"
              strokeOpacity="0.06"
              strokeWidth="3.57639"
            />
            <foreignObject x="-16" y="-16.0001" width="547" height="244.59">
              <div
                style={{
                  backdropFilter: "blur(8px)",
                  clipPath: "url(#bgblur_0_5652_482_clip_path)",
                  height: "100%",
                  width: "100%",
                }}
              ></div>
            </foreignObject>
            <path
              data-figma-bg-blur-radius="16"
              d="M0 -6.10352e-05L515 -6.10352e-05L287.371 196.014C276.773 205.14 271.474 209.703 265.527 211.441C260.285 212.973 254.715 212.973 249.473 211.441C243.526 209.703 238.227 205.14 227.629 196.014L0 -6.10352e-05Z"
              fill="url(#paint0_linear_5652_482)"
              fillOpacity="0.6"
            />
            <defs>
              <filter
                id="filter0_f_5652_482"
                x="-3.57644"
                y="-14.3056"
                width="522.153"
                height="240.494"
                filterUnits="userSpaceOnUse"
                colorInterpolationFilters="sRGB"
              >
                <feFlood floodOpacity="0" result="BackgroundImageFix" />
                <feBlend mode="normal" in="SourceGraphic" in2="BackgroundImageFix" result="shape" />
                <feGaussianBlur stdDeviation="7.15278" result="effect1_foregroundBlur_5652_482" />
              </filter>
              <filter
                id="filter1_f_5652_482"
                x="-3.57644"
                y="-42.9167"
                width="522.153"
                height="314.792"
                filterUnits="userSpaceOnUse"
                colorInterpolationFilters="sRGB"
              >
                <feFlood floodOpacity="0" result="BackgroundImageFix" />
                <feBlend mode="normal" in="SourceGraphic" in2="BackgroundImageFix" result="shape" />
                <feGaussianBlur stdDeviation="21.4583" result="effect1_foregroundBlur_5652_482" />
              </filter>
              <filter
                id="filter2_f_5652_482"
                x="-75.1042"
                y="-85.8334"
                width="665.208"
                height="422.977"
                filterUnits="userSpaceOnUse"
                colorInterpolationFilters="sRGB"
              >
                <feFlood floodOpacity="0" result="BackgroundImageFix" />
                <feBlend mode="normal" in="SourceGraphic" in2="BackgroundImageFix" result="shape" />
                <feGaussianBlur stdDeviation="42.9167" result="effect1_foregroundBlur_5652_482" />
              </filter>
              <filter
                id="filter3_f_5652_482"
                x="-7.15284"
                y="-35.764"
                width="529.306"
                height="311.532"
                filterUnits="userSpaceOnUse"
                colorInterpolationFilters="sRGB"
              >
                <feFlood floodOpacity="0" result="BackgroundImageFix" />
                <feBlend mode="normal" in="SourceGraphic" in2="BackgroundImageFix" result="shape" />
                <feGaussianBlur stdDeviation="17.8819" result="effect1_foregroundBlur_5652_482" />
              </filter>
              <filter
                id="filter4_f_5652_482"
                x="-7.15278"
                y="-17.882"
                width="529.306"
                height="253.252"
                filterUnits="userSpaceOnUse"
                colorInterpolationFilters="sRGB"
              >
                <feFlood floodOpacity="0" result="BackgroundImageFix" />
                <feBlend mode="normal" in="SourceGraphic" in2="BackgroundImageFix" result="shape" />
                <feGaussianBlur stdDeviation="7.15278" result="effect1_foregroundBlur_5652_482" />
              </filter>
              <clipPath id="bgblur_0_5652_482_clip_path">
                <path
                  transform="translate(16 16.0001)"
                  d="M0 -6.10352e-05L515 -6.10352e-05L287.371 196.014C276.773 205.14 271.474 209.703 265.527 211.441C260.285 212.973 254.715 212.973 249.473 211.441C243.526 209.703 238.227 205.14 227.629 196.014L0 -6.10352e-05Z"
                />
              </clipPath>
              <linearGradient
                id="paint0_linear_5652_482"
                x1="257.5"
                y1="-6.10352e-05"
                x2="257.5"
                y2="221.736"
                gradientUnits="userSpaceOnUse"
              >
                <stop offset="0.25" stopColor="#FAFAFB" />
                <stop offset="1" stopColor="#F4F5F6" />
              </linearGradient>
            </defs>
          </svg>
        </div>
        <div className="absolute left-0 top-0 h-[343.33px] w-[515px] border-8 border-[#f9fafa] opacity-40 blur-[28.61px]" />
        <div className="absolute left-0 top-0 h-[303.33px] w-[455px] rounded-[28.61px] border-4 border-white/40" />
      </div>
      <div className="absolute left-[170px] top-[32px]">
        <div className="flex flex-col font-mono text-[9px] font-semibold leading-tight text-[#e7e7e7]">
          <span>0 Email</span>
          <span>123 Open Source Way</span>
          <span>Freemail City, FS 98765</span>
          <span>United States</span>
        </div>
      </div>
    </div>
  );
}

================
File: components/ui/form.tsx
================
"use client";

import {
  Controller,
  ControllerProps,
  FieldPath,
  FieldValues,
  FormProvider,
  useFormContext,
} from "react-hook-form";
import * as LabelPrimitive from "@radix-ui/react-label";
import { Slot } from "@radix-ui/react-slot";
import * as React from "react";

import { Label } from "@/components/ui/label";
import { cn } from "@/lib/utils";

const Form = FormProvider;

type FormFieldContextValue<
  TFieldValues extends FieldValues = FieldValues,
  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,
> = {
  name: TName;
};

const FormFieldContext = React.createContext<FormFieldContextValue>({} as FormFieldContextValue);

const FormField = <
  TFieldValues extends FieldValues = FieldValues,
  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,
>({
  ...props
}: ControllerProps<TFieldValues, TName>) => {
  return (
    <FormFieldContext.Provider value={{ name: props.name }}>
      <Controller {...props} />
    </FormFieldContext.Provider>
  );
};

const useFormField = () => {
  const fieldContext = React.useContext(FormFieldContext);
  const itemContext = React.useContext(FormItemContext);
  const { getFieldState, formState } = useFormContext();

  const fieldState = getFieldState(fieldContext.name, formState);

  if (!fieldContext) {
    throw new Error("useFormField should be used within <FormField>");
  }

  const { id } = itemContext;

  return {
    id,
    name: fieldContext.name,
    formItemId: `${id}-form-item`,
    formDescriptionId: `${id}-form-item-description`,
    formMessageId: `${id}-form-item-message`,
    ...fieldState,
  };
};

type FormItemContextValue = {
  id: string;
};

const FormItemContext = React.createContext<FormItemContextValue>({} as FormItemContextValue);

const FormItem = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(
  ({ className, ...props }, ref) => {
    const id = React.useId();

    return (
      <FormItemContext.Provider value={{ id }}>
        <div ref={ref} className={cn("space-y-2", className)} {...props} />
      </FormItemContext.Provider>
    );
  },
);
FormItem.displayName = "FormItem";

const FormLabel = React.forwardRef<
  React.ElementRef<typeof LabelPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>
>(({ className, ...props }, ref) => {
  const { error, formItemId } = useFormField();

  return (
    <Label
      ref={ref}
      className={cn(error && "text-destructive", className)}
      htmlFor={formItemId}
      {...props}
    />
  );
});
FormLabel.displayName = "FormLabel";

const FormControl = React.forwardRef<
  React.ElementRef<typeof Slot>,
  React.ComponentPropsWithoutRef<typeof Slot>
>(({ ...props }, ref) => {
  const { error, formItemId, formDescriptionId, formMessageId } = useFormField();

  return (
    <Slot
      ref={ref}
      id={formItemId}
      aria-describedby={!error ? `${formDescriptionId}` : `${formDescriptionId} ${formMessageId}`}
      aria-invalid={!!error}
      {...props}
    />
  );
});
FormControl.displayName = "FormControl";

const FormDescription = React.forwardRef<
  HTMLParagraphElement,
  React.HTMLAttributes<HTMLParagraphElement>
>(({ className, ...props }, ref) => {
  const { formDescriptionId } = useFormField();

  return (
    <p
      ref={ref}
      id={formDescriptionId}
      className={cn("text-sm text-muted-foreground", className)}
      {...props}
    />
  );
});
FormDescription.displayName = "FormDescription";

const FormMessage = React.forwardRef<
  HTMLParagraphElement,
  React.HTMLAttributes<HTMLParagraphElement>
>(({ className, children, ...props }, ref) => {
  const { error, formMessageId } = useFormField();
  const body = error ? String(error?.message) : children;

  if (!body) {
    return null;
  }

  return (
    <p
      ref={ref}
      id={formMessageId}
      className={cn("text-sm font-medium text-destructive", className)}
      {...props}
    >
      {body}
    </p>
  );
});
FormMessage.displayName = "FormMessage";

export {
  useFormField,
  Form,
  FormItem,
  FormLabel,
  FormControl,
  FormDescription,
  FormMessage,
  FormField,
};

================
File: components/ui/input.tsx
================
import * as React from "react";

import { cn } from "@/lib/utils";

const Input = React.forwardRef<HTMLInputElement, React.ComponentProps<"input">>(
  ({ className, type, ...props }, ref) => {
    return (
      <input
        type={type}
        className={cn(
          "flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm",
          className,
        )}
        ref={ref}
        {...props}
      />
    );
  },
);
Input.displayName = "Input";

export { Input };

================
File: components/ui/label.tsx
================
"use client";

import { cva, type VariantProps } from "class-variance-authority";
import * as LabelPrimitive from "@radix-ui/react-label";
import * as React from "react";

import { cn } from "@/lib/utils";

const labelVariants = cva(
  "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70",
);

const Label = React.forwardRef<
  React.ElementRef<typeof LabelPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> & VariantProps<typeof labelVariants>
>(({ className, ...props }, ref) => (
  <LabelPrimitive.Root ref={ref} className={cn(labelVariants(), className)} {...props} />
));
Label.displayName = LabelPrimitive.Root.displayName;

export { Label };

================
File: components/ui/nav-main.tsx
================
"use client";

import { usePathname, useSearchParams } from "next/navigation";
import { useRef, useCallback } from "react";
import * as React from "react";
import Link from "next/link";

import {
  SidebarGroup,
  SidebarMenu,
  SidebarMenuItem,
  SidebarGroupLabel,
  SidebarMenuButton,
} from "./sidebar";
import { Collapsible, CollapsibleTrigger } from "@/components/ui/collapsible";
import { BASE_URL } from "@/lib/constants";
import { cn } from "@/lib/utils";

interface IconProps extends React.SVGProps<SVGSVGElement> {
  ref?: React.Ref<SVGSVGElement>;
  startAnimation?: () => void;
  stopAnimation?: () => void;
}

interface NavItemProps {
  title: string;
  url: string;
  icon?: React.ComponentType<IconProps>;
  badge?: number;
  isActive?: boolean;
  isExpanded?: boolean;
  onClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;
  suffix?: React.ComponentType<IconProps>;
  isBackButton?: boolean;
  isSettingsButton?: boolean;
  isSettingsPage?: boolean;
  disabled?: boolean;
}

interface NavMainProps {
  items: {
    title: string;
    items: NavItemProps[];
    isActive?: boolean;
  }[];
}

type IconRefType = SVGSVGElement & {
  startAnimation?: () => void;
  stopAnimation?: () => void;
};

export function NavMain({ items }: NavMainProps) {
  const pathname = usePathname();
  const searchParams = useSearchParams();

  /**
   * Validates URLs to prevent open redirect vulnerabilities.
   * Only allows two types of URLs:
   * 1. Absolute paths that start with '/' (e.g., '/mail', '/settings')
   * 2. Full URLs that match our application's base URL
   *
   * @param url - The URL to validate
   * @returns boolean - True if the URL is internal and safe to use
   */
  const isValidInternalUrl = useCallback((url: string) => {
    if (!url) return false;
    // Accept absolute paths as they are always internal
    if (url.startsWith("/")) return true;
    try {
      const urlObj = new URL(url, BASE_URL);
      // Prevent redirects to external domains by checking against our base URL
      return urlObj.origin === BASE_URL;
    } catch {
      return false;
    }
  }, []);

  const getHref = useCallback(
    (item: NavItemProps) => {
      // Get the current 'from' parameter
      const currentFrom = searchParams.get("from");
      const category = searchParams.get("category");

      // Handle settings navigation
      if (item.isSettingsButton) {
        // Include current path with category query parameter if present
        const currentPath = category
          ? `${pathname}?category=${encodeURIComponent(category)}`
          : pathname;
        return `${item.url}?from=${encodeURIComponent(currentPath)}`;
      }

      // Handle settings pages navigation
      if (item.isSettingsPage && currentFrom) {
        // Validate and sanitize the 'from' parameter to prevent open redirects
        const decodedFrom = decodeURIComponent(currentFrom);
        if (isValidInternalUrl(decodedFrom)) {
          return `${item.url}?from=${encodeURIComponent(currentFrom)}`;
        }
        // Fall back to safe default if URL validation fails
        return `${item.url}?from=/mail`;
      }

      // Handle back button with redirect protection
      if (item.isBackButton) {
        if (currentFrom) {
          const decodedFrom = decodeURIComponent(currentFrom);
          if (isValidInternalUrl(decodedFrom)) {
            return decodedFrom;
          }
        }
        // Fall back to safe default if URL is missing or invalid
        return "/mail";
      }

      // Handle category links
      if (category && item.url.includes("category=")) {
        return item.url;
      }

      return item.url;
    },
    [pathname, searchParams, isValidInternalUrl],
  );

  const isUrlActive = useCallback(
    (url: string) => {
      const urlObj = new URL(
        url,
        typeof window === "undefined" ? BASE_URL : window.location.origin,
      );
      const cleanPath = pathname.replace(/\/$/, "");
      const cleanUrl = urlObj.pathname.replace(/\/$/, "");

      if (cleanPath !== cleanUrl) return false;

      const urlParams = new URLSearchParams(urlObj.search);
      const currentParams = new URLSearchParams(searchParams);

      for (const [key, value] of urlParams) {
        if (currentParams.get(key) !== value) return false;
      }
      return true;
    },
    [pathname, searchParams],
  );

  return (
    <SidebarGroup className="space-y-2.5 py-0">
      <SidebarMenu className="space-y-3">
        {items.map((section) => (
          <Collapsible
            key={section.title}
            defaultOpen={section.isActive}
            className="group/collapsible"
          >
            <SidebarMenuItem>
              <CollapsibleTrigger asChild>
                {section.title && (
                  <SidebarGroupLabel className="mb-2">{section.title}</SidebarGroupLabel>
                )}
              </CollapsibleTrigger>
              <div className="space-y-1">
                {section.items.map((item) => (
                  <NavItem
                    key={item.url}
                    {...item}
                    isActive={isUrlActive(item.url)}
                    href={getHref(item)}
                  />
                ))}
              </div>
            </SidebarMenuItem>
          </Collapsible>
        ))}
      </SidebarMenu>
    </SidebarGroup>
  );
}

function NavItem(item: NavItemProps & { href: string }) {
  const iconRef = useRef<IconRefType>(null);

  if (item.disabled) {
    return (
      <SidebarMenuButton
        tooltip={item.title}
        className="flex cursor-not-allowed items-center opacity-50"
      >
        {item.icon && <item.icon ref={iconRef} className="relative mr-3 h-3 w-3.5" />}
        <p className="mt-0.5 text-[13px]">{item.title}</p>
      </SidebarMenuButton>
    );
  }

  return (
    <Collapsible defaultOpen={item.isActive}>
      <CollapsibleTrigger asChild>
        <Link
          href={item.href}
          onClick={item.onClick}
          onMouseEnter={() => iconRef.current?.startAnimation?.()}
          onMouseLeave={() => iconRef.current?.stopAnimation?.()}
        >
          <SidebarMenuButton
            tooltip={item.title}
            className={cn("flex items-center", item.isActive && "bg-accent text-accent-foreground")}
          >
            {item.icon && <item.icon ref={iconRef} className="relative mr-3 h-3 w-3.5" />}
            <p className="mt-0.5 text-[13px]">{item.title}</p>
          </SidebarMenuButton>
        </Link>
      </CollapsibleTrigger>
    </Collapsible>
  );
}

================
File: components/ui/nav-user.tsx
================
"use client";

import { Book, ChevronDown, HelpCircle, LogIn, LogOut, MoonIcon, UserPlus } from "lucide-react";
import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";

import {
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuSeparator,
  DropdownMenuTrigger,
} from "@/components/ui/dropdown-menu";
import { SidebarMenu, SidebarMenuItem, SidebarMenuButton } from "@/components/ui/sidebar";
import { useConnections } from "@/hooks/use-connections";
import { usePathname, useRouter } from "next/navigation";
import { signOut, useSession } from "@/lib/auth-client";
import { useEffect, useMemo, useState } from "react";
import { SunIcon } from "../icons/animated/sun";
import { useTheme } from "next-themes";
import { IConnection } from "@/types";
import { toast } from "sonner";
import axios from "axios";

export function NavUser() {
  const { data: session, refetch } = useSession();
  const router = useRouter();
  const { data: connections, isLoading, mutate } = useConnections();
  const pathname = usePathname();
  const [isRendered, setIsRendered] = useState(false);
  const { theme, resolvedTheme, setTheme } = useTheme();

  const activeAccount = useMemo(() => {
    if (!session) return null;
    return connections?.find((connection) => connection.id === session?.connectionId);
  }, [session, connections]);

  // Prevents hydration error
  useEffect(() => setIsRendered(true), []);

  async function handleThemeToggle() {
    const newTheme = theme === "dark" ? "light" : "dark";

    function update() {
      setTheme(newTheme);
    }

    if (document.startViewTransition && newTheme !== resolvedTheme) {
      document.documentElement.style.viewTransitionName = "theme-transition";
      await document.startViewTransition(update).finished;
      document.documentElement.style.viewTransitionName = "";
    } else {
      update();
    }
  }

  if (!isRendered) return null;

  const handleAccountSwitch = (connection: IConnection) => () => {
    return axios
      .put(`/api/v1/mail/connections/${connection.id}`, {
        method: "PUT",
        headers: {
          "Content-Type": "application/json",
        },
      })
      .then(refetch)
      .then(() => mutate())
      .catch((err) => {
        toast.error("Error switching connection", {
          description: err.response.data.message,
        });
      });
  };

  const handleLogout = async () => {
    toast.promise(signOut(), {
      loading: "Signing out...",
      success: () => "Signed out successfully!",
      error: "Error signing out",
    });
  };

  return (
    <DropdownMenu>
      <SidebarMenu>
        <SidebarMenuItem>
          <DropdownMenuTrigger asChild>
            <SidebarMenuButton
              size="lg"
              className="group mt-2 h-[32px] bg-transparent px-0 hover:bg-transparent data-[state=open]:text-sidebar-accent-foreground"
            >
              {isLoading ? (
                <>
                  <div className="size-8 animate-pulse rounded-lg bg-primary/10" />
                </>
              ) : (
                <>
                  <Avatar className="size-[32px] rounded-lg">
                    <AvatarImage
                      className="rounded-lg"
                      src={
                        (activeAccount?.picture ?? undefined) || (session?.user.image ?? undefined)
                      }
                      alt={activeAccount?.name || session?.user.name || "User"}
                    />
                    <AvatarFallback className="relative overflow-hidden rounded-lg bg-black dark:bg-white">
                      <span className="relative z-10 text-white dark:text-black">
                        {(activeAccount?.name || session?.user.name || "User")
                          .split(" ")
                          .map((n) => n[0])
                          .join("")
                          .toUpperCase()
                          .slice(0, 2)}
                      </span>
                    </AvatarFallback>
                  </Avatar>
                  <div className="flex min-w-0 flex-col gap-0.5 leading-none">
                    <span className="truncate font-medium tracking-tight">
                      {activeAccount?.name || session?.user.name || "User"}
                    </span>
                    <span className="truncate text-[11px] text-muted-foreground/70">
                      {activeAccount?.email || session?.user.email}
                    </span>
                  </div>
                  <ChevronDown className="ml-auto size-4 shrink-0 transition-transform duration-200 group-data-[state=open]:rotate-180" />
                </>
              )}
            </SidebarMenuButton>
          </DropdownMenuTrigger>
        </SidebarMenuItem>
      </SidebarMenu>
      <DropdownMenuContent
        className="ml-3 w-[--radix-dropdown-menu-trigger-width] min-w-56 font-medium"
        align="end"
        side={"bottom"}
        sideOffset={8}
      >
        <DropdownMenuItem onClick={() => router.push("/support")}>
          <div className="flex cursor-pointer items-center gap-2 text-[13px]">
            <HelpCircle size={16} strokeWidth={2} className="opacity-60" aria-hidden="true" />
            <p className="text-[13px] opacity-60">Customer Support</p>
          </div>
        </DropdownMenuItem>
        <DropdownMenuItem
          onClick={() => window.open("https://github.com/nizzyabi/mail0", "_blank")}
        >
          <div className="flex cursor-pointer items-center gap-2 text-[13px]">
            <Book size={16} strokeWidth={2} className="opacity-60" aria-hidden="true" />
            <p className="text-[13px] opacity-60">Documentation</p>
          </div>
        </DropdownMenuItem>
        <DropdownMenuItem onClick={handleThemeToggle}>
          <div className="flex cursor-pointer items-center gap-2 text-[13px]">
            {theme === "dark" ? (
              <MoonIcon className="opacity-60" />
            ) : (
              <SunIcon className="opacity-60" />
            )}
            <p className="text-[13px] opacity-60">App Theme</p>
          </div>
        </DropdownMenuItem>
        <DropdownMenuSeparator />
        <div className="space-y-1">
          {session ? (
            <>
              <div className="px-1 py-1.5 text-[11px] text-muted-foreground">Accounts</div>
              {connections?.map((connection) => (
                <DropdownMenuItem
                  key={connection.id}
                  onClick={handleAccountSwitch(connection)}
                  className={`flex cursor-pointer items-center gap-4 py-0.5 ${
                    connection.id === session?.connectionId ? "bg-accent" : ""
                  }`}
                >
                  <Avatar className="size-5 rounded-lg">
                    <AvatarImage
                      className="rounded-lg"
                      src={connection.picture || undefined}
                      alt={connection.name || connection.email}
                    />
                    <AvatarFallback className="rounded-lg text-[10px]">
                      {(connection.name || connection.email)
                        .split(" ")
                        .map((n) => n[0])
                        .join("")
                        .toUpperCase()
                        .slice(0, 2)}
                    </AvatarFallback>
                  </Avatar>
                  <div className="-space-y-1">
                    <p className="text-[12px]">{connection.name || connection.email}</p>
                    {connection.name && (
                      <p className="text-[12px] text-muted-foreground">
                        {connection.email.length > 25
                          ? `${connection.email.slice(0, 25)}...`
                          : connection.email}
                      </p>
                    )}
                  </div>
                </DropdownMenuItem>
              ))}
              <DropdownMenuItem
                className="mt-1 cursor-pointer"
                onClick={() => router.push(`/settings/connections?from=${pathname}`)}
              >
                <div className="flex items-center gap-2">
                  <UserPlus size={16} strokeWidth={2} className="opacity-60" aria-hidden="true" />
                  <p className="text-[13px] opacity-60">Add email</p>
                </div>
              </DropdownMenuItem>
              <DropdownMenuSeparator />
              <DropdownMenuItem className="cursor-pointer" onClick={handleLogout}>
                <LogOut size={16} strokeWidth={2} className="mr-1 opacity-60" aria-hidden="true" />
                <p className="text-[13px] opacity-60">Log out</p>
              </DropdownMenuItem>
            </>
          ) : (
            <>
              <DropdownMenuItem className="cursor-pointer" onClick={() => router.push("/login")}>
                <LogIn size={16} strokeWidth={2} className="opacity-60" aria-hidden="true" />
                <p className="text-[13px] opacity-60">Sign in</p>
              </DropdownMenuItem>
            </>
          )}
        </div>
      </DropdownMenuContent>
    </DropdownMenu>
  );
}

================
File: components/ui/popover.tsx
================
"use client";

import * as PopoverPrimitive from "@radix-ui/react-popover";
import * as React from "react";

import { cn } from "@/lib/utils";

const Popover = PopoverPrimitive.Root;

const PopoverTrigger = PopoverPrimitive.Trigger;

const PopoverContent = React.forwardRef<
  React.ElementRef<typeof PopoverPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>
>(({ className, align = "center", sideOffset = 4, ...props }, ref) => (
  <PopoverPrimitive.Portal>
    <PopoverPrimitive.Content
      ref={ref}
      align={align}
      sideOffset={sideOffset}
      className={cn(
        "z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
        className,
      )}
      {...props}
    />
  </PopoverPrimitive.Portal>
));
PopoverContent.displayName = PopoverPrimitive.Content.displayName;

export { Popover, PopoverTrigger, PopoverContent };

================
File: components/ui/progress.tsx
================
"use client";

import * as ProgressPrimitive from "@radix-ui/react-progress";
import * as React from "react";

import { cn } from "@/lib/utils";

const Progress = React.forwardRef<
  React.ElementRef<typeof ProgressPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root> & {
    indicatorClassName?: string;
  }
>(({ className, value, indicatorClassName, ...props }, ref) => (
  <ProgressPrimitive.Root
    ref={ref}
    className={cn("relative h-2 w-full overflow-hidden rounded-full", className)}
    {...props}
  >
    <ProgressPrimitive.Indicator
      className={cn("h-full w-full flex-1 transition-all", indicatorClassName)}
      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}
    />
  </ProgressPrimitive.Root>
));
Progress.displayName = ProgressPrimitive.Root.displayName;

export { Progress };

================
File: components/ui/radio-group.tsx
================
"use client";

import * as RadioGroupPrimitive from "@radix-ui/react-radio-group";
import { Circle } from "lucide-react";
import * as React from "react";

import { cn } from "@/lib/utils";

const RadioGroup = React.forwardRef<
  React.ElementRef<typeof RadioGroupPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>
>(({ className, ...props }, ref) => {
  return <RadioGroupPrimitive.Root className={cn("grid gap-2", className)} {...props} ref={ref} />;
});
RadioGroup.displayName = RadioGroupPrimitive.Root.displayName;

const RadioGroupItem = React.forwardRef<
  React.ElementRef<typeof RadioGroupPrimitive.Item>,
  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>
>(({ className, ...props }, ref) => {
  return (
    <RadioGroupPrimitive.Item
      ref={ref}
      className={cn(
        "aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50",
        className,
      )}
      {...props}
    >
      <RadioGroupPrimitive.Indicator className="flex items-center justify-center">
        <Circle className="h-2.5 w-2.5 fill-current text-current" />
      </RadioGroupPrimitive.Indicator>
    </RadioGroupPrimitive.Item>
  );
});
RadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName;

export { RadioGroup, RadioGroupItem };

================
File: components/ui/resizable.tsx
================
"use client";

import * as ResizablePrimitive from "react-resizable-panels";
import { GripVertical } from "lucide-react";

import { cn } from "@/lib/utils";

const ResizablePanelGroup = ({
  className,
  ...props
}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (
  <ResizablePrimitive.PanelGroup
    className={cn("flex h-full w-full data-[panel-group-direction=vertical]:flex-col", className)}
    {...props}
  />
);

const ResizablePanel = ResizablePrimitive.Panel;

const ResizableHandle = ({
  withHandle,
  className,
  ...props
}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {
  withHandle?: boolean;
}) => (
  <ResizablePrimitive.PanelResizeHandle
    className={cn(
      "relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90",
      className,
    )}
    {...props}
  >
    {withHandle && (
      <div className="z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border">
        <GripVertical className="h-2.5 w-2.5" />
      </div>
    )}
  </ResizablePrimitive.PanelResizeHandle>
);

export { ResizablePanelGroup, ResizablePanel, ResizableHandle };

================
File: components/ui/responsive-modal.tsx
================
"use client";

import * as React from "react";

import {
  Dialog,
  DialogClose,
  DialogContent,
  DialogDescription,
  DialogFooter,
  DialogHeader,
  DialogTitle,
  DialogTrigger,
} from "@/components/ui/dialog";
import {
  Drawer,
  DrawerClose,
  DrawerContent,
  DrawerDescription,
  DrawerFooter,
  DrawerHeader,
  DrawerTitle,
  DrawerTrigger,
} from "@/components/ui/drawer";
import { useMediaQuery } from "@/hooks/use-media-query";
import { cn } from "@/lib/utils";

interface BaseProps {
  children: React.ReactNode;
}

interface RootCredenzaProps extends BaseProps {
  open?: boolean;
  onOpenChange?: (open: boolean) => void;
}

interface CredenzaProps extends BaseProps {
  className?: string;
  asChild?: true;
}

const CredenzaContext = React.createContext<{ isDesktop: boolean }>({
  isDesktop: false,
});

const useCredenzaContext = () => {
  const context = React.useContext(CredenzaContext);
  if (!context) {
    throw new Error("Credenza components cannot be rendered outside the Credenza Context");
  }
  return context;
};

const Credenza = ({ children, ...props }: RootCredenzaProps) => {
  const isDesktop = useMediaQuery("(min-width: 768px)");
  const Credenza = isDesktop ? Dialog : Drawer;

  return (
    <CredenzaContext.Provider value={{ isDesktop }}>
      <Credenza {...props} {...(!isDesktop && { autoFocus: true })}>
        {children}
      </Credenza>
    </CredenzaContext.Provider>
  );
};

const CredenzaTrigger = ({ className, children, ...props }: CredenzaProps) => {
  const { isDesktop } = useCredenzaContext();
  const CredenzaTrigger = isDesktop ? DialogTrigger : DrawerTrigger;

  return (
    <CredenzaTrigger className={className} {...props}>
      {children}
    </CredenzaTrigger>
  );
};

const CredenzaClose = ({ className, children, ...props }: CredenzaProps) => {
  const { isDesktop } = useCredenzaContext();
  const CredenzaClose = isDesktop ? DialogClose : DrawerClose;

  return (
    <CredenzaClose className={className} {...props}>
      {children}
    </CredenzaClose>
  );
};

const CredenzaContent = ({ className, children, ...props }: CredenzaProps) => {
  const { isDesktop } = useCredenzaContext();
  const CredenzaContent = isDesktop ? DialogContent : DrawerContent;

  return (
    <CredenzaContent className={className} {...props}>
      {children}
    </CredenzaContent>
  );
};

const CredenzaDescription = ({ className, children, ...props }: CredenzaProps) => {
  const { isDesktop } = useCredenzaContext();
  const CredenzaDescription = isDesktop ? DialogDescription : DrawerDescription;

  return (
    <CredenzaDescription className={className} {...props}>
      {children}
    </CredenzaDescription>
  );
};

const CredenzaHeader = ({ className, children, ...props }: CredenzaProps) => {
  const { isDesktop } = useCredenzaContext();
  const CredenzaHeader = isDesktop ? DialogHeader : DrawerHeader;

  return (
    <CredenzaHeader className={className} {...props}>
      {children}
    </CredenzaHeader>
  );
};

const CredenzaTitle = ({ className, children, ...props }: CredenzaProps) => {
  const { isDesktop } = useCredenzaContext();
  const CredenzaTitle = isDesktop ? DialogTitle : DrawerTitle;

  return (
    <CredenzaTitle className={className} {...props}>
      {children}
    </CredenzaTitle>
  );
};

const CredenzaBody = ({ className, children, ...props }: CredenzaProps) => {
  return (
    <div className={cn("px-4 md:px-0", className)} {...props}>
      {children}
    </div>
  );
};

const CredenzaFooter = ({ className, children, ...props }: CredenzaProps) => {
  const { isDesktop } = useCredenzaContext();
  const CredenzaFooter = isDesktop ? DialogFooter : DrawerFooter;

  return (
    <CredenzaFooter className={className} {...props}>
      {children}
    </CredenzaFooter>
  );
};

export {
  Credenza,
  CredenzaTrigger,
  CredenzaClose,
  CredenzaContent,
  CredenzaDescription,
  CredenzaHeader,
  CredenzaTitle,
  CredenzaBody,
  CredenzaFooter,
};

================
File: components/ui/scroll-area.tsx
================
"use client";

import * as ScrollAreaPrimitive from "@radix-ui/react-scroll-area";
import * as React from "react";

import { cn } from "@/lib/utils";

const ScrollArea = React.forwardRef<
  React.ElementRef<typeof ScrollAreaPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>
>(({ className, children, ...props }, ref) => (
  <ScrollAreaPrimitive.Root
    ref={ref}
    className={cn("relative overflow-hidden", className)}
    {...props}
  >
    <ScrollAreaPrimitive.Viewport className="h-full w-full rounded-[inherit]">
      {children}
    </ScrollAreaPrimitive.Viewport>
    <ScrollBar />
    <ScrollAreaPrimitive.Corner />
  </ScrollAreaPrimitive.Root>
));
ScrollArea.displayName = ScrollAreaPrimitive.Root.displayName;

const ScrollBar = React.forwardRef<
  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,
  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>
>(({ className, orientation = "vertical", ...props }, ref) => (
  <ScrollAreaPrimitive.ScrollAreaScrollbar
    ref={ref}
    orientation={orientation}
    className={cn(
      "flex touch-none select-none transition-colors",
      orientation === "vertical" && "h-full w-2.5 border-l border-l-transparent p-[1px]",
      orientation === "horizontal" && "h-2.5 flex-col border-t border-t-transparent p-[1px]",
      className,
    )}
    {...props}
  >
    <ScrollAreaPrimitive.ScrollAreaThumb className="relative flex-1 rounded-full bg-border" />
  </ScrollAreaPrimitive.ScrollAreaScrollbar>
));
ScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName;

export { ScrollArea, ScrollBar };

================
File: components/ui/select.tsx
================
"use client";

import { Check, ChevronDown, ChevronUp } from "lucide-react";
import * as SelectPrimitive from "@radix-ui/react-select";
import * as React from "react";

import { cn } from "@/lib/utils";

const Select = SelectPrimitive.Root;

const SelectGroup = SelectPrimitive.Group;

const SelectValue = SelectPrimitive.Value;

const SelectTrigger = React.forwardRef<
  React.ElementRef<typeof SelectPrimitive.Trigger>,
  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>
>(({ className, children, ...props }, ref) => (
  <SelectPrimitive.Trigger
    ref={ref}
    className={cn(
      "flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1",
      className,
    )}
    {...props}
  >
    {children}
    <SelectPrimitive.Icon asChild>
      <ChevronDown className="h-4 w-4 opacity-50" />
    </SelectPrimitive.Icon>
  </SelectPrimitive.Trigger>
));
SelectTrigger.displayName = SelectPrimitive.Trigger.displayName;

const SelectScrollUpButton = React.forwardRef<
  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,
  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>
>(({ className, ...props }, ref) => (
  <SelectPrimitive.ScrollUpButton
    ref={ref}
    className={cn("flex cursor-default items-center justify-center py-1", className)}
    {...props}
  >
    <ChevronUp className="h-4 w-4" />
  </SelectPrimitive.ScrollUpButton>
));
SelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName;

const SelectScrollDownButton = React.forwardRef<
  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,
  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>
>(({ className, ...props }, ref) => (
  <SelectPrimitive.ScrollDownButton
    ref={ref}
    className={cn("flex cursor-default items-center justify-center py-1", className)}
    {...props}
  >
    <ChevronDown className="h-4 w-4" />
  </SelectPrimitive.ScrollDownButton>
));
SelectScrollDownButton.displayName = SelectPrimitive.ScrollDownButton.displayName;

const SelectContent = React.forwardRef<
  React.ElementRef<typeof SelectPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>
>(({ className, children, position = "popper", ...props }, ref) => (
  <SelectPrimitive.Portal>
    <SelectPrimitive.Content
      ref={ref}
      className={cn(
        "relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
        position === "popper" &&
          "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",
        className,
      )}
      position={position}
      {...props}
    >
      <SelectScrollUpButton />
      <SelectPrimitive.Viewport
        className={cn(
          "p-1",
          position === "popper" &&
            "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]",
        )}
      >
        {children}
      </SelectPrimitive.Viewport>
      <SelectScrollDownButton />
    </SelectPrimitive.Content>
  </SelectPrimitive.Portal>
));
SelectContent.displayName = SelectPrimitive.Content.displayName;

const SelectLabel = React.forwardRef<
  React.ElementRef<typeof SelectPrimitive.Label>,
  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>
>(({ className, ...props }, ref) => (
  <SelectPrimitive.Label
    ref={ref}
    className={cn("py-1.5 pl-8 pr-2 text-sm font-semibold", className)}
    {...props}
  />
));
SelectLabel.displayName = SelectPrimitive.Label.displayName;

const SelectItem = React.forwardRef<
  React.ElementRef<typeof SelectPrimitive.Item>,
  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>
>(({ className, children, ...props }, ref) => (
  <SelectPrimitive.Item
    ref={ref}
    className={cn(
      "relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      className,
    )}
    {...props}
  >
    <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
      <SelectPrimitive.ItemIndicator>
        <Check className="h-4 w-4" />
      </SelectPrimitive.ItemIndicator>
    </span>

    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>
  </SelectPrimitive.Item>
));
SelectItem.displayName = SelectPrimitive.Item.displayName;

const SelectSeparator = React.forwardRef<
  React.ElementRef<typeof SelectPrimitive.Separator>,
  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>
>(({ className, ...props }, ref) => (
  <SelectPrimitive.Separator
    ref={ref}
    className={cn("-mx-1 my-1 h-px bg-muted", className)}
    {...props}
  />
));
SelectSeparator.displayName = SelectPrimitive.Separator.displayName;

export {
  Select,
  SelectGroup,
  SelectValue,
  SelectTrigger,
  SelectContent,
  SelectLabel,
  SelectItem,
  SelectSeparator,
  SelectScrollUpButton,
  SelectScrollDownButton,
};

================
File: components/ui/separator.tsx
================
"use client";

import * as SeparatorPrimitive from "@radix-ui/react-separator";
import * as React from "react";

import { cn } from "@/lib/utils";

const Separator = React.forwardRef<
  React.ElementRef<typeof SeparatorPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>
>(({ className, orientation = "horizontal", decorative = true, ...props }, ref) => (
  <SeparatorPrimitive.Root
    ref={ref}
    decorative={decorative}
    orientation={orientation}
    className={cn(
      "shrink-0 bg-border",
      orientation === "horizontal" ? "h-[1px] w-full" : "h-full w-[1px]",
      className,
    )}
    {...props}
  />
));
Separator.displayName = SeparatorPrimitive.Root.displayName;

export { Separator };

================
File: components/ui/sheet.tsx
================
"use client";

import { cva, type VariantProps } from "class-variance-authority";
import * as SheetPrimitive from "@radix-ui/react-dialog";
import { X } from "lucide-react";
import * as React from "react";

import { cn } from "@/lib/utils";

const Sheet = SheetPrimitive.Root;

const SheetTrigger = SheetPrimitive.Trigger;

const SheetClose = SheetPrimitive.Close;

const SheetPortal = SheetPrimitive.Portal;

const SheetOverlay = React.forwardRef<
  React.ElementRef<typeof SheetPrimitive.Overlay>,
  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>
>(({ className, ...props }, ref) => (
  <SheetPrimitive.Overlay
    className={cn(
      "fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",
      className,
    )}
    {...props}
    ref={ref}
  />
));
SheetOverlay.displayName = SheetPrimitive.Overlay.displayName;

const sheetVariants = cva(
  "fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500",
  {
    variants: {
      side: {
        top: "inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top",
        bottom:
          "inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom",
        left: "inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm",
        right:
          "inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm",
      },
    },
    defaultVariants: {
      side: "right",
    },
  },
);

interface SheetContentProps
  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,
    VariantProps<typeof sheetVariants> {}

const SheetContent = React.forwardRef<
  React.ElementRef<typeof SheetPrimitive.Content>,
  SheetContentProps
>(({ side = "right", className, children, ...props }, ref) => (
  <SheetPortal>
    <SheetOverlay />
    <SheetPrimitive.Content ref={ref} className={cn(sheetVariants({ side }), className)} {...props}>
      {children}
      <SheetPrimitive.Close className="absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary">
        <X className="h-4 w-4" />
        <span className="sr-only">Close</span>
      </SheetPrimitive.Close>
    </SheetPrimitive.Content>
  </SheetPortal>
));
SheetContent.displayName = SheetPrimitive.Content.displayName;

const SheetHeader = ({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) => (
  <div className={cn("flex flex-col space-y-2 text-center sm:text-left", className)} {...props} />
);
SheetHeader.displayName = "SheetHeader";

const SheetFooter = ({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) => (
  <div
    className={cn("flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2", className)}
    {...props}
  />
);
SheetFooter.displayName = "SheetFooter";

const SheetTitle = React.forwardRef<
  React.ElementRef<typeof SheetPrimitive.Title>,
  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>
>(({ className, ...props }, ref) => (
  <SheetPrimitive.Title
    ref={ref}
    className={cn("text-lg font-semibold text-foreground", className)}
    {...props}
  />
));
SheetTitle.displayName = SheetPrimitive.Title.displayName;

const SheetDescription = React.forwardRef<
  React.ElementRef<typeof SheetPrimitive.Description>,
  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>
>(({ className, ...props }, ref) => (
  <SheetPrimitive.Description
    ref={ref}
    className={cn("text-sm text-muted-foreground", className)}
    {...props}
  />
));
SheetDescription.displayName = SheetPrimitive.Description.displayName;

export {
  Sheet,
  SheetPortal,
  SheetOverlay,
  SheetTrigger,
  SheetClose,
  SheetContent,
  SheetHeader,
  SheetFooter,
  SheetTitle,
  SheetDescription,
};

================
File: components/ui/sidebar-toggle.tsx
================
"use client";

import type { ComponentProps } from "react";
import { PanelLeft } from "lucide-react";

import { type SidebarTrigger, useSidebar } from "@/components/ui/sidebar";
import { Button } from "@/components/ui/button";
import { cn } from "@/lib/utils";

export function SidebarToggle({ className }: ComponentProps<typeof SidebarTrigger>) {
  const { toggleSidebar } = useSidebar();

  return (
    <Button onClick={toggleSidebar} variant="ghost" className={cn("md:h-fit md:px-2", className)}>
      <PanelLeft size={20} />
    </Button>
  );
}

================
File: components/ui/sidebar.tsx
================
"use client";

import { Sheet, SheetContent, SheetDescription, SheetTitle } from "@/components/ui/sheet";
import { Tooltip, TooltipContent, TooltipTrigger } from "@/components/ui/tooltip";
import { SidebarProvider } from "../context/sidebar-context";
import { VariantProps, cva } from "class-variance-authority";
import { useSidebar } from "../context/sidebar-context";
import { SIDEBAR_WIDTH_MOBILE } from "@/lib/constants";
import { Separator } from "@/components/ui/separator";
import { Skeleton } from "@/components/ui/skeleton";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Slot } from "@radix-ui/react-slot";
import { Menu } from "lucide-react";
import { cn } from "@/lib/utils";
import * as React from "react";

const Sidebar = React.forwardRef<
  HTMLDivElement,
  React.ComponentProps<"div"> & {
    side?: "left" | "right";
    variant?: "sidebar" | "floating" | "inset";
    collapsible?: "offcanvas" | "icon" | "none";
    collapsed?: boolean;
  }
>(
  (
    {
      side = "left",
      variant = "sidebar",
      collapsible = "offcanvas",
      className,
      children,
      ...props
    },
    ref,
  ) => {
    const { isMobile, state, openMobile, setOpenMobile } = useSidebar();

    if (collapsible === "none") {
      return (
        <div
          className={cn(
            "flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground",
            className,
          )}
          ref={ref}
          {...props}
        >
          {children}
        </div>
      );
    }

    if (isMobile) {
      return (
        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>
          <SheetContent
            data-sidebar="sidebar"
            data-mobile="true"
            className="w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden"
            style={
              {
                "--sidebar-width": SIDEBAR_WIDTH_MOBILE,
              } as React.CSSProperties
            }
            side={side}
          >
            <SheetTitle className="sr-only">Navigation Menu</SheetTitle>
            <SheetDescription className="sr-only">
              Application navigation sidebar containing menu items and actions
            </SheetDescription>
            <div className="flex h-full w-full flex-col">{children}</div>
          </SheetContent>
        </Sheet>
      );
    }

    return (
      <div
        ref={ref}
        className="group peer hidden text-sidebar-foreground md:block"
        data-state={state}
        data-collapsible={state === "collapsed" ? collapsible : ""}
        data-variant={variant}
        data-side={side}
      >
        {/* This is what handles the sidebar gap on desktop */}
        <div
          className={cn(
            "relative h-svh w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear",
            "group-data-[collapsible=offcanvas]:w-0",
            "group-data-[side=right]:rotate-180",
            variant === "floating" || variant === "inset"
              ? "group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]"
              : "group-data-[collapsible=icon]:w-[--sidebar-width-icon]",
          )}
        />
        <div
          className={cn(
            "fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex",
            side === "left"
              ? "left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]"
              : "right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]",
            // Adjust the padding for floating and inset variants.
            variant === "floating" || variant === "inset"
              ? "p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]"
              : "group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=right]:border-l",
            className,
          )}
          {...props}
        >
          <div
            data-sidebar="sidebar"
            className="flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow"
          >
            {children}
          </div>
        </div>
      </div>
    );
  },
);
Sidebar.displayName = "Sidebar";

const SidebarTrigger = React.forwardRef<
  React.ElementRef<typeof Button>,
  React.ComponentProps<typeof Button>
>(({ className, onClick, ...props }, ref) => {
  const { toggleSidebar } = useSidebar();

  return (
    <Button
      ref={ref}
      data-sidebar="trigger"
      variant="ghost"
      size="icon"
      className={cn("h-7 w-7", className)}
      onClick={(event) => {
        onClick?.(event);
        toggleSidebar();
      }}
      {...props}
    >
      <Menu className="h-12" />
      <span className="sr-only">Toggle Sidebar</span>
    </Button>
  );
});
SidebarTrigger.displayName = "SidebarTrigger";

const SidebarRail = React.forwardRef<HTMLButtonElement, React.ComponentProps<"button">>(
  ({ className, ...props }, ref) => {
    const { toggleSidebar } = useSidebar();

    return (
      <button
        ref={ref}
        data-sidebar="rail"
        aria-label="Toggle Sidebar"
        tabIndex={-1}
        onClick={toggleSidebar}
        title="Toggle Sidebar"
        className={cn(
          "absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex",
          "[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize",
          "[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize",
          "group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar",
          "[[data-side=left][data-collapsible=offcanvas]_&]:-right-2",
          "[[data-side=right][data-collapsible=offcanvas]_&]:-left-2",
          className,
        )}
        {...props}
      />
    );
  },
);
SidebarRail.displayName = "SidebarRail";

const SidebarInset = React.forwardRef<HTMLDivElement, React.ComponentProps<"main">>(
  ({ className, ...props }, ref) => {
    return (
      <main
        ref={ref}
        className={cn(
          "relative flex min-h-svh flex-1 flex-col bg-background",
          "peer-data-[variant=inset]:min-h-[calc(100svh-theme(spacing.4))] md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow",
          className,
        )}
        {...props}
      />
    );
  },
);
SidebarInset.displayName = "SidebarInset";

const SidebarInput = React.forwardRef<
  React.ElementRef<typeof Input>,
  React.ComponentProps<typeof Input>
>(({ className, ...props }, ref) => {
  return (
    <Input
      ref={ref}
      data-sidebar="input"
      className={cn(
        "h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring",
        className,
      )}
      {...props}
    />
  );
});
SidebarInput.displayName = "SidebarInput";

const SidebarHeader = React.forwardRef<HTMLDivElement, React.ComponentProps<"div">>(
  ({ className, ...props }, ref) => {
    return (
      <div
        ref={ref}
        data-sidebar="header"
        className={cn("flex flex-col gap-2 p-2", className)}
        {...props}
      />
    );
  },
);
SidebarHeader.displayName = "SidebarHeader";

const SidebarFooter = React.forwardRef<HTMLDivElement, React.ComponentProps<"div">>(
  ({ className, ...props }, ref) => {
    return (
      <div
        ref={ref}
        data-sidebar="footer"
        className={cn("flex flex-col gap-2 p-2", className)}
        {...props}
      />
    );
  },
);
SidebarFooter.displayName = "SidebarFooter";

const SidebarSeparator = React.forwardRef<
  React.ElementRef<typeof Separator>,
  React.ComponentProps<typeof Separator>
>(({ className, ...props }, ref) => {
  return (
    <Separator
      ref={ref}
      data-sidebar="separator"
      className={cn("mx-2 w-auto bg-sidebar-border", className)}
      {...props}
    />
  );
});
SidebarSeparator.displayName = "SidebarSeparator";

const SidebarContent = React.forwardRef<HTMLDivElement, React.ComponentProps<"div">>(
  ({ className, ...props }, ref) => {
    return (
      <div
        ref={ref}
        data-sidebar="content"
        className={cn(
          "flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden",
          className,
        )}
        {...props}
      />
    );
  },
);
SidebarContent.displayName = "SidebarContent";

const SidebarGroup = React.forwardRef<HTMLDivElement, React.ComponentProps<"div">>(
  ({ className, ...props }, ref) => {
    return (
      <div
        ref={ref}
        data-sidebar="group"
        className={cn("relative flex w-full min-w-0 flex-col p-2", className)}
        {...props}
      />
    );
  },
);
SidebarGroup.displayName = "SidebarGroup";

const SidebarGroupLabel = React.forwardRef<
  HTMLDivElement,
  React.ComponentProps<"div"> & { asChild?: boolean }
>(({ className, asChild = false, ...props }, ref) => {
  const Comp = asChild ? Slot : "div";

  return (
    <Comp
      ref={ref}
      data-sidebar="group-label"
      className={cn(
        "flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opa] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0",
        "group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0",
        className,
      )}
      {...props}
    />
  );
});
SidebarGroupLabel.displayName = "SidebarGroupLabel";

const SidebarGroupAction = React.forwardRef<
  HTMLButtonElement,
  React.ComponentProps<"button"> & { asChild?: boolean }
>(({ className, asChild = false, ...props }, ref) => {
  const Comp = asChild ? Slot : "button";

  return (
    <Comp
      ref={ref}
      data-sidebar="group-action"
      className={cn(
        "absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0",
        // Increases the hit area of the button on mobile.
        "after:absolute after:-inset-2 after:md:hidden",
        "group-data-[collapsible=icon]:hidden",
        className,
      )}
      {...props}
    />
  );
});
SidebarGroupAction.displayName = "SidebarGroupAction";

const SidebarGroupContent = React.forwardRef<HTMLDivElement, React.ComponentProps<"div">>(
  ({ className, ...props }, ref) => (
    <div
      ref={ref}
      data-sidebar="group-content"
      className={cn("w-full text-sm", className)}
      {...props}
    />
  ),
);
SidebarGroupContent.displayName = "SidebarGroupContent";

const SidebarMenu = React.forwardRef<HTMLUListElement, React.ComponentProps<"ul">>(
  ({ className, ...props }, ref) => (
    <ul
      ref={ref}
      data-sidebar="menu"
      className={cn("flex w-full min-w-0 flex-col gap-1", className)}
      {...props}
    />
  ),
);
SidebarMenu.displayName = "SidebarMenu";

const SidebarMenuItem = React.forwardRef<HTMLLIElement, React.ComponentProps<"li">>(
  ({ className, ...props }, ref) => (
    <li
      ref={ref}
      data-sidebar="menu-item"
      className={cn("group/menu-item relative", className)}
      {...props}
    />
  ),
);
SidebarMenuItem.displayName = "SidebarMenuItem";

const sidebarMenuButtonVariants = cva(
  "peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-lg p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0",
  {
    variants: {
      variant: {
        default: "hover:bg-sidebar-accent hover:text-sidebar-accent-foreground",
        outline:
          "bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]",
      },
      size: {
        default: "h-8 text-sm",
        sm: "h-7 text-xs",
        lg: "h-12 text-sm group-data-[collapsible=icon]:!p-0",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  },
);

const SidebarMenuButton = React.forwardRef<
  HTMLButtonElement,
  React.ComponentProps<"button"> & {
    asChild?: boolean;
    isActive?: boolean;
    tooltip?: string | React.ComponentProps<typeof TooltipContent>;
  } & VariantProps<typeof sidebarMenuButtonVariants>
>(
  (
    {
      asChild = false,
      isActive = false,
      variant = "default",
      size = "default",
      tooltip,
      className,
      ...props
    },
    ref,
  ) => {
    const Comp = asChild ? Slot : "button";
    const { isMobile, state } = useSidebar();

    const button = (
      <Comp
        ref={ref}
        data-sidebar="menu-button"
        data-size={size}
        data-active={isActive}
        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}
        {...props}
      />
    );

    if (!tooltip) {
      return button;
    }

    if (typeof tooltip === "string") {
      tooltip = {
        children: tooltip,
      };
    }

    return (
      <Tooltip>
        <TooltipTrigger asChild>{button}</TooltipTrigger>
        <TooltipContent
          side="right"
          align="center"
          hidden={state !== "collapsed" || isMobile}
          {...tooltip}
        />
      </Tooltip>
    );
  },
);
SidebarMenuButton.displayName = "SidebarMenuButton";

const SidebarMenuAction = React.forwardRef<
  HTMLButtonElement,
  React.ComponentProps<"button"> & {
    asChild?: boolean;
    showOnHover?: boolean;
  }
>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {
  const Comp = asChild ? Slot : "button";

  return (
    <Comp
      ref={ref}
      data-sidebar="menu-action"
      className={cn(
        "absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0",
        // Increases the hit area of the button on mobile.
        "after:absolute after:-inset-2 after:md:hidden",
        "peer-data-[size=sm]/menu-button:top-1",
        "peer-data-[size=default]/menu-button:top-1.5",
        "peer-data-[size=lg]/menu-button:top-2.5",
        "group-data-[collapsible=icon]:hidden",
        showOnHover &&
          "group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0",
        className,
      )}
      {...props}
    />
  );
});
SidebarMenuAction.displayName = "SidebarMenuAction";

const SidebarMenuBadge = React.forwardRef<HTMLDivElement, React.ComponentProps<"div">>(
  ({ className, ...props }, ref) => (
    <div
      ref={ref}
      data-sidebar="menu-badge"
      className={cn(
        "pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground",
        "peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground",
        "peer-data-[size=sm]/menu-button:top-1",
        "peer-data-[size=default]/menu-button:top-1.5",
        "peer-data-[size=lg]/menu-button:top-2.5",
        "group-data-[collapsible=icon]:hidden",
        className,
      )}
      {...props}
    />
  ),
);
SidebarMenuBadge.displayName = "SidebarMenuBadge";

const SidebarMenuSkeleton = React.forwardRef<
  HTMLDivElement,
  React.ComponentProps<"div"> & {
    showIcon?: boolean;
  }
>(({ className, showIcon = false, ...props }, ref) => {
  // Random width between 50 to 90%.
  const width = React.useMemo(() => {
    return `${Math.floor(Math.random() * 40) + 50}%`;
  }, []);

  return (
    <div
      ref={ref}
      data-sidebar="menu-skeleton"
      className={cn("flex h-8 items-center gap-2 rounded-md px-2", className)}
      {...props}
    >
      {showIcon && <Skeleton className="size-4 rounded-md" data-sidebar="menu-skeleton-icon" />}
      <Skeleton
        className="h-4 max-w-[--skeleton-width] flex-1"
        data-sidebar="menu-skeleton-text"
        style={
          {
            "--skeleton-width": width,
          } as React.CSSProperties
        }
      />
    </div>
  );
});
SidebarMenuSkeleton.displayName = "SidebarMenuSkeleton";

const SidebarMenuSub = React.forwardRef<HTMLUListElement, React.ComponentProps<"ul">>(
  ({ className, ...props }, ref) => (
    <ul
      ref={ref}
      data-sidebar="menu-sub"
      className={cn(
        "mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5",
        "group-data-[collapsible=icon]:hidden",
        className,
      )}
      {...props}
    />
  ),
);
SidebarMenuSub.displayName = "SidebarMenuSub";

const SidebarMenuSubItem = React.forwardRef<HTMLLIElement, React.ComponentProps<"li">>(
  ({ ...props }, ref) => <li ref={ref} {...props} />,
);
SidebarMenuSubItem.displayName = "SidebarMenuSubItem";

const SidebarMenuSubButton = React.forwardRef<
  HTMLAnchorElement,
  React.ComponentProps<"a"> & {
    asChild?: boolean;
    size?: "sm" | "md";
    isActive?: boolean;
  }
>(({ asChild = false, size = "md", isActive, className, ...props }, ref) => {
  const Comp = asChild ? Slot : "a";

  return (
    <Comp
      ref={ref}
      data-sidebar="menu-sub-button"
      data-size={size}
      data-active={isActive}
      className={cn(
        "flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground",
        "data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground",
        size === "sm" && "text-xs",
        size === "md" && "text-sm",
        "group-data-[collapsible=icon]:hidden",
        className,
      )}
      {...props}
    />
  );
});
SidebarMenuSubButton.displayName = "SidebarMenuSubButton";

export {
  Sidebar,
  SidebarContent,
  SidebarFooter,
  SidebarGroup,
  SidebarGroupAction,
  SidebarGroupContent,
  SidebarGroupLabel,
  SidebarHeader,
  SidebarInput,
  SidebarInset,
  SidebarMenu,
  SidebarMenuAction,
  SidebarMenuBadge,
  SidebarMenuButton,
  SidebarMenuItem,
  SidebarMenuSkeleton,
  SidebarMenuSub,
  SidebarMenuSubButton,
  SidebarMenuSubItem,
  SidebarProvider,
  SidebarRail,
  SidebarSeparator,
  SidebarTrigger,
  useSidebar,
};

================
File: components/ui/skeleton.tsx
================
import { cn } from "@/lib/utils";

function Skeleton({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) {
  return <div className={cn("animate-pulse rounded-md bg-muted", className)} {...props} />;
}

export { Skeleton };

================
File: components/ui/switch.tsx
================
"use client";

import * as SwitchPrimitives from "@radix-ui/react-switch";
import * as React from "react";

import { cn } from "@/lib/utils";

const Switch = React.forwardRef<
  React.ElementRef<typeof SwitchPrimitives.Root>,
  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>
>(({ className, ...props }, ref) => (
  <SwitchPrimitives.Root
    className={cn(
      "peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input",
      className,
    )}
    {...props}
    ref={ref}
  >
    <SwitchPrimitives.Thumb
      className={cn(
        "pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0",
      )}
    />
  </SwitchPrimitives.Root>
));
Switch.displayName = SwitchPrimitives.Root.displayName;

export { Switch };

================
File: components/ui/tabs.tsx
================
"use client";

import * as TabsPrimitive from "@radix-ui/react-tabs";
import * as React from "react";

import { cn } from "@/lib/utils";

const Tabs = TabsPrimitive.Root;

const TabsList = React.forwardRef<
  React.ElementRef<typeof TabsPrimitive.List>,
  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>
>(({ className, ...props }, ref) => (
  <TabsPrimitive.List
    ref={ref}
    className={cn(
      "inline-flex h-7 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground",
      className,
    )}
    {...props}
  />
));
TabsList.displayName = TabsPrimitive.List.displayName;

const TabsTrigger = React.forwardRef<
  React.ElementRef<typeof TabsPrimitive.Trigger>,
  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>
>(({ className, ...props }, ref) => (
  <TabsPrimitive.Trigger
    ref={ref}
    className={cn(
      "inline-flex items-center justify-center whitespace-nowrap rounded-sm px-2 py-[1px] text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm",
      className,
    )}
    {...props}
  />
));
TabsTrigger.displayName = TabsPrimitive.Trigger.displayName;

const TabsContent = React.forwardRef<
  React.ElementRef<typeof TabsPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>
>(({ className, ...props }, ref) => (
  <TabsPrimitive.Content
    ref={ref}
    className={cn(
      "mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2",
      className,
    )}
    {...props}
  />
));
TabsContent.displayName = TabsPrimitive.Content.displayName;

export { Tabs, TabsList, TabsTrigger, TabsContent };

================
File: components/ui/textarea.tsx
================
import * as React from "react";

import { cn } from "@/lib/utils";

const Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<"textarea">>(
  ({ className, ...props }, ref) => {
    return (
      <textarea
        className={cn(
          "flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm",
          className,
        )}
        ref={ref}
        {...props}
      />
    );
  },
);
Textarea.displayName = "Textarea";

export { Textarea };

================
File: components/ui/toast.tsx
================
"use client";

import { useTheme } from "next-themes";
import { Toaster } from "sonner";
import React from "react";

export const Toast = () => {
  const { theme } = useTheme();
  return <Toaster position="top-center" theme={theme as "dark" | "light" | "system"} />;
};

================
File: components/ui/toggle-group.tsx
================
"use client";

import * as ToggleGroupPrimitive from "@radix-ui/react-toggle-group";
import { type VariantProps } from "class-variance-authority";
import * as React from "react";

import { toggleVariants } from "@/components/ui/toggle";
import { cn } from "@/lib/utils";

const ToggleGroupContext = React.createContext<VariantProps<typeof toggleVariants>>({
  size: "default",
  variant: "default",
});

const ToggleGroup = React.forwardRef<
  React.ElementRef<typeof ToggleGroupPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &
    VariantProps<typeof toggleVariants>
>(({ className, variant, size, children, ...props }, ref) => (
  <ToggleGroupPrimitive.Root
    ref={ref}
    className={cn("flex items-center justify-center gap-1", className)}
    {...props}
  >
    <ToggleGroupContext.Provider value={{ variant, size }}>{children}</ToggleGroupContext.Provider>
  </ToggleGroupPrimitive.Root>
));

ToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName;

const ToggleGroupItem = React.forwardRef<
  React.ElementRef<typeof ToggleGroupPrimitive.Item>,
  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &
    VariantProps<typeof toggleVariants>
>(({ className, children, variant, size, ...props }, ref) => {
  const context = React.useContext(ToggleGroupContext);

  return (
    <ToggleGroupPrimitive.Item
      ref={ref}
      className={cn(
        toggleVariants({
          variant: context.variant || variant,
          size: context.size || size,
        }),
        className,
      )}
      {...props}
    >
      {children}
    </ToggleGroupPrimitive.Item>
  );
});

ToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName;

export { ToggleGroup, ToggleGroupItem };

================
File: components/ui/toggle.tsx
================
"use client";

import { cva, type VariantProps } from "class-variance-authority";
import * as TogglePrimitive from "@radix-ui/react-toggle";
import * as React from "react";

import { cn } from "@/lib/utils";

const toggleVariants = cva(
  "inline-flex items-center justify-center gap-2 rounded-md text-sm font-medium transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0",
  {
    variants: {
      variant: {
        default: "bg-transparent",
        outline:
          "border border-input bg-transparent shadow-sm hover:bg-accent hover:text-accent-foreground",
      },
      size: {
        default: "h-9 px-2 min-w-9",
        sm: "h-8 px-1.5 min-w-8",
        lg: "h-10 px-2.5 min-w-10",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  },
);

const Toggle = React.forwardRef<
  React.ElementRef<typeof TogglePrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> & VariantProps<typeof toggleVariants>
>(({ className, variant, size, ...props }, ref) => (
  <TogglePrimitive.Root
    ref={ref}
    className={cn(toggleVariants({ variant, size, className }))}
    {...props}
  />
));

Toggle.displayName = TogglePrimitive.Root.displayName;

export { Toggle, toggleVariants };

================
File: components/ui/tooltip.tsx
================
"use client";

import * as TooltipPrimitive from "@radix-ui/react-tooltip";
import * as React from "react";

import { cn } from "@/lib/utils";

const TooltipProvider = TooltipPrimitive.Provider;

const Tooltip = TooltipPrimitive.Root;

const TooltipTrigger = TooltipPrimitive.Trigger;

const TooltipContent = React.forwardRef<
  React.ElementRef<typeof TooltipPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>
>(({ className, sideOffset = 4, ...props }, ref) => (
  <TooltipPrimitive.Content
    ref={ref}
    sideOffset={sideOffset}
    className={cn(
      "z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
      className,
    )}
    {...props}
  />
));
TooltipContent.displayName = TooltipPrimitive.Content.displayName;

export { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider };

================
File: components/responsive-modal.tsx
================
import { Dialog, DialogContent, DialogHeader, DialogDescription } from "@/components/ui/dialog";
import { Drawer, DrawerContent, DrawerHeader, DrawerTitle } from "@/components/ui/drawer";
import { VisuallyHidden } from "@radix-ui/react-visually-hidden";
import { DialogTitle } from "@radix-ui/react-dialog";
import { type ReactElement } from "react";
import { useMedia } from "react-use";

type ResponsiveModalProps = {
  children: React.ReactNode;
  open: boolean;
  onOpenChange: (open: boolean) => void;
};

export default function ResponsiveModal({
  children,
  open,
  onOpenChange,
}: ResponsiveModalProps): ReactElement {
  const isDesktop = useMedia("(min-width: 1024px)", true);

  if (isDesktop) {
    return (
      <Dialog open={open} onOpenChange={onOpenChange}>
        <VisuallyHidden>
          <DialogHeader>
            <DialogTitle>Title</DialogTitle>
            <DialogDescription>Modal content</DialogDescription>
          </DialogHeader>
        </VisuallyHidden>
        <DialogContent className="bordr-none hide-scrollbar w-full overflow-y-auto p-0 sm:max-w-lg">
          {children}
        </DialogContent>
      </Dialog>
    );
  }

  return (
    <Drawer open={open} onOpenChange={onOpenChange}>
      <DrawerContent>
        <VisuallyHidden>
          <DrawerHeader>
            <DrawerTitle>Title</DrawerTitle>
          </DrawerHeader>
        </VisuallyHidden>
        <div className="hide-scrollbar overflow-y-auto">{children}</div>
      </DrawerContent>
    </Drawer>
  );
}

================
File: config/navigation.ts
================
import { Settings, Mail, Shield, Palette, Keyboard, Bell } from "lucide-react";
import { SettingsGearIcon } from "@/components/icons/animated/settings-gear";
import { CheckCheckIcon } from "@/components/icons/animated/check-check";
import { MessageCircleIcon } from "@/components/icons/animated/message";
import { BookTextIcon } from "@/components/icons/animated/book-text";
import { ArchiveIcon } from "@/components/icons/animated/archive";
import { UsersIcon } from "@/components/icons/animated/users";
import { InboxIcon } from "@/components/icons/animated/inbox";
import { CartIcon } from "@/components/icons/animated/cart";
import { BellIcon } from "@/components/icons/animated/bell";
import { XIcon } from "@/components/icons/animated/x";
import { ChevronLeft } from "lucide-react";

export interface NavItem {
  title: string;
  url: string;
  icon: React.ComponentType<any>;
  badge?: number;
  isBackButton?: boolean;
  isSettingsButton?: boolean;
  disabled?: boolean;
}

interface NavSection {
  title: string;
  items: NavItem[];
}

interface NavConfig {
  path: string;
  sections: NavSection[];
}

export const navigationConfig: Record<string, NavConfig> = {
  mail: {
    path: "/mail",
    sections: [
      {
        title: "",
        items: [
          {
            title: "Inbox",
            url: "/mail/inbox",
            icon: InboxIcon,
          },
          {
            title: "Drafts",
            url: "/mail/draft",
            icon: BookTextIcon,
          },
          {
            title: "Sent",
            url: "/mail/sent",
            icon: CheckCheckIcon,
          },
          {
            title: "Spam",
            url: "/mail/spam",
            icon: XIcon,
          },
          {
            title: "Archive",
            url: "/mail/archive",
            icon: ArchiveIcon,
            disabled: true,
          },
          {
            title: "Social",
            url: "/mail/inbox?category=social",
            icon: UsersIcon,
            disabled: true,
          },
          {
            title: "Updates",
            url: "/mail/inbox?category=updates",
            icon: BellIcon,
            disabled: true,
          },
          {
            title: "Forums",
            url: "/mail/inbox?category=forums",
            icon: MessageCircleIcon,
            disabled: true,
          },
          {
            title: "Shopping",
            url: "/mail/inbox?category=shopping",
            icon: CartIcon,
            disabled: true,
          },
          {
            title: "Settings",
            url: "/settings/general",
            icon: SettingsGearIcon,
            isSettingsButton: true,
          },
        ],
      },
      // {
      //   title: "Categories",
      //   items: [
      //     {
      //       title: "Social",
      //       url: "/mail/inbox?category=social",
      //       icon: UsersIcon,
      //       badge: 972,
      //     },
      //     {
      //       title: "Updates",
      //       url: "/mail/inbox?category=updates",
      //       icon: BellIcon,
      //       badge: 342,
      //     },
      //     {
      //       title: "Forums",
      //       url: "/mail/inbox?category=forums",
      //       icon: MessageCircleIcon,
      //       badge: 128,
      //     },
      //     {
      //       title: "Shopping",
      //       url: "/mail/inbox?category=shopping",
      //       icon: CartIcon,
      //       badge: 8,
      //     },
      //   ],
      // },
      // {
      //   title: "Advanced",
      //   items: [
      //     {
      //       title: "Settings",
      //       url: "/settings",
      //       icon: SettingsGearIcon,
      //     },
      //   ],
      // },
    ],
  },
  settings: {
    path: "/settings",
    sections: [
      {
        title: "",
        items: [
          {
            title: "Back to Mail",
            url: "/mail",
            icon: ChevronLeft,
            isBackButton: true,
          },
        ],
      },
      {
        title: "Settings",
        items: [
          {
            title: "General",
            url: "/settings/general",
            icon: Settings,
          },
          {
            title: "Connections",
            url: "/settings/connections",
            icon: Mail,
          },
          {
            title: "Security",
            url: "/settings/security",
            icon: Shield,
          },
          {
            title: "Appearance",
            url: "/settings/appearance",
            icon: Palette,
          },
          {
            title: "Shortcuts",
            url: "/settings/shortcuts",
            icon: Keyboard,
          },
          {
            title: "Notifications",
            url: "/settings/notifications",
            icon: Bell,
          },
        ].map((item) => ({
          ...item,
          isSettingsPage: true,
        })),
      },
    ],
  },
};

================
File: config/shortcuts.ts
================
// config/shortcuts.ts
export const keyboardShortcuts = [
  { keys: ["⌘", "n"], action: "New Email" },
  { keys: ["⌘", "Enter"], action: "Send Email" },
  { keys: ["⌘", "r"], action: "Reply" },
  { keys: ["⌘", "Shift", "r"], action: "Reply All" },
  { keys: ["⌘", "f"], action: "Forward" },
  { keys: ["⌘", "Shift", "d"], action: "Drafts" },
  { keys: ["⌘", "Shift", "i"], action: "Inbox" },
  { keys: ["⌘", "Shift", "s"], action: "Sent Mail" },
  { keys: ["⌘", "Backspace"], action: "Delete" },
  { keys: ["⌘", "/"], action: "Search" },
  { keys: ["⌘", "Shift", "u"], action: "Mark as Unread" },
  { keys: ["⌘", "Shift", "m"], action: "Mute Thread" },
  { keys: ["⌘", "Shift", "p"], action: "Print Email" },
  { keys: ["⌘", "Shift", "h"], action: "Archive Email" },
  { keys: ["⌘", "Shift", "j"], action: "Mark as Spam" },
  { keys: ["⌘", "Shift", "e"], action: "Move to Folder" },
  { keys: ["⌘", "Shift", "t"], action: "Undo Last Action" },
  { keys: ["⌘", "Shift", "v"], action: "View Email Details" },
  { keys: ["⌘", "Shift", "g"], action: "Go to Drafts" },
  { keys: ["⌘", "Shift", "x"], action: "Expand Email View" },
  { keys: ["⌘", "?"], action: "Help with shortcuts" },
];

================
File: constants/emailProviders.ts
================
export const emailProviders = [
  {
    name: "Google",
    icon: "M11.99 13.9v-3.72h9.36c.14.63.25 1.22.25 2.05c0 5.71-3.83 9.77-9.6 9.77c-5.52 0-10-4.48-10-10S6.48 2 12 2c2.7 0 4.96.99 6.69 2.61l-2.84 2.76c-.72-.68-1.98-1.48-3.85-1.48c-3.31 0-6.01 2.75-6.01 6.12s2.7 6.12 6.01 6.12c3.83 0 5.24-2.65 5.5-4.22h-5.51z",
    providerId: "google",
  },
];

================
File: db/migrations/meta/_journal.json
================
{
  "version": "7",
  "dialect": "postgresql",
  "entries": [
    {
      "idx": 0,
      "version": "7",
      "when": 1738890788092,
      "tag": "0000_fine_steel_serpent",
      "breakpoints": true
    },
    {
      "idx": 1,
      "version": "7",
      "when": 1738907559174,
      "tag": "0001_greedy_darkhawk",
      "breakpoints": true
    },
    {
      "idx": 2,
      "version": "7",
      "when": 1739249289810,
      "tag": "0002_flimsy_nightshade",
      "breakpoints": true
    },
    {
      "idx": 3,
      "version": "7",
      "when": 1739249583301,
      "tag": "0003_purple_kylun",
      "breakpoints": true
    },
    {
      "idx": 4,
      "version": "7",
      "when": 1739254572199,
      "tag": "0004_quiet_grey_gargoyle",
      "breakpoints": true
    },
    {
      "idx": 5,
      "version": "7",
      "when": 1739401781767,
      "tag": "0005_mature_lady_deathstrike",
      "breakpoints": true
    },
    {
      "idx": 6,
      "version": "7",
      "when": 1739401815552,
      "tag": "0006_small_unicorn",
      "breakpoints": true
    },
    {
      "idx": 7,
      "version": "7",
      "when": 1739402144197,
      "tag": "0007_tense_wrecking_crew",
      "breakpoints": true
    },
    {
      "idx": 8,
      "version": "7",
      "when": 1739402271719,
      "tag": "0008_freezing_hydra",
      "breakpoints": true
    },
    {
      "idx": 9,
      "version": "7",
      "when": 1739402291482,
      "tag": "0009_boring_big_bertha",
      "breakpoints": true
    },
    {
      "idx": 10,
      "version": "7",
      "when": 1739402547987,
      "tag": "0010_dry_hemingway",
      "breakpoints": true
    },
    {
      "idx": 11,
      "version": "7",
      "when": 1739404669062,
      "tag": "0011_huge_newton_destine",
      "breakpoints": true
    },
    {
      "idx": 12,
      "version": "7",
      "when": 1739405152778,
      "tag": "0012_even_johnny_storm",
      "breakpoints": true
    },
    {
      "idx": 13,
      "version": "7",
      "when": 1739411815922,
      "tag": "0013_calm_timeslip",
      "breakpoints": true
    },
    {
      "idx": 14,
      "version": "7",
      "when": 1739481923719,
      "tag": "0014_cuddly_energizer",
      "breakpoints": true
    },
    {
      "idx": 15,
      "version": "7",
      "when": 1739484404085,
      "tag": "0015_minor_mister_sinister",
      "breakpoints": true
    }
  ]
}

================
File: db/migrations/meta/0000_snapshot.json
================
{
  "id": "13e476cf-de05-4154-980d-5d5888598c7c",
  "prevId": "00000000-0000-0000-0000-000000000000",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.mail0_account": {
      "name": "mail0_account",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "account_id": {
          "name": "account_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "provider_id": {
          "name": "provider_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "access_token": {
          "name": "access_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "refresh_token": {
          "name": "refresh_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "id_token": {
          "name": "id_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "access_token_expires_at": {
          "name": "access_token_expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "refresh_token_expires_at": {
          "name": "refresh_token_expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "scope": {
          "name": "scope",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "password": {
          "name": "password",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "mail0_account_user_id_mail0_user_id_fk": {
          "name": "mail0_account_user_id_mail0_user_id_fk",
          "tableFrom": "mail0_account",
          "tableTo": "mail0_user",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_session": {
      "name": "mail0_session",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "token": {
          "name": "token",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "ip_address": {
          "name": "ip_address",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "user_agent": {
          "name": "user_agent",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "mail0_session_user_id_mail0_user_id_fk": {
          "name": "mail0_session_user_id_mail0_user_id_fk",
          "tableFrom": "mail0_session",
          "tableTo": "mail0_user",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "mail0_session_token_unique": {
          "name": "mail0_session_token_unique",
          "nullsNotDistinct": false,
          "columns": ["token"]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_user": {
      "name": "mail0_user",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email_verified": {
          "name": "email_verified",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "image": {
          "name": "image",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "mail0_user_email_unique": {
          "name": "mail0_user_email_unique",
          "nullsNotDistinct": false,
          "columns": ["email"]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_verification": {
      "name": "mail0_verification",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "identifier": {
          "name": "identifier",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "value": {
          "name": "value",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {},
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}

================
File: db/migrations/meta/0001_snapshot.json
================
{
  "id": "beeb7f80-ef5f-4955-b568-9386e1c9494c",
  "prevId": "13e476cf-de05-4154-980d-5d5888598c7c",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.mail0_account": {
      "name": "mail0_account",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "account_id": {
          "name": "account_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "provider_id": {
          "name": "provider_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "access_token": {
          "name": "access_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "refresh_token": {
          "name": "refresh_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "id_token": {
          "name": "id_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "access_token_expires_at": {
          "name": "access_token_expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "refresh_token_expires_at": {
          "name": "refresh_token_expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "scope": {
          "name": "scope",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "password": {
          "name": "password",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "mail0_account_user_id_mail0_user_id_fk": {
          "name": "mail0_account_user_id_mail0_user_id_fk",
          "tableFrom": "mail0_account",
          "tableTo": "mail0_user",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_early_access": {
      "name": "mail0_early_access",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "mail0_early_access_email_unique": {
          "name": "mail0_early_access_email_unique",
          "nullsNotDistinct": false,
          "columns": ["email"]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_session": {
      "name": "mail0_session",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "token": {
          "name": "token",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "ip_address": {
          "name": "ip_address",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "user_agent": {
          "name": "user_agent",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "mail0_session_user_id_mail0_user_id_fk": {
          "name": "mail0_session_user_id_mail0_user_id_fk",
          "tableFrom": "mail0_session",
          "tableTo": "mail0_user",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "mail0_session_token_unique": {
          "name": "mail0_session_token_unique",
          "nullsNotDistinct": false,
          "columns": ["token"]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_user": {
      "name": "mail0_user",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email_verified": {
          "name": "email_verified",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "image": {
          "name": "image",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "mail0_user_email_unique": {
          "name": "mail0_user_email_unique",
          "nullsNotDistinct": false,
          "columns": ["email"]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_verification": {
      "name": "mail0_verification",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "identifier": {
          "name": "identifier",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "value": {
          "name": "value",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {},
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}

================
File: db/migrations/meta/0002_snapshot.json
================
{
  "id": "6d2e7d83-916c-4ead-ad24-9d34fd2e56fb",
  "prevId": "beeb7f80-ef5f-4955-b568-9386e1c9494c",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.mail0_early_access": {
      "name": "mail0_early_access",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "mail0_early_access_email_unique": {
          "name": "mail0_early_access_email_unique",
          "nullsNotDistinct": false,
          "columns": ["email"]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_google_account": {
      "name": "mail0_google_account",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "access_token": {
          "name": "access_token",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "refresh_token": {
          "name": "refresh_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "scope": {
          "name": "scope",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "mail0_google_account_user_id_mail0_user_id_fk": {
          "name": "mail0_google_account_user_id_mail0_user_id_fk",
          "tableFrom": "mail0_google_account",
          "tableTo": "mail0_user",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_session": {
      "name": "mail0_session",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "token": {
          "name": "token",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "ip_address": {
          "name": "ip_address",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "user_agent": {
          "name": "user_agent",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "mail0_session_user_id_mail0_user_id_fk": {
          "name": "mail0_session_user_id_mail0_user_id_fk",
          "tableFrom": "mail0_session",
          "tableTo": "mail0_user",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "mail0_session_token_unique": {
          "name": "mail0_session_token_unique",
          "nullsNotDistinct": false,
          "columns": ["token"]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_user": {
      "name": "mail0_user",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email_verified": {
          "name": "email_verified",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "image": {
          "name": "image",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "mail0_user_email_unique": {
          "name": "mail0_user_email_unique",
          "nullsNotDistinct": false,
          "columns": ["email"]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_user_password": {
      "name": "mail0_user_password",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "hash": {
          "name": "hash",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "mail0_user_password_user_id_mail0_user_id_fk": {
          "name": "mail0_user_password_user_id_mail0_user_id_fk",
          "tableFrom": "mail0_user_password",
          "tableTo": "mail0_user",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_verification": {
      "name": "mail0_verification",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "identifier": {
          "name": "identifier",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "value": {
          "name": "value",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {},
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}

================
File: db/migrations/meta/0003_snapshot.json
================
{
  "id": "5121509e-83ba-4fab-a428-88352e69e08a",
  "prevId": "6d2e7d83-916c-4ead-ad24-9d34fd2e56fb",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.mail0_account": {
      "name": "mail0_account",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "account_id": {
          "name": "account_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "provider_id": {
          "name": "provider_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "access_token": {
          "name": "access_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "refresh_token": {
          "name": "refresh_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "id_token": {
          "name": "id_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "access_token_expires_at": {
          "name": "access_token_expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "refresh_token_expires_at": {
          "name": "refresh_token_expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "scope": {
          "name": "scope",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "password": {
          "name": "password",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "mail0_account_user_id_mail0_user_id_fk": {
          "name": "mail0_account_user_id_mail0_user_id_fk",
          "tableFrom": "mail0_account",
          "tableTo": "mail0_user",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_early_access": {
      "name": "mail0_early_access",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "mail0_early_access_email_unique": {
          "name": "mail0_early_access_email_unique",
          "nullsNotDistinct": false,
          "columns": ["email"]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_google_connection": {
      "name": "mail0_google_connection",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "access_token": {
          "name": "access_token",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "refresh_token": {
          "name": "refresh_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "scope": {
          "name": "scope",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "mail0_google_connection_user_id_mail0_user_id_fk": {
          "name": "mail0_google_connection_user_id_mail0_user_id_fk",
          "tableFrom": "mail0_google_connection",
          "tableTo": "mail0_user",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_session": {
      "name": "mail0_session",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "token": {
          "name": "token",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "ip_address": {
          "name": "ip_address",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "user_agent": {
          "name": "user_agent",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "mail0_session_user_id_mail0_user_id_fk": {
          "name": "mail0_session_user_id_mail0_user_id_fk",
          "tableFrom": "mail0_session",
          "tableTo": "mail0_user",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "mail0_session_token_unique": {
          "name": "mail0_session_token_unique",
          "nullsNotDistinct": false,
          "columns": ["token"]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_user": {
      "name": "mail0_user",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email_verified": {
          "name": "email_verified",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "image": {
          "name": "image",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "mail0_user_email_unique": {
          "name": "mail0_user_email_unique",
          "nullsNotDistinct": false,
          "columns": ["email"]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_verification": {
      "name": "mail0_verification",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "identifier": {
          "name": "identifier",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "value": {
          "name": "value",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {},
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}

================
File: db/migrations/meta/0004_snapshot.json
================
{
  "id": "84c07707-d0b7-4d23-8660-1d35c2b9e8cd",
  "prevId": "5121509e-83ba-4fab-a428-88352e69e08a",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.mail0_account": {
      "name": "mail0_account",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "account_id": {
          "name": "account_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "provider_id": {
          "name": "provider_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "access_token": {
          "name": "access_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "refresh_token": {
          "name": "refresh_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "id_token": {
          "name": "id_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "access_token_expires_at": {
          "name": "access_token_expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "refresh_token_expires_at": {
          "name": "refresh_token_expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "scope": {
          "name": "scope",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "password": {
          "name": "password",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "mail0_account_user_id_mail0_user_id_fk": {
          "name": "mail0_account_user_id_mail0_user_id_fk",
          "tableFrom": "mail0_account",
          "tableTo": "mail0_user",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_early_access": {
      "name": "mail0_early_access",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "mail0_early_access_email_unique": {
          "name": "mail0_early_access_email_unique",
          "nullsNotDistinct": false,
          "columns": ["email"]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_google_connection": {
      "name": "mail0_google_connection",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "picture": {
          "name": "picture",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "access_token": {
          "name": "access_token",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "refresh_token": {
          "name": "refresh_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "scope": {
          "name": "scope",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "mail0_google_connection_user_id_mail0_user_id_fk": {
          "name": "mail0_google_connection_user_id_mail0_user_id_fk",
          "tableFrom": "mail0_google_connection",
          "tableTo": "mail0_user",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_session": {
      "name": "mail0_session",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "token": {
          "name": "token",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "ip_address": {
          "name": "ip_address",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "user_agent": {
          "name": "user_agent",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "mail0_session_user_id_mail0_user_id_fk": {
          "name": "mail0_session_user_id_mail0_user_id_fk",
          "tableFrom": "mail0_session",
          "tableTo": "mail0_user",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "mail0_session_token_unique": {
          "name": "mail0_session_token_unique",
          "nullsNotDistinct": false,
          "columns": ["token"]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_user": {
      "name": "mail0_user",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email_verified": {
          "name": "email_verified",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "image": {
          "name": "image",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "mail0_user_email_unique": {
          "name": "mail0_user_email_unique",
          "nullsNotDistinct": false,
          "columns": ["email"]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_verification": {
      "name": "mail0_verification",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "identifier": {
          "name": "identifier",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "value": {
          "name": "value",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {},
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}

================
File: db/migrations/meta/0005_snapshot.json
================
{
  "id": "d3238b69-465a-4573-89be-6e166bea68ba",
  "prevId": "84c07707-d0b7-4d23-8660-1d35c2b9e8cd",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.mail0_account": {
      "name": "mail0_account",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "account_id": {
          "name": "account_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "provider_id": {
          "name": "provider_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "access_token": {
          "name": "access_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "refresh_token": {
          "name": "refresh_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "id_token": {
          "name": "id_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "access_token_expires_at": {
          "name": "access_token_expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "refresh_token_expires_at": {
          "name": "refresh_token_expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "scope": {
          "name": "scope",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "password": {
          "name": "password",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "mail0_account_user_id_mail0_user_id_fk": {
          "name": "mail0_account_user_id_mail0_user_id_fk",
          "tableFrom": "mail0_account",
          "tableTo": "mail0_user",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_connection": {
      "name": "mail0_connection",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "picture": {
          "name": "picture",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "access_token": {
          "name": "access_token",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "refresh_token": {
          "name": "refresh_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "scope": {
          "name": "scope",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "provider_id": {
          "name": "provider_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "mail0_connection_user_id_mail0_user_id_fk": {
          "name": "mail0_connection_user_id_mail0_user_id_fk",
          "tableFrom": "mail0_connection",
          "tableTo": "mail0_user",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "mail0_connection_email_unique": {
          "name": "mail0_connection_email_unique",
          "nullsNotDistinct": false,
          "columns": ["email"]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_early_access": {
      "name": "mail0_early_access",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "mail0_early_access_email_unique": {
          "name": "mail0_early_access_email_unique",
          "nullsNotDistinct": false,
          "columns": ["email"]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_session": {
      "name": "mail0_session",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "token": {
          "name": "token",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "ip_address": {
          "name": "ip_address",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "user_agent": {
          "name": "user_agent",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "connectionId": {
          "name": "connectionId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "mail0_session_user_id_mail0_user_id_fk": {
          "name": "mail0_session_user_id_mail0_user_id_fk",
          "tableFrom": "mail0_session",
          "tableTo": "mail0_user",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "mail0_session_token_unique": {
          "name": "mail0_session_token_unique",
          "nullsNotDistinct": false,
          "columns": ["token"]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_user": {
      "name": "mail0_user",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email_verified": {
          "name": "email_verified",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "image": {
          "name": "image",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "mail0_user_email_unique": {
          "name": "mail0_user_email_unique",
          "nullsNotDistinct": false,
          "columns": ["email"]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_verification": {
      "name": "mail0_verification",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "identifier": {
          "name": "identifier",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "value": {
          "name": "value",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {},
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}

================
File: db/migrations/meta/0006_snapshot.json
================
{
  "id": "327db303-380c-43fe-b10d-c8720f649673",
  "prevId": "d3238b69-465a-4573-89be-6e166bea68ba",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.mail0_account": {
      "name": "mail0_account",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "account_id": {
          "name": "account_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "provider_id": {
          "name": "provider_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "access_token": {
          "name": "access_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "refresh_token": {
          "name": "refresh_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "id_token": {
          "name": "id_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "access_token_expires_at": {
          "name": "access_token_expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "refresh_token_expires_at": {
          "name": "refresh_token_expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "scope": {
          "name": "scope",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "password": {
          "name": "password",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "mail0_account_user_id_mail0_user_id_fk": {
          "name": "mail0_account_user_id_mail0_user_id_fk",
          "tableFrom": "mail0_account",
          "tableTo": "mail0_user",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_connection": {
      "name": "mail0_connection",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "picture": {
          "name": "picture",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "access_token": {
          "name": "access_token",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "refresh_token": {
          "name": "refresh_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "scope": {
          "name": "scope",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "provider_id": {
          "name": "provider_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "mail0_connection_user_id_mail0_user_id_fk": {
          "name": "mail0_connection_user_id_mail0_user_id_fk",
          "tableFrom": "mail0_connection",
          "tableTo": "mail0_user",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "mail0_connection_email_unique": {
          "name": "mail0_connection_email_unique",
          "nullsNotDistinct": false,
          "columns": ["email"]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_early_access": {
      "name": "mail0_early_access",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "mail0_early_access_email_unique": {
          "name": "mail0_early_access_email_unique",
          "nullsNotDistinct": false,
          "columns": ["email"]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_session": {
      "name": "mail0_session",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "token": {
          "name": "token",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "ip_address": {
          "name": "ip_address",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "user_agent": {
          "name": "user_agent",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "connection_id": {
          "name": "connection_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "mail0_session_user_id_mail0_user_id_fk": {
          "name": "mail0_session_user_id_mail0_user_id_fk",
          "tableFrom": "mail0_session",
          "tableTo": "mail0_user",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "mail0_session_token_unique": {
          "name": "mail0_session_token_unique",
          "nullsNotDistinct": false,
          "columns": ["token"]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_user": {
      "name": "mail0_user",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email_verified": {
          "name": "email_verified",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "image": {
          "name": "image",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "mail0_user_email_unique": {
          "name": "mail0_user_email_unique",
          "nullsNotDistinct": false,
          "columns": ["email"]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_verification": {
      "name": "mail0_verification",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "identifier": {
          "name": "identifier",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "value": {
          "name": "value",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {},
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}

================
File: db/migrations/meta/0007_snapshot.json
================
{
  "id": "96146c49-918a-4337-bbc8-098fcd6c841e",
  "prevId": "327db303-380c-43fe-b10d-c8720f649673",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.mail0_account": {
      "name": "mail0_account",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "account_id": {
          "name": "account_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "provider_id": {
          "name": "provider_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "access_token": {
          "name": "access_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "refresh_token": {
          "name": "refresh_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "id_token": {
          "name": "id_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "access_token_expires_at": {
          "name": "access_token_expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "refresh_token_expires_at": {
          "name": "refresh_token_expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "scope": {
          "name": "scope",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "password": {
          "name": "password",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "mail0_account_user_id_mail0_user_id_fk": {
          "name": "mail0_account_user_id_mail0_user_id_fk",
          "tableFrom": "mail0_account",
          "tableTo": "mail0_user",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_connection": {
      "name": "mail0_connection",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "picture": {
          "name": "picture",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "access_token": {
          "name": "access_token",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "refresh_token": {
          "name": "refresh_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "scope": {
          "name": "scope",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "provider_id": {
          "name": "provider_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "mail0_connection_user_id_mail0_user_id_fk": {
          "name": "mail0_connection_user_id_mail0_user_id_fk",
          "tableFrom": "mail0_connection",
          "tableTo": "mail0_user",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "mail0_connection_email_unique": {
          "name": "mail0_connection_email_unique",
          "nullsNotDistinct": false,
          "columns": ["email"]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_early_access": {
      "name": "mail0_early_access",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "mail0_early_access_email_unique": {
          "name": "mail0_early_access_email_unique",
          "nullsNotDistinct": false,
          "columns": ["email"]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_session": {
      "name": "mail0_session",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "token": {
          "name": "token",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "ip_address": {
          "name": "ip_address",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "user_agent": {
          "name": "user_agent",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "mail0_session_user_id_mail0_user_id_fk": {
          "name": "mail0_session_user_id_mail0_user_id_fk",
          "tableFrom": "mail0_session",
          "tableTo": "mail0_user",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "mail0_session_token_unique": {
          "name": "mail0_session_token_unique",
          "nullsNotDistinct": false,
          "columns": ["token"]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_user": {
      "name": "mail0_user",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email_verified": {
          "name": "email_verified",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "image": {
          "name": "image",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "mail0_user_email_unique": {
          "name": "mail0_user_email_unique",
          "nullsNotDistinct": false,
          "columns": ["email"]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_verification": {
      "name": "mail0_verification",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "identifier": {
          "name": "identifier",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "value": {
          "name": "value",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {},
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}

================
File: db/migrations/meta/0008_snapshot.json
================
{
  "id": "00984634-7a3f-415b-86e4-327d638434dc",
  "prevId": "96146c49-918a-4337-bbc8-098fcd6c841e",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.mail0_account": {
      "name": "mail0_account",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "account_id": {
          "name": "account_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "provider_id": {
          "name": "provider_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "access_token": {
          "name": "access_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "refresh_token": {
          "name": "refresh_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "id_token": {
          "name": "id_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "access_token_expires_at": {
          "name": "access_token_expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "refresh_token_expires_at": {
          "name": "refresh_token_expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "scope": {
          "name": "scope",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "password": {
          "name": "password",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "mail0_account_user_id_mail0_user_id_fk": {
          "name": "mail0_account_user_id_mail0_user_id_fk",
          "tableFrom": "mail0_account",
          "tableTo": "mail0_user",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_connection": {
      "name": "mail0_connection",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "picture": {
          "name": "picture",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "access_token": {
          "name": "access_token",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "refresh_token": {
          "name": "refresh_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "scope": {
          "name": "scope",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "provider_id": {
          "name": "provider_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "mail0_connection_user_id_mail0_user_id_fk": {
          "name": "mail0_connection_user_id_mail0_user_id_fk",
          "tableFrom": "mail0_connection",
          "tableTo": "mail0_user",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "mail0_connection_email_unique": {
          "name": "mail0_connection_email_unique",
          "nullsNotDistinct": false,
          "columns": ["email"]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_early_access": {
      "name": "mail0_early_access",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "mail0_early_access_email_unique": {
          "name": "mail0_early_access_email_unique",
          "nullsNotDistinct": false,
          "columns": ["email"]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_session": {
      "name": "mail0_session",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "token": {
          "name": "token",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "ip_address": {
          "name": "ip_address",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "user_agent": {
          "name": "user_agent",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "mail0_session_user_id_mail0_user_id_fk": {
          "name": "mail0_session_user_id_mail0_user_id_fk",
          "tableFrom": "mail0_session",
          "tableTo": "mail0_user",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "mail0_session_token_unique": {
          "name": "mail0_session_token_unique",
          "nullsNotDistinct": false,
          "columns": ["token"]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_user": {
      "name": "mail0_user",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email_verified": {
          "name": "email_verified",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "image": {
          "name": "image",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "default_connection_id": {
          "name": "default_connection_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "mail0_user_default_connection_id_mail0_connection_id_fk": {
          "name": "mail0_user_default_connection_id_mail0_connection_id_fk",
          "tableFrom": "mail0_user",
          "tableTo": "mail0_connection",
          "columnsFrom": ["default_connection_id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "mail0_user_email_unique": {
          "name": "mail0_user_email_unique",
          "nullsNotDistinct": false,
          "columns": ["email"]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_verification": {
      "name": "mail0_verification",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "identifier": {
          "name": "identifier",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "value": {
          "name": "value",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {},
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}

================
File: db/migrations/meta/0009_snapshot.json
================
{
  "id": "95628512-039f-405a-8b71-a6dc4bee06c7",
  "prevId": "00984634-7a3f-415b-86e4-327d638434dc",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.mail0_account": {
      "name": "mail0_account",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "account_id": {
          "name": "account_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "provider_id": {
          "name": "provider_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "access_token": {
          "name": "access_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "refresh_token": {
          "name": "refresh_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "id_token": {
          "name": "id_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "access_token_expires_at": {
          "name": "access_token_expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "refresh_token_expires_at": {
          "name": "refresh_token_expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "scope": {
          "name": "scope",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "password": {
          "name": "password",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "mail0_account_user_id_mail0_user_id_fk": {
          "name": "mail0_account_user_id_mail0_user_id_fk",
          "tableFrom": "mail0_account",
          "tableTo": "mail0_user",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_connection": {
      "name": "mail0_connection",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "picture": {
          "name": "picture",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "access_token": {
          "name": "access_token",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "refresh_token": {
          "name": "refresh_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "scope": {
          "name": "scope",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "provider_id": {
          "name": "provider_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "mail0_connection_user_id_mail0_user_id_fk": {
          "name": "mail0_connection_user_id_mail0_user_id_fk",
          "tableFrom": "mail0_connection",
          "tableTo": "mail0_user",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "mail0_connection_email_unique": {
          "name": "mail0_connection_email_unique",
          "nullsNotDistinct": false,
          "columns": ["email"]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_early_access": {
      "name": "mail0_early_access",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "mail0_early_access_email_unique": {
          "name": "mail0_early_access_email_unique",
          "nullsNotDistinct": false,
          "columns": ["email"]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_session": {
      "name": "mail0_session",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "token": {
          "name": "token",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "ip_address": {
          "name": "ip_address",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "user_agent": {
          "name": "user_agent",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "mail0_session_user_id_mail0_user_id_fk": {
          "name": "mail0_session_user_id_mail0_user_id_fk",
          "tableFrom": "mail0_session",
          "tableTo": "mail0_user",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "mail0_session_token_unique": {
          "name": "mail0_session_token_unique",
          "nullsNotDistinct": false,
          "columns": ["token"]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_user": {
      "name": "mail0_user",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email_verified": {
          "name": "email_verified",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "image": {
          "name": "image",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "default_connection_id": {
          "name": "default_connection_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "mail0_user_email_unique": {
          "name": "mail0_user_email_unique",
          "nullsNotDistinct": false,
          "columns": ["email"]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_verification": {
      "name": "mail0_verification",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "identifier": {
          "name": "identifier",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "value": {
          "name": "value",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {},
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}

================
File: db/migrations/meta/0010_snapshot.json
================
{
  "id": "eab2ce35-4986-4f17-b307-6298e6ee988a",
  "prevId": "95628512-039f-405a-8b71-a6dc4bee06c7",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.mail0_account": {
      "name": "mail0_account",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "account_id": {
          "name": "account_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "provider_id": {
          "name": "provider_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "access_token": {
          "name": "access_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "refresh_token": {
          "name": "refresh_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "id_token": {
          "name": "id_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "access_token_expires_at": {
          "name": "access_token_expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "refresh_token_expires_at": {
          "name": "refresh_token_expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "scope": {
          "name": "scope",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "password": {
          "name": "password",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "mail0_account_user_id_mail0_user_id_fk": {
          "name": "mail0_account_user_id_mail0_user_id_fk",
          "tableFrom": "mail0_account",
          "tableTo": "mail0_user",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_connection": {
      "name": "mail0_connection",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "picture": {
          "name": "picture",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "access_token": {
          "name": "access_token",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "refresh_token": {
          "name": "refresh_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "scope": {
          "name": "scope",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "provider_id": {
          "name": "provider_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "mail0_connection_user_id_mail0_user_id_fk": {
          "name": "mail0_connection_user_id_mail0_user_id_fk",
          "tableFrom": "mail0_connection",
          "tableTo": "mail0_user",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "mail0_connection_email_unique": {
          "name": "mail0_connection_email_unique",
          "nullsNotDistinct": false,
          "columns": ["email"]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_early_access": {
      "name": "mail0_early_access",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "mail0_early_access_email_unique": {
          "name": "mail0_early_access_email_unique",
          "nullsNotDistinct": false,
          "columns": ["email"]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_session": {
      "name": "mail0_session",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "token": {
          "name": "token",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "ip_address": {
          "name": "ip_address",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "user_agent": {
          "name": "user_agent",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "mail0_session_user_id_mail0_user_id_fk": {
          "name": "mail0_session_user_id_mail0_user_id_fk",
          "tableFrom": "mail0_session",
          "tableTo": "mail0_user",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "mail0_session_token_unique": {
          "name": "mail0_session_token_unique",
          "nullsNotDistinct": false,
          "columns": ["token"]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_user": {
      "name": "mail0_user",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email_verified": {
          "name": "email_verified",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "image": {
          "name": "image",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "mail0_user_email_unique": {
          "name": "mail0_user_email_unique",
          "nullsNotDistinct": false,
          "columns": ["email"]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_verification": {
      "name": "mail0_verification",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "identifier": {
          "name": "identifier",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "value": {
          "name": "value",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {},
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}

================
File: db/migrations/meta/0011_snapshot.json
================
{
  "id": "ddd2723e-811f-48f6-abf3-a25c2ce1e616",
  "prevId": "eab2ce35-4986-4f17-b307-6298e6ee988a",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.mail0_account": {
      "name": "mail0_account",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "account_id": {
          "name": "account_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "provider_id": {
          "name": "provider_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "access_token": {
          "name": "access_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "refresh_token": {
          "name": "refresh_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "id_token": {
          "name": "id_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "access_token_expires_at": {
          "name": "access_token_expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "refresh_token_expires_at": {
          "name": "refresh_token_expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "scope": {
          "name": "scope",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "password": {
          "name": "password",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "mail0_account_user_id_mail0_user_id_fk": {
          "name": "mail0_account_user_id_mail0_user_id_fk",
          "tableFrom": "mail0_account",
          "tableTo": "mail0_user",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_connection": {
      "name": "mail0_connection",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "picture": {
          "name": "picture",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "access_token": {
          "name": "access_token",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "refresh_token": {
          "name": "refresh_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "scope": {
          "name": "scope",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "provider_id": {
          "name": "provider_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "mail0_connection_user_id_mail0_user_id_fk": {
          "name": "mail0_connection_user_id_mail0_user_id_fk",
          "tableFrom": "mail0_connection",
          "tableTo": "mail0_user",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "mail0_connection_email_unique": {
          "name": "mail0_connection_email_unique",
          "nullsNotDistinct": false,
          "columns": ["email"]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_early_access": {
      "name": "mail0_early_access",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "mail0_early_access_email_unique": {
          "name": "mail0_early_access_email_unique",
          "nullsNotDistinct": false,
          "columns": ["email"]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_session": {
      "name": "mail0_session",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "token": {
          "name": "token",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "ip_address": {
          "name": "ip_address",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "user_agent": {
          "name": "user_agent",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "mail0_session_user_id_mail0_user_id_fk": {
          "name": "mail0_session_user_id_mail0_user_id_fk",
          "tableFrom": "mail0_session",
          "tableTo": "mail0_user",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "mail0_session_token_unique": {
          "name": "mail0_session_token_unique",
          "nullsNotDistinct": false,
          "columns": ["token"]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_user": {
      "name": "mail0_user",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email_verified": {
          "name": "email_verified",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "image": {
          "name": "image",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "default_connection_id": {
          "name": "default_connection_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "mail0_user_email_unique": {
          "name": "mail0_user_email_unique",
          "nullsNotDistinct": false,
          "columns": ["email"]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_verification": {
      "name": "mail0_verification",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "identifier": {
          "name": "identifier",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "value": {
          "name": "value",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {},
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}

================
File: db/migrations/meta/0012_snapshot.json
================
{
  "id": "2a6c570d-7d11-4a14-aa4c-015655c0e609",
  "prevId": "ddd2723e-811f-48f6-abf3-a25c2ce1e616",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.mail0_account": {
      "name": "mail0_account",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "account_id": {
          "name": "account_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "provider_id": {
          "name": "provider_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "access_token": {
          "name": "access_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "refresh_token": {
          "name": "refresh_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "id_token": {
          "name": "id_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "access_token_expires_at": {
          "name": "access_token_expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "refresh_token_expires_at": {
          "name": "refresh_token_expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "scope": {
          "name": "scope",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "password": {
          "name": "password",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "mail0_account_user_id_mail0_user_id_fk": {
          "name": "mail0_account_user_id_mail0_user_id_fk",
          "tableFrom": "mail0_account",
          "tableTo": "mail0_user",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_connection": {
      "name": "mail0_connection",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "picture": {
          "name": "picture",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "access_token": {
          "name": "access_token",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "refresh_token": {
          "name": "refresh_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "scope": {
          "name": "scope",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "provider_id": {
          "name": "provider_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "mail0_connection_user_id_mail0_user_id_fk": {
          "name": "mail0_connection_user_id_mail0_user_id_fk",
          "tableFrom": "mail0_connection",
          "tableTo": "mail0_user",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "mail0_connection_email_unique": {
          "name": "mail0_connection_email_unique",
          "nullsNotDistinct": false,
          "columns": ["email"]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_early_access": {
      "name": "mail0_early_access",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "mail0_early_access_email_unique": {
          "name": "mail0_early_access_email_unique",
          "nullsNotDistinct": false,
          "columns": ["email"]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_session": {
      "name": "mail0_session",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "token": {
          "name": "token",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "ip_address": {
          "name": "ip_address",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "user_agent": {
          "name": "user_agent",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "mail0_session_user_id_mail0_user_id_fk": {
          "name": "mail0_session_user_id_mail0_user_id_fk",
          "tableFrom": "mail0_session",
          "tableTo": "mail0_user",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "mail0_session_token_unique": {
          "name": "mail0_session_token_unique",
          "nullsNotDistinct": false,
          "columns": ["token"]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_user": {
      "name": "mail0_user",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email_verified": {
          "name": "email_verified",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "image": {
          "name": "image",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "default_connection_id": {
          "name": "default_connection_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "default": "'Yeah'"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "mail0_user_email_unique": {
          "name": "mail0_user_email_unique",
          "nullsNotDistinct": false,
          "columns": ["email"]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_verification": {
      "name": "mail0_verification",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "identifier": {
          "name": "identifier",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "value": {
          "name": "value",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {},
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}

================
File: db/migrations/meta/0013_snapshot.json
================
{
  "id": "b619cb14-221e-4e7e-afa0-147f86e0e1e7",
  "prevId": "2a6c570d-7d11-4a14-aa4c-015655c0e609",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.mail0_account": {
      "name": "mail0_account",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "account_id": {
          "name": "account_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "provider_id": {
          "name": "provider_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "access_token": {
          "name": "access_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "refresh_token": {
          "name": "refresh_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "id_token": {
          "name": "id_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "access_token_expires_at": {
          "name": "access_token_expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "refresh_token_expires_at": {
          "name": "refresh_token_expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "scope": {
          "name": "scope",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "password": {
          "name": "password",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "mail0_account_user_id_mail0_user_id_fk": {
          "name": "mail0_account_user_id_mail0_user_id_fk",
          "tableFrom": "mail0_account",
          "tableTo": "mail0_user",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_connection": {
      "name": "mail0_connection",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "picture": {
          "name": "picture",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "access_token": {
          "name": "access_token",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "refresh_token": {
          "name": "refresh_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "scope": {
          "name": "scope",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "provider_id": {
          "name": "provider_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "mail0_connection_user_id_mail0_user_id_fk": {
          "name": "mail0_connection_user_id_mail0_user_id_fk",
          "tableFrom": "mail0_connection",
          "tableTo": "mail0_user",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "mail0_connection_email_unique": {
          "name": "mail0_connection_email_unique",
          "nullsNotDistinct": false,
          "columns": ["email"]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_early_access": {
      "name": "mail0_early_access",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "mail0_early_access_email_unique": {
          "name": "mail0_early_access_email_unique",
          "nullsNotDistinct": false,
          "columns": ["email"]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_session": {
      "name": "mail0_session",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "token": {
          "name": "token",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "ip_address": {
          "name": "ip_address",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "user_agent": {
          "name": "user_agent",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "mail0_session_user_id_mail0_user_id_fk": {
          "name": "mail0_session_user_id_mail0_user_id_fk",
          "tableFrom": "mail0_session",
          "tableTo": "mail0_user",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "mail0_session_token_unique": {
          "name": "mail0_session_token_unique",
          "nullsNotDistinct": false,
          "columns": ["token"]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_user": {
      "name": "mail0_user",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email_verified": {
          "name": "email_verified",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "image": {
          "name": "image",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "default_connection_id": {
          "name": "default_connection_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "mail0_user_email_unique": {
          "name": "mail0_user_email_unique",
          "nullsNotDistinct": false,
          "columns": ["email"]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_verification": {
      "name": "mail0_verification",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "identifier": {
          "name": "identifier",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "value": {
          "name": "value",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {},
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}

================
File: db/migrations/meta/0014_snapshot.json
================
{
  "id": "e59ed7bf-e613-4e5a-88a2-41c7b26ffd7f",
  "prevId": "b619cb14-221e-4e7e-afa0-147f86e0e1e7",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.mail0_account": {
      "name": "mail0_account",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "account_id": {
          "name": "account_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "provider_id": {
          "name": "provider_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "access_token": {
          "name": "access_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "refresh_token": {
          "name": "refresh_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "id_token": {
          "name": "id_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "access_token_expires_at": {
          "name": "access_token_expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "refresh_token_expires_at": {
          "name": "refresh_token_expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "scope": {
          "name": "scope",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "password": {
          "name": "password",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "mail0_account_user_id_mail0_user_id_fk": {
          "name": "mail0_account_user_id_mail0_user_id_fk",
          "tableFrom": "mail0_account",
          "tableTo": "mail0_user",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_connection": {
      "name": "mail0_connection",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "picture": {
          "name": "picture",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "access_token": {
          "name": "access_token",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "refresh_token": {
          "name": "refresh_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "scope": {
          "name": "scope",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "provider_id": {
          "name": "provider_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "mail0_connection_user_id_mail0_user_id_fk": {
          "name": "mail0_connection_user_id_mail0_user_id_fk",
          "tableFrom": "mail0_connection",
          "tableTo": "mail0_user",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "mail0_connection_email_unique": {
          "name": "mail0_connection_email_unique",
          "nullsNotDistinct": false,
          "columns": ["email"]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_early_access": {
      "name": "mail0_early_access",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "mail0_early_access_email_unique": {
          "name": "mail0_early_access_email_unique",
          "nullsNotDistinct": false,
          "columns": ["email"]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_session": {
      "name": "mail0_session",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "token": {
          "name": "token",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "mail0_session_user_id_mail0_user_id_fk": {
          "name": "mail0_session_user_id_mail0_user_id_fk",
          "tableFrom": "mail0_session",
          "tableTo": "mail0_user",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "mail0_session_token_unique": {
          "name": "mail0_session_token_unique",
          "nullsNotDistinct": false,
          "columns": ["token"]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_user": {
      "name": "mail0_user",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email_verified": {
          "name": "email_verified",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "image": {
          "name": "image",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "default_connection_id": {
          "name": "default_connection_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "mail0_user_email_unique": {
          "name": "mail0_user_email_unique",
          "nullsNotDistinct": false,
          "columns": ["email"]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_verification": {
      "name": "mail0_verification",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "identifier": {
          "name": "identifier",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "value": {
          "name": "value",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {},
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}

================
File: db/migrations/meta/0015_snapshot.json
================
{
  "id": "562d754a-014b-4e53-be3b-e131e9b10986",
  "prevId": "e59ed7bf-e613-4e5a-88a2-41c7b26ffd7f",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.mail0_account": {
      "name": "mail0_account",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "account_id": {
          "name": "account_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "provider_id": {
          "name": "provider_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "access_token": {
          "name": "access_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "refresh_token": {
          "name": "refresh_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "id_token": {
          "name": "id_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "access_token_expires_at": {
          "name": "access_token_expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "refresh_token_expires_at": {
          "name": "refresh_token_expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "scope": {
          "name": "scope",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "password": {
          "name": "password",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "mail0_account_user_id_mail0_user_id_fk": {
          "name": "mail0_account_user_id_mail0_user_id_fk",
          "tableFrom": "mail0_account",
          "tableTo": "mail0_user",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_connection": {
      "name": "mail0_connection",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "picture": {
          "name": "picture",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "access_token": {
          "name": "access_token",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "refresh_token": {
          "name": "refresh_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "scope": {
          "name": "scope",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "provider_id": {
          "name": "provider_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "mail0_connection_user_id_mail0_user_id_fk": {
          "name": "mail0_connection_user_id_mail0_user_id_fk",
          "tableFrom": "mail0_connection",
          "tableTo": "mail0_user",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "mail0_connection_email_unique": {
          "name": "mail0_connection_email_unique",
          "nullsNotDistinct": false,
          "columns": ["email"]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_early_access": {
      "name": "mail0_early_access",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "mail0_early_access_email_unique": {
          "name": "mail0_early_access_email_unique",
          "nullsNotDistinct": false,
          "columns": ["email"]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_session": {
      "name": "mail0_session",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "token": {
          "name": "token",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "ip_address": {
          "name": "ip_address",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "user_agent": {
          "name": "user_agent",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "mail0_session_user_id_mail0_user_id_fk": {
          "name": "mail0_session_user_id_mail0_user_id_fk",
          "tableFrom": "mail0_session",
          "tableTo": "mail0_user",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "mail0_session_token_unique": {
          "name": "mail0_session_token_unique",
          "nullsNotDistinct": false,
          "columns": ["token"]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_user": {
      "name": "mail0_user",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email_verified": {
          "name": "email_verified",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "image": {
          "name": "image",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "default_connection_id": {
          "name": "default_connection_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "mail0_user_email_unique": {
          "name": "mail0_user_email_unique",
          "nullsNotDistinct": false,
          "columns": ["email"]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mail0_verification": {
      "name": "mail0_verification",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "identifier": {
          "name": "identifier",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "value": {
          "name": "value",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {},
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}

================
File: db/migrations/0000_fine_steel_serpent.sql
================
CREATE TABLE "mail0_account" (
	"id" text PRIMARY KEY NOT NULL,
	"account_id" text NOT NULL,
	"provider_id" text NOT NULL,
	"user_id" text NOT NULL,
	"access_token" text,
	"refresh_token" text,
	"id_token" text,
	"access_token_expires_at" timestamp,
	"refresh_token_expires_at" timestamp,
	"scope" text,
	"password" text,
	"created_at" timestamp NOT NULL,
	"updated_at" timestamp NOT NULL
);
--> statement-breakpoint
CREATE TABLE "mail0_session" (
	"id" text PRIMARY KEY NOT NULL,
	"expires_at" timestamp NOT NULL,
	"token" text NOT NULL,
	"created_at" timestamp NOT NULL,
	"updated_at" timestamp NOT NULL,
	"ip_address" text,
	"user_agent" text,
	"user_id" text NOT NULL,
	CONSTRAINT "mail0_session_token_unique" UNIQUE("token")
);
--> statement-breakpoint
CREATE TABLE "mail0_user" (
	"id" text PRIMARY KEY NOT NULL,
	"name" text NOT NULL,
	"email" text NOT NULL,
	"email_verified" boolean NOT NULL,
	"image" text,
	"created_at" timestamp NOT NULL,
	"updated_at" timestamp NOT NULL,
	CONSTRAINT "mail0_user_email_unique" UNIQUE("email")
);
--> statement-breakpoint
CREATE TABLE "mail0_verification" (
	"id" text PRIMARY KEY NOT NULL,
	"identifier" text NOT NULL,
	"value" text NOT NULL,
	"expires_at" timestamp NOT NULL,
	"created_at" timestamp,
	"updated_at" timestamp
);
--> statement-breakpoint
ALTER TABLE "mail0_account" ADD CONSTRAINT "mail0_account_user_id_mail0_user_id_fk" FOREIGN KEY ("user_id") REFERENCES "public"."mail0_user"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "mail0_session" ADD CONSTRAINT "mail0_session_user_id_mail0_user_id_fk" FOREIGN KEY ("user_id") REFERENCES "public"."mail0_user"("id") ON DELETE no action ON UPDATE no action;

================
File: db/migrations/0001_greedy_darkhawk.sql
================
CREATE TABLE "mail0_early_access" (
	"id" text PRIMARY KEY NOT NULL,
	"email" text NOT NULL,
	"created_at" timestamp NOT NULL,
	"updated_at" timestamp NOT NULL,
	CONSTRAINT "mail0_early_access_email_unique" UNIQUE("email")
);

================
File: db/migrations/0002_flimsy_nightshade.sql
================
CREATE TABLE "mail0_google_account" (
	"id" text PRIMARY KEY NOT NULL,
	"user_id" text NOT NULL,
	"email" text NOT NULL,
	"access_token" text NOT NULL,
	"refresh_token" text,
	"scope" text NOT NULL,
	"expires_at" timestamp NOT NULL,
	"created_at" timestamp NOT NULL,
	"updated_at" timestamp NOT NULL
);
--> statement-breakpoint
CREATE TABLE "mail0_user_password" (
	"id" text PRIMARY KEY NOT NULL,
	"user_id" text NOT NULL,
	"hash" text NOT NULL,
	"created_at" timestamp NOT NULL,
	"updated_at" timestamp NOT NULL
);
--> statement-breakpoint
DROP TABLE "mail0_account" CASCADE;--> statement-breakpoint
ALTER TABLE "mail0_google_account" ADD CONSTRAINT "mail0_google_account_user_id_mail0_user_id_fk" FOREIGN KEY ("user_id") REFERENCES "public"."mail0_user"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "mail0_user_password" ADD CONSTRAINT "mail0_user_password_user_id_mail0_user_id_fk" FOREIGN KEY ("user_id") REFERENCES "public"."mail0_user"("id") ON DELETE no action ON UPDATE no action;

================
File: db/migrations/0003_purple_kylun.sql
================
CREATE TABLE "mail0_account" (
	"id" text PRIMARY KEY NOT NULL,
	"account_id" text NOT NULL,
	"provider_id" text NOT NULL,
	"user_id" text NOT NULL,
	"access_token" text,
	"refresh_token" text,
	"id_token" text,
	"access_token_expires_at" timestamp,
	"refresh_token_expires_at" timestamp,
	"scope" text,
	"password" text,
	"created_at" timestamp NOT NULL,
	"updated_at" timestamp NOT NULL
);
--> statement-breakpoint
CREATE TABLE "mail0_google_connection" (
	"id" text PRIMARY KEY NOT NULL,
	"user_id" text NOT NULL,
	"email" text NOT NULL,
	"access_token" text NOT NULL,
	"refresh_token" text,
	"scope" text NOT NULL,
	"expires_at" timestamp NOT NULL,
	"created_at" timestamp NOT NULL,
	"updated_at" timestamp NOT NULL
);
--> statement-breakpoint
DROP TABLE "mail0_google_account" CASCADE;--> statement-breakpoint
DROP TABLE "mail0_user_password" CASCADE;--> statement-breakpoint
ALTER TABLE "mail0_account" ADD CONSTRAINT "mail0_account_user_id_mail0_user_id_fk" FOREIGN KEY ("user_id") REFERENCES "public"."mail0_user"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "mail0_google_connection" ADD CONSTRAINT "mail0_google_connection_user_id_mail0_user_id_fk" FOREIGN KEY ("user_id") REFERENCES "public"."mail0_user"("id") ON DELETE no action ON UPDATE no action;

================
File: db/migrations/0004_quiet_grey_gargoyle.sql
================
ALTER TABLE "mail0_google_connection" ADD COLUMN "name" text;--> statement-breakpoint
ALTER TABLE "mail0_google_connection" ADD COLUMN "picture" text;

================
File: db/migrations/0005_mature_lady_deathstrike.sql
================
ALTER TABLE "mail0_google_connection" RENAME TO "mail0_connection";--> statement-breakpoint
ALTER TABLE "mail0_connection" DROP CONSTRAINT "mail0_google_connection_user_id_mail0_user_id_fk";
--> statement-breakpoint
ALTER TABLE "mail0_connection" ADD COLUMN "provider_id" text NOT NULL;--> statement-breakpoint
ALTER TABLE "mail0_session" ADD COLUMN "connectionId" text;--> statement-breakpoint
ALTER TABLE "mail0_connection" ADD CONSTRAINT "mail0_connection_user_id_mail0_user_id_fk" FOREIGN KEY ("user_id") REFERENCES "public"."mail0_user"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "mail0_connection" ADD CONSTRAINT "mail0_connection_email_unique" UNIQUE("email");

================
File: db/migrations/0006_small_unicorn.sql
================
ALTER TABLE "mail0_session" RENAME COLUMN "connectionId" TO "connection_id";

================
File: db/migrations/0007_tense_wrecking_crew.sql
================
ALTER TABLE "mail0_session" DROP COLUMN "connection_id";

================
File: db/migrations/0008_freezing_hydra.sql
================
ALTER TABLE "mail0_user" ADD COLUMN "default_connection_id" text;--> statement-breakpoint
ALTER TABLE "mail0_user" ADD CONSTRAINT "mail0_user_default_connection_id_mail0_connection_id_fk" FOREIGN KEY ("default_connection_id") REFERENCES "public"."mail0_connection"("id") ON DELETE no action ON UPDATE no action;

================
File: db/migrations/0009_boring_big_bertha.sql
================
ALTER TABLE "mail0_user" DROP CONSTRAINT "mail0_user_default_connection_id_mail0_connection_id_fk";

================
File: db/migrations/0010_dry_hemingway.sql
================
ALTER TABLE "mail0_user" DROP COLUMN "default_connection_id";

================
File: db/migrations/0011_huge_newton_destine.sql
================
ALTER TABLE "mail0_user" ADD COLUMN "default_connection_id" text;

================
File: db/migrations/0012_even_johnny_storm.sql
================
ALTER TABLE "mail0_user" ALTER COLUMN "default_connection_id" SET DEFAULT 'Yeah';

================
File: db/migrations/0013_calm_timeslip.sql
================
ALTER TABLE "mail0_user" ALTER COLUMN "default_connection_id" DROP DEFAULT;

================
File: db/migrations/0014_cuddly_energizer.sql
================
ALTER TABLE "mail0_session" DROP COLUMN "ip_address";--> statement-breakpoint
ALTER TABLE "mail0_session" DROP COLUMN "user_agent";

================
File: db/migrations/0015_minor_mister_sinister.sql
================
ALTER TABLE "mail0_session" ADD COLUMN "ip_address" text;--> statement-breakpoint
ALTER TABLE "mail0_session" ADD COLUMN "user_agent" text;

================
File: db/index.ts
================
import { drizzle } from "drizzle-orm/postgres-js";
import postgres from "postgres";

import * as schema from "./schema";
import { env } from "@/lib/env";

/**
 * Cache the database connection in development. This avoids creating a new connection on every HMR
 * update.
 */
const globalForDb = globalThis as unknown as {
  conn: postgres.Sql | undefined;
};

const conn = globalForDb.conn ?? postgres(env.DATABASE_URL!);
if (env.NODE_ENV !== "production") globalForDb.conn = conn;

export const db = drizzle(conn, { schema });

================
File: db/schema.ts
================
import { pgTableCreator, text, timestamp, boolean } from "drizzle-orm/pg-core";

export const createTable = pgTableCreator((name) => `mail0_${name}`);

export const user = createTable("user", {
  id: text("id").primaryKey(),
  name: text("name").notNull(),
  email: text("email").notNull().unique(),
  emailVerified: boolean("email_verified").notNull(),
  image: text("image"),
  createdAt: timestamp("created_at").notNull(),
  updatedAt: timestamp("updated_at").notNull(),
  defaultConnectionId: text("default_connection_id"),
});

export const session = createTable("session", {
  id: text("id").primaryKey(),
  expiresAt: timestamp("expires_at").notNull(),
  token: text("token").notNull().unique(),
  createdAt: timestamp("created_at").notNull(),
  updatedAt: timestamp("updated_at").notNull(),
  ipAddress: text("ip_address"),
  userAgent: text("user_agent"),
  userId: text("user_id")
    .notNull()
    .references(() => user.id),
});

export const account = createTable("account", {
  id: text("id").primaryKey(),
  accountId: text("account_id").notNull(),
  providerId: text("provider_id").notNull(),
  userId: text("user_id")
    .notNull()
    .references(() => user.id),
  accessToken: text("access_token"),
  refreshToken: text("refresh_token"),
  idToken: text("id_token"),
  accessTokenExpiresAt: timestamp("access_token_expires_at"),
  refreshTokenExpiresAt: timestamp("refresh_token_expires_at"),
  scope: text("scope"),
  password: text("password"),
  createdAt: timestamp("created_at").notNull(),
  updatedAt: timestamp("updated_at").notNull(),
});

export const verification = createTable("verification", {
  id: text("id").primaryKey(),
  identifier: text("identifier").notNull(),
  value: text("value").notNull(),
  expiresAt: timestamp("expires_at").notNull(),
  createdAt: timestamp("created_at"),
  updatedAt: timestamp("updated_at"),
});

export const earlyAccess = createTable("early_access", {
  id: text("id").primaryKey(),
  email: text("email").notNull().unique(),
  createdAt: timestamp("created_at").notNull(),
  updatedAt: timestamp("updated_at").notNull(),
});

export const connection = createTable("connection", {
  id: text("id").primaryKey(),
  userId: text("user_id")
    .notNull()
    .references(() => user.id),
  email: text("email").notNull().unique(),
  name: text("name"),
  picture: text("picture"),
  accessToken: text("access_token").notNull(),
  refreshToken: text("refresh_token"),
  scope: text("scope").notNull(),
  providerId: text("provider_id").notNull(),
  expiresAt: timestamp("expires_at").notNull(),
  createdAt: timestamp("created_at").notNull(),
  updatedAt: timestamp("updated_at").notNull(),
});

================
File: hooks/use-connections.ts
================
import { IConnection } from "@/types";
import axios from "axios";
import useSWR from "swr";

const fetchConnections = () => axios.get("/api/v1/mail/connections").then((r) => r.data);

export const useConnections = () => {
  // override the fetcher
  const { data, error, isLoading, mutate } = useSWR<{ connections: IConnection[] }>(
    "/api/v1/mail/connections",
    fetchConnections,
  );

  return {
    data: data?.connections,
    error,
    isLoading,
    mutate,
  };
};

================
File: hooks/use-filtered-mails.ts
================
import { Tag } from "@/components/mail/use-tags";
import { Mail } from "@/components/mail/data";
import { useMemo } from "react";

/**
 * Custom hook for filtering mails based on active tags
 * @param mails - Array of mail objects to filter
 * @param activeTags - Array of currently active tag objects
 * @returns Array of filtered mail objects
 */
export const useFilteredMails = (mails: Mail[], activeTags: Tag[]) => {
  // Create a lookup object for active tags
  const activeTagLookup = useMemo(() => {
    const lookup: Record<string, boolean> = {};
    activeTags.forEach((tag) => {
      lookup[tag.label.toLowerCase()] = true;
    });
    return lookup;
  }, [activeTags]);

  // Filter mails based on active tags
  const filteredMails = useMemo(() => {
    if (activeTags.length === 0) return mails;

    return mails.filter((mail) =>
      mail.labels.some((label) => activeTagLookup[label.toLowerCase()]),
    );
  }, [mails, activeTagLookup, activeTags.length]);

  return filteredMails;
};

================
File: hooks/use-key-pressed.ts
================
import { useState, useEffect } from "react";

type Key = string | string[];

/**
 * Hook that monitors keyboard key states
 * @param targetKey Single key or array of keys to monitor
 * @returns True if any target key is pressed
 */
export function useKeyPressed(targetKey: Key): boolean {
  const [keyPressed, setKeyPressed] = useState<boolean>(false);

  useEffect(() => {
    const keys = Array.isArray(targetKey) ? targetKey : [targetKey];

    const handleKeyDown = (event: KeyboardEvent): void => {
      if (keys.includes(event.key)) {
        setKeyPressed(true);
      }
    };

    const handleKeyUp = (event: KeyboardEvent): void => {
      if (keys.includes(event.key)) {
        setKeyPressed(false);
      }
    };

    // Reset state on window blur to prevent stuck keys
    const handleBlur = (): void => {
      setKeyPressed(false);
    };

    window.addEventListener("keydown", handleKeyDown);
    window.addEventListener("keyup", handleKeyUp);
    window.addEventListener("blur", handleBlur);

    return () => {
      window.removeEventListener("keydown", handleKeyDown);
      window.removeEventListener("keyup", handleKeyUp);
      window.removeEventListener("blur", handleBlur);
    };
  }, [targetKey]);

  return keyPressed;
}

================
File: hooks/use-media-query.ts
================
"use client";

import { useEffect, useState } from "react";

export function useMediaQuery(query: string) {
  const [matches, setMatches] = useState(false);

  useEffect(() => {
    const media = window.matchMedia(query);

    setMatches(media.matches);

    const listener = (event: MediaQueryListEvent) => {
      setMatches(event.matches);
    };

    media.addEventListener("change", listener);

    return () => {
      media.removeEventListener("change", listener);
    };
  }, [query]);

  return matches;
}

================
File: hooks/use-mobile.tsx
================
import * as React from "react";

const MOBILE_BREAKPOINT = 768;

export function useIsMobile() {
  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined);

  React.useEffect(() => {
    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`);
    const onChange = () => {
      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT);
    };
    mql.addEventListener("change", onChange);
    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT);
    return () => mql.removeEventListener("change", onChange);
  }, []);

  return !!isMobile;
}

================
File: hooks/use-open-compose-modal.ts
================
"use client";

import { parseAsBoolean, useQueryState } from "nuqs";

export const useOpenComposeModal = () => {
  const [isOpen, setIsOpen] = useQueryState(
    "open-compose",
    parseAsBoolean.withDefault(false).withOptions({ clearOnDefault: true }),
  );

  const open = () => setIsOpen(true);
  const close = () => setIsOpen(false);

  return {
    open,
    close,
    isOpen,
    setIsOpen,
  };
};

================
File: hooks/use-search-value.ts
================
import { atom, useAtom } from "jotai";

type Config = {
  value: string;
  highlight: string;
  folder: string;
};

const configAtom = atom<Config>({
  value: "",
  highlight: "",
  folder: "",
});

export function useSearchValue() {
  return useAtom(configAtom);
}

================
File: hooks/use-threads.ts
================
/* eslint-disable @typescript-eslint/no-explicit-any */

"use client";

import { getMail, getMails, markAsRead as markAsReadAction } from "@/actions/mail";
import { InitialThread, ParsedMessage } from "@/types";
import { useSession } from "@/lib/auth-client";
import useSWR, { preload } from "swr";

export const preloadThread = (userId: string, threadId: string, connectionId: string) => {
  console.log(`🔄 Prefetching email ${threadId}...`);
  preload([userId, threadId, connectionId], fetchThread);
};

// TODO: improve the filters
const fetchEmails = async (args: any[]) => {
  const [_, folder, query, max, labelIds] = args;

  const searchParams = new URLSearchParams();
  if (max) searchParams.set("max", max.toString());
  if (query) searchParams.set("q", query);
  if (folder) searchParams.set("folder", folder.toString());
  if (labelIds) searchParams.set("labelIds", labelIds.join(","));

  const data = await getMails({ folder, q: query, max, labelIds });

  return data;
};

const fetchThread = async (args: any[]) => {
  const [_, id] = args;
  const data = await getMail({ id });
  return data;
};

// Based on gmail
interface RawResponse {
  nextPageToken: number;
  threads: InitialThread[];
  resultSizeEstimate: number;
}

export const useThreads = (folder: string, labelIds?: string[], query?: string, max?: number) => {
  const { data: session } = useSession();
  const { data, isLoading, error, isValidating } = useSWR<RawResponse>(
    session?.user.id
      ? [session?.user.id, folder, query, max, labelIds, session.connectionId]
      : null,
    fetchEmails,
  );

  return {
    data: data,
    isLoading: isLoading,
    isValidating: isValidating,
    error,
  };
};

export const useThread = (id: string) => {
  const { data: session } = useSession();

  const { data, isLoading, error } = useSWR<ParsedMessage[]>(
    session?.user.id ? [session.user.id, id, session.connectionId] : null,
    fetchThread,
  );

  return { data, isLoading, error };
};

export const useMarkAsRead = () => {
  const markAsRead = async (id: string) => {
    try {
      await markAsReadAction({ id });
    } catch (error) {
      console.error("Error marking email as read:", error);
      return false;
    }
  };

  return { markAsRead };
};

================
File: lib/auth-client.ts
================
import { customSessionClient } from "better-auth/client/plugins";
import { createAuthClient } from "better-auth/react";
import type { auth } from "@/lib/auth"; // Import the auth instance as a type

export const authClient = createAuthClient({
  baseURL: process.env.NEXT_PUBLIC_APP_URL,
  plugins: [customSessionClient<typeof auth>()],
});

export const { signIn, signUp, signOut, useSession, getSession, $fetch } = authClient;

================
File: lib/auth.ts
================
/* eslint-disable @typescript-eslint/no-explicit-any */
import { connection, user as _user, account } from "@/db/schema";
import { drizzleAdapter } from "better-auth/adapters/drizzle";
import { betterAuth, BetterAuthOptions } from "better-auth";
import { customSession } from "better-auth/plugins";
import { eq } from "drizzle-orm";
import { Resend } from "resend";
import { env } from "./env";
import { db } from "@/db";

// If there is no resend key, it might be a local dev environment
// In that case, we don't want to send emails and just log them
const resend = env.RESEND_API_KEY
  ? new Resend(env.RESEND_API_KEY)
  : { emails: { send: async (...args: any[]) => console.log(args) } };

const options = {
  database: drizzleAdapter(db, {
    provider: "pg",
  }),
  advanced: {
    ipAddress: {
      disableIpTracking: true,
    },
  },
  session: {
    expiresIn: 60 * 60 * 24 * 7, // 7 days
    updateAge: 60 * 60 * 24, // 1 day (every 1 day the session expiration is updated)
  },
  socialProviders: {
    google: {
      // Remove this before going to prod, it's to force to get `refresh_token` from google, some users don't have it yet.
      prompt: "consent",
      accessType: "offline",
      scope: ["https://www.googleapis.com/auth/gmail.modify"],
      clientId: env.GOOGLE_CLIENT_ID,
      clientSecret: env.GOOGLE_CLIENT_SECRET,
    },
    github: {
      clientId: env.GITHUB_CLIENT_ID,
      clientSecret: env.GITHUB_CLIENT_SECRET,
    },
  },
  emailAndPassword: {
    enabled: false,
    requireEmailVerification: true,
    sendResetPassword: async ({ user, url }) => {
      await resend.emails.send({
        from: "Mail0 <onboarding@mail0.io>",
        to: user.email,
        subject: "Reset your password",
        html: `
          <h2>Reset Your Password</h2>
          <p>Click the link below to reset your password:</p>
          <a href="${url}">${url}</a>
          <p>If you didn't request this, you can safely ignore this email.</p>
        `,
      });
    },
  },
  emailVerification: {
    sendOnSignUp: false,
    autoSignInAfterVerification: true,
    sendVerificationEmail: async ({ user, token }) => {
      const verificationUrl = `${env.NEXT_PUBLIC_APP_URL}/api/auth/verify-email?token=${token}&callbackURL=/connect-emails`;

      await resend.emails.send({
        from: "Mail0 <onboarding@mail0.io>",
        to: user.email,
        subject: "Verify your Mail0 account",
        html: `
          <h2>Verify Your Mail0 Account</h2>
          <p>Click the link below to verify your email:</p>
          <a href="${verificationUrl}">${verificationUrl}</a>
        `,
      });
    },
  },
  plugins: [
    customSession(async ({ user, session }) => {
      const [foundUser] = await db
        .select({
          activeConnectionId: _user.defaultConnectionId,
        })
        .from(_user)
        .where(eq(_user.id, user.id))
        .limit(1);
      if (!foundUser.activeConnectionId) {
        const [defaultConnection] = await db
          .select()
          .from(connection)
          .where(eq(connection.userId, user.id))
          .limit(1);
        if (!defaultConnection) {
          // find the user account the user has
          const [userAccount] = await db
            .select()
            .from(account)
            .where(eq(account.userId, user.id))
            .limit(1);
          if (userAccount) {
            // create a new connection
            const [newConnection] = await db.insert(connection).values({
              id: crypto.randomUUID(),
              userId: user.id,
              email: user.email,
              name: user.name,
              picture: user.image,
              accessToken: userAccount.accessToken,
              refreshToken: userAccount.refreshToken,
              scope: userAccount.scope,
              providerId: userAccount.providerId,
              expiresAt: new Date(
                Date.now() + (userAccount.accessTokenExpiresAt?.getTime() || 3600000),
              ),
              createdAt: new Date(),
              updatedAt: new Date(),
            } as any);
            // this type error is pissing me tf off
            if (newConnection) {
              console.log("Created new connection for user", newConnection);
            }
          }
        }
        return {
          connectionId: defaultConnection ? defaultConnection.id : null,
          user,
          session,
        };
      }
      return {
        connectionId: foundUser.activeConnectionId,
        user,
        session,
      };
    }),
  ],
} satisfies BetterAuthOptions;

export const auth = betterAuth({
  ...options,
  trustedOrigins: env.BETTER_AUTH_TRUSTED_ORIGINS ?? [],
});

================
File: lib/constants.ts
================
export const SIDEBAR_COOKIE_NAME = "sidebar:state";
export const SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7;
export const SIDEBAR_WIDTH = "12rem";
export const SIDEBAR_WIDTH_MOBILE = "12rem";
export const SIDEBAR_WIDTH_ICON = "3rem";
export const SIDEBAR_KEYBOARD_SHORTCUT = "b";
export const BASE_URL = process.env.NEXT_PUBLIC_APP_URL;
export const MAX_URL_LENGTH = 2000;
export const ALLOWED_HTML_TAGS = [
  "p",
  "br",
  "b",
  "i",
  "em",
  "strong",
  "a",
  "img",
  "ul",
  "ol",
  "li",
  "h1",
  "h2",
  "h3",
  "h4",
  "h5",
  "h6",
  "blockquote",
  "pre",
  "code",
  "div",
  "span",
  "table",
  "thead",
  "tbody",
  "tr",
  "td",
  "th",
];

export const ALLOWED_HTML_ATTRIBUTES = {
  a: ["href", "target", "rel"],
  img: ["src", "alt", "width", "height"],
  "*": ["style", "class"],
};

export const ALLOWED_HTML_STYLES = {
  "*": {
    color: [/^#(0x)?[0-9a-f]+$/i, /^rgb\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*\)$/],
    "background-color": [
      /^#(0x)?[0-9a-f]+$/i,
      /^rgb\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*\)$/,
    ],
    "text-align": [/^left$/, /^right$/, /^center$/],
    "font-size": [/^\d+(?:px|em|%)$/],
  },
};

export const EMAIL_HTML_TEMPLATE = `
<!DOCTYPE html>
  <html>
    <head>
      <base target="_blank" />
      <meta charset="utf-8">
      <meta name="viewport" content="width=device-width, initial-scale=1">
      <style>
        body {
          margin: 0;
          padding: 16px;
          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
          line-height: 1.5;
          height: fit-content;
        }
        .auto-details summary::marker {
           content: "...";
           cursor: pointer;
        }
      </style>
    </head>
    <body>

    </body>
  </html>`;

================
File: lib/email-utils.ts
================
import { EMAIL_HTML_TEMPLATE } from "./constants";
import Color from "color";

export const template = (html: string) => {
  const htmlParser = new DOMParser();
  const doc = htmlParser.parseFromString(html, "text/html");
  const template = htmlParser.parseFromString(EMAIL_HTML_TEMPLATE, "text/html");
  Array.from(doc.head.children).forEach((child) => template.head.appendChild(child));
  template.body.innerHTML = doc.body.innerHTML;
  template.body.style.backgroundColor = getComputedStyle(document.body).getPropertyValue(
    "background-color",
  );

  template.querySelectorAll("a").forEach((a) => {
    if (a.href || !a.textContent) return;
    if (URL.canParse(a.textContent)) a.href = a.textContent;
    else if (a.textContent.includes("@")) a.href = `mailto:${a.textContent}`;
  });

  const quoteElements = [
    ".gmail_quote",
    "blockquote",
    '[class*="quote"]', // quote partial match for class names
    '[id*="quote"]', // quote partial match for id names
  ];

  for (const selector of quoteElements) {
    const element = template.querySelector(selector);
    if (!element) continue;
    const details = document.createElement("details");
    details.classList.add("auto-details");
    const summary = document.createElement("summary");
    details.appendChild(summary);
    details.appendChild(element.cloneNode(true));
    element.parentNode?.replaceChild(details, element);
    break;
  }

  return template.documentElement.outerHTML;
};

export const fixNonReadableColors = (rootElement: HTMLElement, minContrast = 3.5) => {
  const elements = Array.from<HTMLElement>(rootElement.querySelectorAll("*"));
  elements.unshift(rootElement);

  for (const el of elements) {
    const style = getComputedStyle(el);
    if (style.display === "none" || style.visibility === "hidden") continue;

    const textColor = Color(style.color);
    const effectiveBg = getEffectiveBackgroundColor(el);

    const blendedText =
      textColor.alpha() < 1 ? effectiveBg.mix(textColor, effectiveBg.alpha()) : textColor;
    const contrast = blendedText.contrast(effectiveBg);

    if (contrast < minContrast) {
      const blackContrast = Color("#000000").contrast(effectiveBg);
      const whiteContrast = Color("#ffffff").contrast(effectiveBg);
      el.style.color = blackContrast >= whiteContrast ? "#000000" : "#ffffff";
    }
  }
};

const getEffectiveBackgroundColor = (element: HTMLElement) => {
  let current: HTMLElement | null = element;
  while (current) {
    const bg = Color(getComputedStyle(current).backgroundColor);
    if (bg.alpha() >= 1) return bg.rgb();
    current = current.parentElement;
  }
  return Color("#ffffff");
};

================
File: lib/env.ts
================
import { createEnv } from "@t3-oss/env-nextjs";
import { z } from "zod";

export const env = createEnv({
  emptyStringAsUndefined: true,
  onValidationError: (issues) => {
    console.error("Failed to validate environment variables, Please make sure these are valid:");
    console.error(issues.map((issue) => `${issue.path}: ${issue.message}`).join("\n"));
    process.exit(1);
  },
  server: {
    NODE_ENV: z.enum(["development", "production", "test"]).default("development"),
    DATABASE_URL: z.string().min(1),
    BETTER_AUTH_SECRET: z.string().min(1),
    BETTER_AUTH_URL: z.string().min(1).url(),
    BETTER_AUTH_TRUSTED_ORIGINS: z
      .string()
      .transform((s) => s.split(",").map((origin) => origin.trim()))
      .pipe(z.array(z.string().url())),
    GOOGLE_CLIENT_ID: z.string().min(1),
    GOOGLE_CLIENT_SECRET: z.string().min(1),
    GOOGLE_REDIRECT_URI: z.string().min(1).url(),
    GITHUB_CLIENT_ID: z.string().min(1),
    GITHUB_CLIENT_SECRET: z.string().min(1),
    REDIS_URL: z.string().min(1).url().optional(),
    REDIS_TOKEN: z.string().min(1).optional(),
    RESEND_API_KEY: z.string().min(1).optional(),
  },
  client: {
    NEXT_PUBLIC_APP_URL: z.string().min(1).url(),
  },
  experimental__runtimeEnv: {
    NEXT_PUBLIC_APP_URL: process.env.NEXT_PUBLIC_APP_URL,
    ...process.env,
  },
});

================
File: lib/idb.ts
================
import type { Cache, State } from "swr";
import Dexie from "dexie";

interface CacheEntry {
  key: string;
  state: State<any>;
  timestamp: number;
}

class SWRDatabase extends Dexie {
  cache!: Dexie.Table<CacheEntry, string>;

  constructor() {
    super("SWRCache");
    this.version(1).stores({
      cache: "key,timestamp",
    });
  }
}

const db = new SWRDatabase();
const ONE_DAY = 1000 * 60 * 60 * 24;

export function dexieStorageProvider(_: Readonly<Cache>): Cache {
  const memoryCache = new Map<string, State<any>>();

  db.cache
    .each((entry) => {
      if (Date.now() - entry.timestamp <= ONE_DAY) {
        memoryCache.set(entry.key, entry.state);
      } else {
        db.cache.delete(entry.key).catch(console.error);
      }
    })
    .catch(console.error);

  return {
    keys() {
      return memoryCache.keys();
    },

    get(key: string) {
      return memoryCache.get(key);
    },

    set(key: string, value: State) {
      // Don't cache promises or undefined data
      if (value.data instanceof Promise || value.data === undefined) return;

      console.log(key, value);

      memoryCache.set(key, value);

      // Sync to IndexedDB in the background
      db.cache
        .put({
          key,
          state: value,
          timestamp: Date.now(),
        })
        .catch(console.error);
    },

    delete(key: string) {
      memoryCache.delete(key);

      // Sync to IndexedDB in the background
      db.cache.delete(key).catch(console.error);
    },
  };
}

================
File: lib/providers.tsx
================
"use client";

import { ThemeProvider as NextThemesProvider } from "next-themes";
import { SidebarProvider } from "@/components/ui/sidebar";
import { NuqsAdapter } from "nuqs/adapters/next/app";
import { Provider as JotaiProvider } from "jotai";

export function Providers({ children, ...props }: React.ComponentProps<typeof NextThemesProvider>) {
  return (
    <JotaiProvider>
      <NuqsAdapter>
        <NextThemesProvider {...props}>
          <SidebarProvider>{children}</SidebarProvider>
        </NextThemesProvider>
      </NuqsAdapter>
    </JotaiProvider>
  );
}

================
File: lib/rateLimit.ts
================
/**
 * Rate limiting helper functions to enforce API request limits.
 * @module rateLimit
 */

import { Ratelimit } from "@upstash/ratelimit";
import { redis } from "@/lib/redis";

const RATE_LIMIT_TIME_FRAME = 24 * 60 * 60 * 1000; // 24 hours
const RATE_LIMIT_MAX_REQUESTS = 5; // Max 5 requests per IP per time frame

/**
 * Creates a waitlist rate limiter with a sliding window limit of 5 requests per 24 hours.
 * @returns {Promise<Ratelimit>} A promise that resolves to the rate limiter instance.
 */
export async function waitlistRateLimiter() {
  return new Ratelimit({
    redis,
    limiter: Ratelimit.slidingWindow(RATE_LIMIT_MAX_REQUESTS, "24 h"),
    timeout: RATE_LIMIT_TIME_FRAME, // 24 hours
  });
}

================
File: lib/redis.ts
================
import { Redis } from "@upstash/redis";
import { env } from "@/lib/env";

export const redis = new Redis({ url: env.REDIS_URL, token: env.REDIS_TOKEN });

================
File: lib/site-config.ts
================
import { Metadata } from "next";

const TITLE = "0 Email";
const DESCRIPTION = "An Open Source Gmail Alternative.";

const BASE_URL = "https://mail0.io";

export const siteConfig: Metadata = {
  title: TITLE,
  description: DESCRIPTION,
  icons: {
    icon: "/favicon.ico",
  },
  applicationName: "0 Email",
  creator: "Open Source Developers",

  category: "AU",
  alternates: {
    canonical: BASE_URL,
  },
  keywords: [
    "Mail",
    "Email",
    "Open Source",
    "Email Client",
    "Gmail Alternative",
    "Webmail",
    "Secure Email",
    "Email Management",
    "Email Platform",
    "Communication Tool",
    "Productivity",
    "Business Email",
    "Personal Email",
    "Mail Server",
    "Email Software",
    "Collaboration",
    "Message Management",
    "Digital Communication",
    "Email Service",
    "Web Application",
  ],
  metadataBase: new URL(BASE_URL),
};

================
File: lib/utils.ts
================
import { format, isToday, isThisMonth, differenceInCalendarMonths } from "date-fns";
import { MAX_URL_LENGTH } from "./constants";
import { clsx, type ClassValue } from "clsx";
import { twMerge } from "tailwind-merge";
import LZString from "lz-string";
import axios from "axios";

export const cn = (...inputs: ClassValue[]) => twMerge(clsx(inputs));

export const compressText = (text: string): string => {
  const compressed = LZString.compressToEncodedURIComponent(text);
  return compressed.slice(0, MAX_URL_LENGTH);
};

export const decompressText = (compressed: string): string => {
  return LZString.decompressFromEncodedURIComponent(compressed) || "";
};

export const getCookie = (key: string): string | null => {
  const cookies = Object.fromEntries(
    document.cookie.split("; ").map((v) => v.split(/=(.*)/s).map(decodeURIComponent)),
  );
  return cookies?.[key] ?? null;
};

export const formatDate = (date: string) => {
  try {
    if (isToday(date)) return format(date, "h:mm a");
    if (isThisMonth(date) || differenceInCalendarMonths(new Date(), date) === 1)
      return format(date, "MMM dd");

    return format(date, "MM/dd/yy");
  } catch (error) {
    console.error("Error formatting date", error);
    return "";
  }
};

export const cleanEmailAddress = (email: string = "") => {
  return email.replace(/[<>]/g, "").trim();
};

export const truncateFileName = (name: string, maxLength = 15) => {
  if (name.length <= maxLength) return name;
  const extIndex = name.lastIndexOf(".");
  if (extIndex !== -1 && name.length - extIndex <= 5) {
    return `${name.slice(0, maxLength - 5)}...${name.slice(extIndex)}`;
  }
  return `${name.slice(0, maxLength)}...`;
};

export const fetcher = (url: string) => axios.get(url).then((res) => res.data);

================
File: public/assets/m0 rounded edges.svg
================
<svg width="1750" height="1750" viewBox="0 0 1750 1750" fill="none" xmlns="http://www.w3.org/2000/svg">
<rect width="1750" height="1750" rx="300" fill="#0A0A0A"/>
<path d="M1314.13 789.046C1314.13 761.411 1300.97 735.532 1279.04 718.864L928.134 455.682C912.949 444.293 894.479 438.136 875.498 438.136C856.516 438.136 838.047 444.293 822.861 455.682L471.952 718.864C461.057 727.035 452.214 737.631 446.123 749.813C440.032 761.994 436.861 775.426 436.861 789.046M1314.13 789.046V1227.68C1314.13 1250.95 1304.89 1273.26 1288.44 1289.71C1271.99 1306.17 1249.67 1315.41 1226.41 1315.41H524.589C501.322 1315.41 479.008 1306.17 462.556 1289.71C446.104 1273.26 436.861 1250.95 436.861 1227.68V789.046M1314.13 789.046L920.677 1039.07C907.135 1047.55 891.478 1052.05 875.498 1052.05C859.517 1052.05 843.86 1047.55 830.318 1039.07L436.861 789.046" stroke="#FAFAFA" stroke-width="118.519" stroke-linecap="round" stroke-linejoin="round"/>
</svg>

================
File: public/assets/m0 w lines rounded edges.svg
================
<svg width="1750" height="1750" viewBox="0 0 1750 1750" fill="none" xmlns="http://www.w3.org/2000/svg">
<g clip-path="url(#clip0_750_235)">
<rect width="1750" height="1750" rx="300" fill="#0A0A0A"/>
<line x1="279.159" y1="2.53916e-07" x2="279.159" y2="1750" stroke="#737373" stroke-width="4.00229" stroke-dasharray="100.06 100.06"/>
<line x1="1474.84" y1="2.53916e-07" x2="1474.84" y2="1750" stroke="#737373" stroke-width="4.00229" stroke-dasharray="100.06 100.06"/>
<line y1="292.167" x2="1750" y2="292.167" stroke="#737373" stroke-width="4.00229" stroke-dasharray="100.06 100.06"/>
<line y1="1452.83" x2="1750" y2="1452.83" stroke="#737373" stroke-width="4.00229" stroke-dasharray="100.06 100.06"/>
<path d="M1314.13 789.046C1314.13 761.412 1300.97 735.532 1279.04 718.864L928.134 455.682C912.949 444.293 894.479 438.137 875.498 438.137C856.516 438.137 838.047 444.293 822.861 455.682L471.952 718.864C461.057 727.036 452.214 737.632 446.123 749.813C440.032 761.994 436.861 775.427 436.861 789.046M1314.13 789.046V1227.68C1314.13 1250.95 1304.89 1273.26 1288.44 1289.71C1271.99 1306.17 1249.67 1315.41 1226.41 1315.41H524.589C501.322 1315.41 479.008 1306.17 462.556 1289.71C446.104 1273.26 436.861 1250.95 436.861 1227.68V789.046M1314.13 789.046L920.677 1039.07C907.135 1047.55 891.478 1052.05 875.498 1052.05C859.517 1052.05 843.86 1047.55 830.318 1039.07L436.861 789.046" stroke="#FAFAFA" stroke-width="118.519" stroke-linecap="round" stroke-linejoin="round"/>
</g>
<defs>
<clipPath id="clip0_750_235">
<rect width="1750" height="1750" rx="300" fill="white"/>
</clipPath>
</defs>
</svg>

================
File: public/assets/m0 w lines.svg
================
<svg width="1750" height="1750" viewBox="0 0 1750 1750" fill="none" xmlns="http://www.w3.org/2000/svg">
<g clip-path="url(#clip0_750_217)">
<rect width="1750" height="1750" fill="#0A0A0A"/>
<line x1="279.159" y1="2.53916e-07" x2="279.159" y2="1750" stroke="#737373" stroke-width="4.00229" stroke-dasharray="100.06 100.06"/>
<line x1="1474.84" y1="2.53916e-07" x2="1474.84" y2="1750" stroke="#737373" stroke-width="4.00229" stroke-dasharray="100.06 100.06"/>
<line y1="292.167" x2="1750" y2="292.167" stroke="#737373" stroke-width="4.00229" stroke-dasharray="100.06 100.06"/>
<line y1="1452.83" x2="1750" y2="1452.83" stroke="#737373" stroke-width="4.00229" stroke-dasharray="100.06 100.06"/>
<path d="M1314.13 789.046C1314.13 761.412 1300.97 735.532 1279.04 718.864L928.134 455.682C912.949 444.293 894.479 438.137 875.498 438.137C856.516 438.137 838.047 444.293 822.861 455.682L471.952 718.864C461.057 727.036 452.214 737.632 446.123 749.813C440.032 761.994 436.861 775.427 436.861 789.046M1314.13 789.046V1227.68C1314.13 1250.95 1304.89 1273.26 1288.44 1289.71C1271.99 1306.17 1249.67 1315.41 1226.41 1315.41H524.589C501.322 1315.41 479.008 1306.17 462.556 1289.71C446.104 1273.26 436.861 1250.95 436.861 1227.68V789.046M1314.13 789.046L920.677 1039.07C907.135 1047.55 891.478 1052.05 875.498 1052.05C859.517 1052.05 843.86 1047.55 830.318 1039.07L436.861 789.046" stroke="#FAFAFA" stroke-width="118.519" stroke-linecap="round" stroke-linejoin="round"/>
</g>
<defs>
<clipPath id="clip0_750_217">
<rect width="1750" height="1750" fill="white"/>
</clipPath>
</defs>
</svg>

================
File: public/assets/m0.svg
================
<svg width="1750" height="1750" viewBox="0 0 1750 1750" fill="none" xmlns="http://www.w3.org/2000/svg">
<rect width="1750" height="1750" fill="#0A0A0A"/>
<path d="M1313.63 789.545C1313.63 761.911 1300.47 736.032 1278.54 719.363L927.633 456.182C912.448 444.793 893.978 438.636 874.997 438.636C856.015 438.636 837.546 444.793 822.36 456.182L471.451 719.363C460.556 727.535 451.713 738.131 445.622 750.312C439.531 762.494 436.36 775.926 436.36 789.545M1313.63 789.545V1228.18C1313.63 1251.45 1304.39 1273.76 1287.94 1290.21C1271.49 1306.67 1249.17 1315.91 1225.91 1315.91H524.088C500.821 1315.91 478.507 1306.67 462.055 1290.21C445.603 1273.76 436.36 1251.45 436.36 1228.18V789.545M1313.63 789.545L920.176 1039.57C906.634 1048.05 890.977 1052.55 874.997 1052.55C859.016 1052.55 843.359 1048.05 829.817 1039.57L436.36 789.545" stroke="#FAFAFA" stroke-width="118.519" stroke-linecap="round" stroke-linejoin="round"/>
</svg>

================
File: public/assets/mail0.io - Text + logo w lines.svg
================
<svg width="5250" height="1750" viewBox="0 0 5250 1750" fill="none" xmlns="http://www.w3.org/2000/svg">
<g clip-path="url(#clip0_748_224)">
<rect width="5250" height="1750" fill="#0A0A0A"/>
<line x1="806" y1="8.74228e-08" x2="806" y2="1750" stroke="#737373" stroke-width="4" stroke-dasharray="100 100"/>
<line x1="4275" y1="8.74228e-08" x2="4275" y2="1750" stroke="#737373" stroke-width="4" stroke-dasharray="100 100"/>
<line y1="292" x2="5250" y2="292" stroke="#737373" stroke-width="4" stroke-dasharray="100 100"/>
<line y1="1452" x2="5250" y2="1452" stroke="#737373" stroke-width="4" stroke-dasharray="100 100"/>
<path d="M1830.5 837.41C1830.5 825.251 1824.71 813.864 1815.06 806.53L1660.66 690.73C1653.98 685.719 1645.85 683.01 1637.5 683.01C1629.15 683.01 1621.02 685.719 1614.34 690.73L1459.94 806.53C1455.15 810.126 1451.26 814.788 1448.58 820.148C1445.9 825.508 1444.5 831.418 1444.5 837.41M1830.5 837.41V1030.41C1830.5 1040.65 1826.43 1050.47 1819.19 1057.7C1811.96 1064.94 1802.14 1069.01 1791.9 1069.01H1483.1C1472.86 1069.01 1463.04 1064.94 1455.81 1057.7C1448.57 1050.47 1444.5 1040.65 1444.5 1030.41V837.41M1830.5 837.41L1657.38 947.42C1651.42 951.153 1644.53 953.133 1637.5 953.133C1630.47 953.133 1623.58 951.153 1617.62 947.42L1444.5 837.41" stroke="#FAFAFA" stroke-width="45" stroke-linecap="round" stroke-linejoin="round"/>
<path d="M1917.5 1085.53V771.232H1963.16L1964.94 850.697L1957.83 848.324C1961.38 830.929 1967.51 816.104 1976.21 803.848C1985.3 791.197 1996.37 781.511 2009.42 774.79C2022.46 767.674 2036.89 764.116 2052.71 764.116C2079.99 764.116 2102.13 771.627 2119.13 786.65C2136.52 801.674 2147.39 822.627 2151.74 849.51L2142.25 848.917C2145.42 830.732 2151.15 815.511 2159.45 803.255C2168.15 790.604 2179.22 780.918 2192.66 774.197C2206.1 767.476 2221.52 764.116 2238.92 764.116C2261.45 764.116 2280.43 768.86 2295.85 778.348C2311.27 787.441 2322.93 800.883 2330.83 818.673C2338.74 836.464 2342.7 858.01 2342.7 883.313V1085.53H2292.88V893.987C2292.88 865.522 2287.35 844.173 2276.28 829.941C2265.21 815.313 2248.8 807.999 2227.06 807.999C2212.43 807.999 2199.58 811.557 2188.51 818.673C2177.84 825.79 2169.53 836.069 2163.6 849.51C2157.67 862.557 2154.71 878.568 2154.71 897.545V1085.53H2104.89V897.545C2104.89 869.476 2099.95 847.534 2090.07 831.72C2080.19 815.906 2063.58 807.999 2040.26 807.999C2025.63 807.999 2012.78 811.557 2001.71 818.673C1991.03 825.79 1982.53 836.069 1976.21 849.51C1970.28 862.952 1967.31 878.964 1967.31 897.545V1085.53H1917.5Z" fill="#FAFAFA"/>
<path d="M2498.77 1092.65C2466.35 1092.65 2440.46 1085.14 2421.08 1070.11C2402.11 1055.09 2392.62 1034.14 2392.62 1007.25C2392.62 980.37 2400.53 959.219 2416.34 943.801C2432.15 928.382 2457.26 917.51 2491.65 911.185L2603.14 890.429C2603.14 863.941 2596.82 844.173 2584.17 831.127C2571.91 818.08 2553.33 811.557 2528.42 811.557C2506.68 811.557 2489.48 816.499 2476.83 826.383C2464.18 835.871 2455.48 849.708 2450.74 867.894L2397.96 863.743C2403.89 834.092 2418.12 810.174 2440.65 791.988C2463.58 773.406 2492.84 764.116 2528.42 764.116C2568.75 764.116 2599.58 775.581 2620.93 798.511C2642.28 821.046 2652.96 852.278 2652.96 892.208V1022.08C2652.96 1029.2 2654.14 1034.34 2656.51 1037.5C2659.28 1040.27 2663.63 1041.65 2669.56 1041.65H2682.01V1085.53C2680.43 1085.93 2677.86 1086.13 2674.3 1086.13C2670.75 1086.52 2666.99 1086.72 2663.04 1086.72C2648.8 1086.72 2637.14 1084.54 2628.05 1080.2C2619.35 1075.45 2613.03 1068.33 2609.07 1058.85C2605.12 1048.96 2603.14 1036.11 2603.14 1020.3L2609.07 1021.49C2606.3 1034.93 2599.58 1047.18 2588.91 1058.25C2578.24 1068.93 2564.99 1077.43 2549.18 1083.75C2533.36 1089.68 2516.56 1092.65 2498.77 1092.65ZM2503.51 1048.77C2524.47 1048.77 2542.26 1044.81 2556.89 1036.9C2571.91 1028.6 2583.37 1017.53 2591.28 1003.7C2599.19 989.463 2603.14 973.649 2603.14 956.254V933.719L2501.14 952.696C2479.79 956.649 2464.97 962.777 2456.67 971.08C2448.76 978.987 2444.81 989.463 2444.81 1002.51C2444.81 1017.14 2449.95 1028.6 2460.22 1036.9C2470.9 1044.81 2485.33 1048.77 2503.51 1048.77Z" fill="#FAFAFA"/>
<path d="M2718.17 1085.53V771.232H2767.98V1085.53H2718.17ZM2716.98 722.011V663.895H2769.17V722.011H2716.98Z" fill="#FAFAFA"/>
<path d="M2901.04 1085.53C2882.86 1085.53 2868.03 1080.79 2856.57 1071.3C2845.1 1061.81 2839.37 1046.79 2839.37 1026.23V664.488H2889.18V1022.08C2889.18 1028.4 2890.76 1033.35 2893.93 1036.9C2897.48 1040.07 2902.43 1041.65 2908.75 1041.65H2936.03V1085.53H2901.04Z" fill="#FAFAFA"/>
<path d="M3128.53 1095.02C3094.53 1095.02 3065.07 1086.13 3040.17 1068.33C3015.26 1050.54 2995.89 1025.24 2982.05 992.428C2968.61 959.615 2961.89 920.673 2961.89 875.603C2961.89 830.534 2968.61 791.592 2982.05 758.778C2995.89 725.569 3015.26 700.069 3040.17 682.279C3065.07 664.093 3094.53 655 3128.53 655C3162.92 655 3192.57 664.093 3217.48 682.279C3242.39 700.069 3261.56 725.372 3275 758.185C3288.84 790.999 3295.76 830.139 3295.76 875.603C3295.76 920.673 3288.84 959.615 3275 992.428C3261.56 1025.24 3242.39 1050.54 3217.48 1068.33C3192.57 1086.13 3162.92 1095.02 3128.53 1095.02ZM3128.53 1045.21C3164.9 1045.21 3192.97 1030.58 3212.73 1001.32C3232.5 971.673 3242.39 929.766 3242.39 875.603C3242.39 839.231 3237.84 808.394 3228.75 783.092C3220.05 757.395 3207.2 738.023 3190.2 724.976C3173.59 711.535 3153.04 704.814 3128.53 704.814C3104.41 704.814 3083.85 711.535 3066.85 724.976C3050.25 738.023 3037.4 757.395 3028.3 783.092C3019.61 808.394 3015.26 839.231 3015.26 875.603C3015.26 929.766 3025.14 971.673 3044.91 1001.32C3064.68 1030.58 3092.55 1045.21 3128.53 1045.21Z" fill="#FAFAFA"/>
<path d="M3322.18 1085.53V1018.52H3389.19V1085.53H3322.18Z" fill="#FAFAFA"/>
<path d="M3445.04 1085.53V771.232H3494.85V1085.53H3445.04ZM3443.85 722.011V663.895H3496.04V722.011H3443.85Z" fill="#FAFAFA"/>
<path d="M3688.99 1092.65C3660.13 1092.65 3634.83 1085.93 3613.08 1072.49C3591.34 1059.04 3574.54 1040.07 3562.68 1015.56C3550.82 990.649 3544.89 961.591 3544.89 928.382C3544.89 894.778 3550.82 865.72 3562.68 841.208C3574.54 816.697 3591.34 797.72 3613.08 784.278C3634.83 770.837 3660.13 764.116 3688.99 764.116C3717.85 764.116 3742.95 770.837 3764.3 784.278C3786.05 797.72 3802.85 816.697 3814.71 841.208C3826.57 865.72 3832.5 894.778 3832.5 928.382C3832.5 961.591 3826.57 990.649 3814.71 1015.56C3802.85 1040.07 3786.05 1059.04 3764.3 1072.49C3742.95 1085.93 3717.85 1092.65 3688.99 1092.65ZM3688.99 1045.21C3717.85 1045.21 3740.19 1034.93 3756 1014.37C3772.21 993.417 3780.31 964.754 3780.31 928.382C3780.31 892.01 3772.21 863.545 3756 842.987C3740.19 822.034 3717.85 811.557 3688.99 811.557C3660.13 811.557 3637.59 822.034 3621.38 842.987C3605.18 863.545 3597.07 892.01 3597.07 928.382C3597.07 964.754 3605.18 993.417 3621.38 1014.37C3637.59 1034.93 3660.13 1045.21 3688.99 1045.21Z" fill="#FAFAFA"/>
</g>
<defs>
<clipPath id="clip0_748_224">
<rect width="5250" height="1750" fill="white"/>
</clipPath>
</defs>
</svg>

================
File: public/assets/mail0.io - Text w lines.svg
================
<svg width="5250" height="1750" viewBox="0 0 5250 1750" fill="none" xmlns="http://www.w3.org/2000/svg">
<g clip-path="url(#clip0_750_255)">
<rect width="5250" height="1750" fill="#0A0A0A"/>
<line x1="806" y1="8.74228e-08" x2="806" y2="1750" stroke="#737373" stroke-width="4" stroke-dasharray="100 100"/>
<line x1="4275" y1="8.74228e-08" x2="4275" y2="1750" stroke="#737373" stroke-width="4" stroke-dasharray="100 100"/>
<line y1="292" x2="5250" y2="292" stroke="#737373" stroke-width="4" stroke-dasharray="100 100"/>
<line y1="1452" x2="5250" y2="1452" stroke="#737373" stroke-width="4" stroke-dasharray="100 100"/>
<path d="M1668 1085.53V771.232H1713.66L1715.44 850.697L1708.33 848.324C1711.88 830.929 1718.01 816.104 1726.71 803.848C1735.8 791.197 1746.87 781.511 1759.92 774.79C1772.96 767.674 1787.39 764.116 1803.21 764.116C1830.49 764.116 1852.63 771.627 1869.63 786.65C1887.02 801.674 1897.89 822.627 1902.24 849.51L1892.75 848.917C1895.92 830.732 1901.65 815.511 1909.95 803.255C1918.65 790.604 1929.72 780.918 1943.16 774.197C1956.6 767.476 1972.02 764.116 1989.42 764.116C2011.95 764.116 2030.93 768.86 2046.35 778.348C2061.77 787.441 2073.43 800.883 2081.33 818.673C2089.24 836.464 2093.2 858.01 2093.2 883.313V1085.53H2043.38V893.987C2043.38 865.522 2037.85 844.173 2026.78 829.941C2015.71 815.313 1999.3 807.999 1977.56 807.999C1962.93 807.999 1950.08 811.557 1939.01 818.673C1928.34 825.79 1920.03 836.069 1914.1 849.51C1908.17 862.557 1905.21 878.568 1905.21 897.545V1085.53H1855.39V897.545C1855.39 869.476 1850.45 847.534 1840.57 831.72C1830.69 815.906 1814.08 807.999 1790.76 807.999C1776.13 807.999 1763.28 811.557 1752.21 818.673C1741.53 825.79 1733.03 836.069 1726.71 849.51C1720.78 862.952 1717.81 878.964 1717.81 897.545V1085.53H1668Z" fill="#FAFAFA"/>
<path d="M2249.27 1092.65C2216.85 1092.65 2190.96 1085.14 2171.58 1070.11C2152.61 1055.09 2143.12 1034.14 2143.12 1007.25C2143.12 980.37 2151.03 959.219 2166.84 943.801C2182.65 928.382 2207.76 917.51 2242.15 911.185L2353.64 890.429C2353.64 863.941 2347.32 844.173 2334.67 831.127C2322.41 818.08 2303.83 811.557 2278.92 811.557C2257.18 811.557 2239.98 816.499 2227.33 826.383C2214.68 835.871 2205.98 849.708 2201.24 867.894L2148.46 863.743C2154.39 834.092 2168.62 810.174 2191.15 791.988C2214.08 773.406 2243.34 764.116 2278.92 764.116C2319.25 764.116 2350.08 775.581 2371.43 798.511C2392.78 821.046 2403.46 852.278 2403.46 892.208V1022.08C2403.46 1029.2 2404.64 1034.34 2407.01 1037.5C2409.78 1040.27 2414.13 1041.65 2420.06 1041.65H2432.51V1085.53C2430.93 1085.93 2428.36 1086.13 2424.8 1086.13C2421.25 1086.52 2417.49 1086.72 2413.54 1086.72C2399.3 1086.72 2387.64 1084.54 2378.55 1080.2C2369.85 1075.45 2363.53 1068.33 2359.57 1058.85C2355.62 1048.96 2353.64 1036.11 2353.64 1020.3L2359.57 1021.49C2356.8 1034.93 2350.08 1047.18 2339.41 1058.25C2328.74 1068.93 2315.49 1077.43 2299.68 1083.75C2283.86 1089.68 2267.06 1092.65 2249.27 1092.65ZM2254.01 1048.77C2274.97 1048.77 2292.76 1044.81 2307.39 1036.9C2322.41 1028.6 2333.87 1017.53 2341.78 1003.7C2349.69 989.463 2353.64 973.649 2353.64 956.254V933.719L2251.64 952.696C2230.29 956.649 2215.47 962.777 2207.17 971.08C2199.26 978.987 2195.31 989.463 2195.31 1002.51C2195.31 1017.14 2200.45 1028.6 2210.72 1036.9C2221.4 1044.81 2235.83 1048.77 2254.01 1048.77Z" fill="#FAFAFA"/>
<path d="M2468.67 1085.53V771.232H2518.48V1085.53H2468.67ZM2467.48 722.011V663.895H2519.67V722.011H2467.48Z" fill="#FAFAFA"/>
<path d="M2651.54 1085.53C2633.36 1085.53 2618.53 1080.79 2607.07 1071.3C2595.6 1061.81 2589.87 1046.79 2589.87 1026.23V664.488H2639.68V1022.08C2639.68 1028.4 2641.26 1033.35 2644.43 1036.9C2647.98 1040.07 2652.93 1041.65 2659.25 1041.65H2686.53V1085.53H2651.54Z" fill="#FAFAFA"/>
<path d="M2879.03 1095.02C2845.03 1095.02 2815.57 1086.13 2790.67 1068.33C2765.76 1050.54 2746.39 1025.24 2732.55 992.428C2719.11 959.615 2712.39 920.673 2712.39 875.603C2712.39 830.534 2719.11 791.592 2732.55 758.778C2746.39 725.569 2765.76 700.069 2790.67 682.279C2815.57 664.093 2845.03 655 2879.03 655C2913.42 655 2943.07 664.093 2967.98 682.279C2992.89 700.069 3012.06 725.372 3025.5 758.185C3039.34 790.999 3046.26 830.139 3046.26 875.603C3046.26 920.673 3039.34 959.615 3025.5 992.428C3012.06 1025.24 2992.89 1050.54 2967.98 1068.33C2943.07 1086.13 2913.42 1095.02 2879.03 1095.02ZM2879.03 1045.21C2915.4 1045.21 2943.47 1030.58 2963.23 1001.32C2983 971.673 2992.89 929.766 2992.89 875.603C2992.89 839.231 2988.34 808.394 2979.25 783.092C2970.55 757.395 2957.7 738.023 2940.7 724.976C2924.09 711.535 2903.54 704.814 2879.03 704.814C2854.91 704.814 2834.35 711.535 2817.35 724.976C2800.75 738.023 2787.9 757.395 2778.8 783.092C2770.11 808.394 2765.76 839.231 2765.76 875.603C2765.76 929.766 2775.64 971.673 2795.41 1001.32C2815.18 1030.58 2843.05 1045.21 2879.03 1045.21Z" fill="#FAFAFA"/>
<path d="M3072.68 1085.53V1018.52H3139.69V1085.53H3072.68Z" fill="#FAFAFA"/>
<path d="M3195.54 1085.53V771.232H3245.35V1085.53H3195.54ZM3194.35 722.011V663.895H3246.54V722.011H3194.35Z" fill="#FAFAFA"/>
<path d="M3439.49 1092.65C3410.63 1092.65 3385.33 1085.93 3363.58 1072.49C3341.84 1059.04 3325.04 1040.07 3313.18 1015.56C3301.32 990.649 3295.39 961.591 3295.39 928.382C3295.39 894.778 3301.32 865.72 3313.18 841.208C3325.04 816.697 3341.84 797.72 3363.58 784.278C3385.33 770.837 3410.63 764.116 3439.49 764.116C3468.35 764.116 3493.45 770.837 3514.8 784.278C3536.55 797.72 3553.35 816.697 3565.21 841.208C3577.07 865.72 3583 894.778 3583 928.382C3583 961.591 3577.07 990.649 3565.21 1015.56C3553.35 1040.07 3536.55 1059.04 3514.8 1072.49C3493.45 1085.93 3468.35 1092.65 3439.49 1092.65ZM3439.49 1045.21C3468.35 1045.21 3490.69 1034.93 3506.5 1014.37C3522.71 993.417 3530.81 964.754 3530.81 928.382C3530.81 892.01 3522.71 863.545 3506.5 842.987C3490.69 822.034 3468.35 811.557 3439.49 811.557C3410.63 811.557 3388.09 822.034 3371.88 842.987C3355.68 863.545 3347.57 892.01 3347.57 928.382C3347.57 964.754 3355.68 993.417 3371.88 1014.37C3388.09 1034.93 3410.63 1045.21 3439.49 1045.21Z" fill="#FAFAFA"/>
</g>
<defs>
<clipPath id="clip0_750_255">
<rect width="5250" height="1750" fill="white"/>
</clipPath>
</defs>
</svg>

================
File: public/black-icon.svg
================
<svg width="191" height="191" viewBox="0 0 191 191" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M38.125 190.625V152.5H0V38.125H38.125V0H152.5V38.125H190.625V152.5H152.5V190.625H38.125ZM38.125 114.375H76.25V150.975H152.5V76.25H114.375V114.375H76.25V76.25H114.375V39.65H38.125V114.375Z" fill="#151517"/>
</svg>

================
File: public/mail.svg
================
<svg width="515" height="344" viewBox="0 0 515 344" fill="none" xmlns="http://www.w3.org/2000/svg">
<g clip-path="url(#clip0_19_2)">
<g filter="url(#filter0_dddd_19_2)">
<rect width="515" height="343.333" rx="28.6111" transform="matrix(1 0 0 -1 0 343.333)" fill="url(#paint0_linear_19_2)"/>
<rect x="-1.78819" y="1.78819" width="518.576" height="346.91" rx="30.3993" transform="matrix(1 0 0 -1 0 346.91)" stroke="url(#paint1_linear_19_2)" stroke-width="3.57639"/>
</g>
<mask id="mask0_19_2" style="mask-type:alpha" maskUnits="userSpaceOnUse" x="0" y="0" width="515" height="344">
<rect width="515" height="343.333" rx="28.6111" fill="black"/>
</mask>
<g mask="url(#mask0_19_2)">
<g opacity="0.4">
<g filter="url(#filter1_f_19_2)">
<path d="M10.7291 343.333L504.271 343.333L288.096 149.09C277.281 139.371 271.873 134.512 265.758 132.668C260.372 131.045 254.627 131.045 249.242 132.668C243.127 134.512 237.719 139.371 226.904 149.09L10.7291 343.333Z" fill="#334155" fill-opacity="0.4"/>
</g>
<g filter="url(#filter2_f_19_2)">
<path d="M39.3403 343.333L475.66 343.333L291.576 138.125C279.779 124.975 273.881 118.399 266.929 115.973C260.824 113.842 254.176 113.842 248.071 115.973C241.119 118.399 235.221 124.975 223.424 138.125L39.3403 343.333Z" fill="#334155" fill-opacity="0.2"/>
</g>
<g filter="url(#filter3_f_19_2)">
<path d="M10.7291 343.333L504.271 343.333L290.981 114.588C279.343 102.107 273.524 95.8661 266.721 93.5498C260.742 91.5144 254.258 91.5144 248.279 93.5498C241.476 95.8661 235.657 102.107 224.019 114.588L10.7291 343.333Z" fill="#334155" fill-opacity="0.1"/>
</g>
</g>
<g filter="url(#filter4_i_19_2)">
<path d="M0 343.334L515 343.334L287.371 147.32C276.773 138.194 271.474 133.631 265.527 131.892C260.285 130.36 254.715 130.36 249.473 131.892C243.526 133.631 238.227 138.194 227.629 147.32L0 343.334Z" fill="url(#paint2_linear_19_2)"/>
</g>
<path d="M5.36462 336.18L227.654 145.422C238.245 136.333 243.54 131.788 249.48 130.059C254.714 128.535 260.276 128.538 265.509 130.068C271.446 131.804 276.736 136.355 287.317 145.456L513.212 339.757" stroke="#475569" stroke-opacity="0.06" stroke-width="3.57639"/>
<g style="mix-blend-mode:multiply" opacity="0.7">
<g filter="url(#filter5_f_19_2)">
<path d="M10.7291 0L504.271 0L288.096 194.244C277.281 203.962 271.873 208.822 265.758 210.665C260.372 212.289 254.627 212.289 249.242 210.665C243.127 208.822 237.719 203.962 226.904 194.244L10.7291 0Z" fill="#334155" fill-opacity="0.4"/>
</g>
<g filter="url(#filter6_f_19_2)">
<path d="M39.3403 0L475.66 0L291.576 205.208C279.779 218.358 273.881 224.934 266.929 227.36C260.824 229.492 254.176 229.492 248.071 227.36C241.119 224.934 235.221 218.358 223.424 205.208L39.3403 0Z" fill="#334155" fill-opacity="0.2"/>
</g>
<g filter="url(#filter7_f_19_2)">
<path d="M10.7291 0L504.271 0L290.981 228.746C279.343 241.227 273.524 247.467 266.721 249.783C260.742 251.819 254.258 251.819 248.279 249.783C241.476 247.467 235.657 241.227 224.019 228.745L10.7291 0Z" fill="#334155" fill-opacity="0.1"/>
</g>
<g filter="url(#filter8_f_19_2)">
<path d="M28.6111 0L486.389 0L273.337 233.026C264.829 242.331 250.171 242.331 241.663 233.026L28.6111 0Z" fill="#334155" fill-opacity="0.05"/>
</g>
<g filter="url(#filter9_f_19_2)">
<path d="M7.15283 -3.57642L507.847 -3.57642L272.101 215.33C263.868 222.976 251.132 222.976 242.899 215.33L7.15283 -3.57642Z" fill="#334155" fill-opacity="0.1"/>
</g>
</g>
<path d="M5.36462 7.15275L227.654 197.911C238.245 207 243.54 211.545 249.48 213.274C254.714 214.798 260.276 214.795 265.509 213.265C271.446 211.529 276.736 206.978 287.317 197.877L513.212 3.57636" stroke="#475569" stroke-opacity="0.06" stroke-width="3.57639"/>
<g filter="url(#filter10_i_19_2)">
<path d="M0 0L515 0L287.371 196.014C276.773 205.14 271.474 209.703 265.527 211.441C260.285 212.973 254.715 212.973 249.473 211.441C243.526 209.703 238.227 205.14 227.629 196.014L0 0Z" fill="url(#paint3_linear_19_2)"/>
</g>
<g filter="url(#filter11_f_19_2)">
<rect width="515" height="343.333" stroke="url(#paint4_linear_19_2)" stroke-width="57.2222"/>
</g>
<rect x="1.78819" y="1.78819" width="511.424" height="339.757" rx="26.8229" stroke="white" stroke-opacity="0.4" stroke-width="3.57639"/>
<g filter="url(#filter12_i_19_2)">
<path d="M196.27 41.89L198.93 36.94L199.73 37.01L197.07 41.96L196.27 41.89ZM198 43.16C197.473 43.16 197.02 43.01 196.64 42.71C196.26 42.41 195.967 41.9833 195.76 41.43C195.56 40.8767 195.46 40.22 195.46 39.46C195.46 38.6933 195.56 38.0333 195.76 37.48C195.967 36.9267 196.26 36.5 196.64 36.2C197.02 35.8933 197.473 35.74 198 35.74C198.533 35.74 198.987 35.8933 199.36 36.2C199.74 36.5 200.03 36.9267 200.23 37.48C200.437 38.0333 200.54 38.6933 200.54 39.46C200.54 40.22 200.437 40.8767 200.23 41.43C200.03 41.9833 199.74 42.41 199.36 42.71C198.987 43.01 198.533 43.16 198 43.16ZM198 42.04C198.267 42.04 198.493 41.9433 198.68 41.75C198.867 41.55 199.01 41.2567 199.11 40.87C199.21 40.4833 199.26 40.0133 199.26 39.46C199.26 38.8933 199.21 38.42 199.11 38.04C199.01 37.6533 198.867 37.36 198.68 37.16C198.493 36.96 198.267 36.86 198 36.86C197.74 36.86 197.513 36.96 197.32 37.16C197.133 37.36 196.99 37.6533 196.89 38.04C196.79 38.42 196.74 38.8933 196.74 39.46C196.74 40.0133 196.79 40.4833 196.89 40.87C196.99 41.2567 197.133 41.55 197.32 41.75C197.513 41.9433 197.74 42.04 198 42.04ZM207.852 43V35.9H212.252V37.04H209.092V38.89H212.132V39.99H209.092V41.86H212.332V43H207.852ZM213.308 43V37.66H214.298L214.348 38.88L214.228 38.85C214.308 38.4233 214.445 38.1 214.638 37.88C214.832 37.6533 215.075 37.54 215.368 37.54C215.688 37.54 215.928 37.6533 216.088 37.88C216.248 38.1067 216.352 38.4467 216.398 38.9H216.268C216.335 38.46 216.475 38.1233 216.688 37.89C216.908 37.6567 217.178 37.54 217.498 37.54C217.905 37.54 218.202 37.6833 218.388 37.97C218.575 38.2567 218.668 38.7133 218.668 39.34V43H217.538V39.57C217.538 39.1767 217.502 38.91 217.428 38.77C217.355 38.6233 217.238 38.55 217.078 38.55C216.972 38.55 216.875 38.5867 216.788 38.66C216.708 38.7267 216.642 38.8367 216.588 38.99C216.542 39.1433 216.518 39.34 216.518 39.58V43H215.458V39.57C215.458 39.1967 215.422 38.9333 215.348 38.78C215.275 38.6267 215.155 38.55 214.988 38.55C214.875 38.55 214.778 38.5867 214.698 38.66C214.618 38.7267 214.555 38.8367 214.508 38.99C214.462 39.1433 214.438 39.34 214.438 39.58V43H213.308ZM221.244 43.12C220.911 43.12 220.611 43.06 220.344 42.94C220.078 42.82 219.864 42.65 219.704 42.43C219.544 42.2033 219.464 41.9367 219.464 41.63C219.464 41.1767 219.604 40.8267 219.884 40.58C220.171 40.3267 220.581 40.1433 221.114 40.03L222.784 39.68C222.784 39.3067 222.704 39.0233 222.544 38.83C222.391 38.63 222.148 38.53 221.814 38.53C221.508 38.53 221.271 38.6033 221.104 38.75C220.938 38.8967 220.828 39.09 220.774 39.33L219.544 39.26C219.644 38.7467 219.891 38.3333 220.284 38.02C220.684 37.7 221.188 37.54 221.794 37.54C222.521 37.54 223.064 37.7333 223.424 38.12C223.784 38.5067 223.964 39.0467 223.964 39.74V41.73C223.964 41.8633 223.991 41.9567 224.044 42.01C224.098 42.0567 224.171 42.08 224.264 42.08H224.524V43C224.484 43.0067 224.418 43.0133 224.324 43.02C224.238 43.0333 224.148 43.04 224.054 43.04C223.801 43.04 223.584 42.9967 223.404 42.91C223.231 42.8233 223.098 42.6933 223.004 42.52C222.911 42.34 222.861 42.12 222.854 41.86H223.004C222.971 42.1 222.874 42.3167 222.714 42.51C222.554 42.6967 222.348 42.8467 222.094 42.96C221.848 43.0667 221.564 43.12 221.244 43.12ZM221.454 42.2C221.741 42.2 221.984 42.15 222.184 42.05C222.384 41.9433 222.534 41.7967 222.634 41.61C222.734 41.4167 222.784 41.1867 222.784 40.92V40.56L221.454 40.84C221.168 40.8933 220.968 40.98 220.854 41.1C220.748 41.2133 220.694 41.3667 220.694 41.56C220.694 41.76 220.761 41.9167 220.894 42.03C221.028 42.1433 221.214 42.2 221.454 42.2ZM227.74 43V37.66H228.92V43H227.74ZM225.7 43V42.04H230.66V43H225.7ZM225.8 38.62V37.66H228.75V38.62H225.8ZM227.69 36.95V35.83H228.89V36.95H227.69ZM233.527 43V37.5C233.527 37.3 233.47 37.1433 233.357 37.03C233.25 36.9167 233.093 36.86 232.887 36.86H231.697V35.9H233.067C233.607 35.9 234.013 36.04 234.287 36.32C234.567 36.5933 234.707 37.0033 234.707 37.55V43H233.527ZM231.497 43V42.04H236.457V43H231.497ZM197.62 54V49.14H195.84V48.1H196.68C196.947 48.1 197.16 48.0633 197.32 47.99C197.487 47.91 197.607 47.7833 197.68 47.61C197.76 47.43 197.8 47.1933 197.8 46.9H198.86V54H197.62ZM195.52 54V52.86H200.48V54H195.52ZM200.856 54C200.856 53.4467 200.933 52.96 201.086 52.54C201.239 52.1133 201.506 51.72 201.886 51.36C202.266 50.9933 202.796 50.6333 203.476 50.28C203.743 50.14 203.963 50.0067 204.136 49.88C204.309 49.7533 204.439 49.6133 204.526 49.46C204.613 49.3067 204.656 49.1167 204.656 48.89C204.656 48.6833 204.613 48.5033 204.526 48.35C204.446 48.1967 204.323 48.0767 204.156 47.99C203.989 47.9033 203.783 47.86 203.536 47.86C203.129 47.86 202.816 47.97 202.596 48.19C202.376 48.41 202.236 48.7267 202.176 49.14L200.886 49.07C200.959 48.3567 201.223 47.79 201.676 47.37C202.129 46.95 202.756 46.74 203.556 46.74C204.069 46.74 204.503 46.8267 204.856 47C205.209 47.1733 205.476 47.42 205.656 47.74C205.836 48.0533 205.926 48.4167 205.926 48.83C205.926 49.2033 205.866 49.5267 205.746 49.8C205.626 50.0667 205.426 50.3167 205.146 50.55C204.873 50.7767 204.499 51.0167 204.026 51.27C203.626 51.4833 203.299 51.6867 203.046 51.88C202.799 52.0667 202.616 52.2433 202.496 52.41C202.376 52.57 202.309 52.72 202.296 52.86H205.936V54H200.856ZM208.742 54.16C207.942 54.16 207.336 53.97 206.922 53.59C206.509 53.21 206.286 52.71 206.252 52.09L207.502 52.02C207.542 52.3933 207.676 52.6567 207.902 52.81C208.136 52.9633 208.419 53.04 208.752 53.04C208.992 53.04 209.209 53.0033 209.402 52.93C209.602 52.8567 209.759 52.74 209.872 52.58C209.992 52.4133 210.052 52.2 210.052 51.94C210.052 51.68 209.999 51.4667 209.892 51.3C209.786 51.1267 209.632 51 209.432 50.92C209.232 50.8333 208.999 50.79 208.732 50.79H208.182V49.76H208.732C208.939 49.76 209.122 49.73 209.282 49.67C209.449 49.6033 209.579 49.5 209.672 49.36C209.772 49.22 209.822 49.0367 209.822 48.81C209.822 48.49 209.729 48.25 209.542 48.09C209.362 47.93 209.106 47.85 208.772 47.85C208.412 47.85 208.142 47.93 207.962 48.09C207.782 48.2433 207.676 48.4533 207.642 48.72L206.382 48.65C206.449 48.07 206.686 47.6067 207.092 47.26C207.499 46.9133 208.062 46.74 208.782 46.74C209.256 46.74 209.666 46.8167 210.012 46.97C210.366 47.1233 210.636 47.3467 210.822 47.64C211.009 47.9267 211.102 48.2733 211.102 48.68C211.102 49.1267 210.966 49.4867 210.692 49.76C210.419 50.0267 210.022 50.2067 209.502 50.3V50.11C210.076 50.1767 210.522 50.38 210.842 50.72C211.169 51.0533 211.332 51.48 211.332 52C211.332 52.4533 211.226 52.8433 211.012 53.17C210.799 53.49 210.496 53.7367 210.102 53.91C209.716 54.0767 209.262 54.16 208.742 54.16ZM219.584 54.16C219.018 54.16 218.534 54.0167 218.134 53.73C217.741 53.4433 217.441 53.0233 217.234 52.47C217.028 51.9167 216.924 51.2467 216.924 50.46C216.924 49.66 217.028 48.9833 217.234 48.43C217.441 47.8767 217.741 47.4567 218.134 47.17C218.534 46.8833 219.018 46.74 219.584 46.74C220.151 46.74 220.631 46.8833 221.024 47.17C221.424 47.4567 221.728 47.8767 221.934 48.43C222.141 48.9833 222.244 49.66 222.244 50.46C222.244 51.2467 222.141 51.9167 221.934 52.47C221.728 53.0233 221.424 53.4433 221.024 53.73C220.631 54.0167 220.151 54.16 219.584 54.16ZM219.584 53.04C219.884 53.04 220.138 52.9467 220.344 52.76C220.551 52.5733 220.704 52.29 220.804 51.91C220.911 51.5233 220.964 51.04 220.964 50.46C220.964 49.88 220.911 49.3967 220.804 49.01C220.704 48.6233 220.551 48.3367 220.344 48.15C220.138 47.9567 219.884 47.86 219.584 47.86C219.284 47.86 219.031 47.9567 218.824 48.15C218.618 48.3367 218.461 48.6233 218.354 49.01C218.254 49.3967 218.204 49.88 218.204 50.46C218.204 51.04 218.254 51.5233 218.354 51.91C218.461 52.29 218.618 52.5733 218.824 52.76C219.031 52.9467 219.284 53.04 219.584 53.04ZM222.62 55.5V48.66H223.75L223.78 49.88L223.66 49.82C223.794 49.4067 224.007 49.09 224.3 48.87C224.6 48.65 224.96 48.54 225.38 48.54C225.874 48.54 226.28 48.6667 226.6 48.92C226.927 49.1733 227.167 49.51 227.32 49.93C227.48 50.35 227.56 50.8167 227.56 51.33C227.56 51.8433 227.48 52.31 227.32 52.73C227.167 53.15 226.927 53.4867 226.6 53.74C226.28 53.9933 225.874 54.12 225.38 54.12C225.107 54.12 224.854 54.0767 224.62 53.99C224.394 53.8967 224.197 53.7667 224.03 53.6C223.87 53.4267 223.75 53.2133 223.67 52.96L223.8 52.82V55.5H222.62ZM225.08 53.06C225.474 53.06 225.78 52.9167 226 52.63C226.22 52.3367 226.33 51.9033 226.33 51.33C226.33 50.7567 226.22 50.3267 226 50.04C225.78 49.7467 225.474 49.6 225.08 49.6C224.827 49.6 224.604 49.6633 224.41 49.79C224.224 49.9167 224.074 50.11 223.96 50.37C223.854 50.6233 223.8 50.9433 223.8 51.33C223.8 51.7167 223.854 52.04 223.96 52.3C224.067 52.5533 224.217 52.7433 224.41 52.87C224.604 52.9967 224.827 53.06 225.08 53.06ZM230.427 54.12C229.927 54.12 229.487 54.0067 229.107 53.78C228.733 53.5533 228.443 53.23 228.237 52.81C228.03 52.39 227.927 51.8967 227.927 51.33C227.927 50.77 228.03 50.2833 228.237 49.87C228.443 49.45 228.73 49.1233 229.097 48.89C229.47 48.6567 229.907 48.54 230.407 48.54C230.887 48.54 231.31 48.6533 231.677 48.88C232.05 49.1067 232.34 49.43 232.547 49.85C232.76 50.27 232.867 50.77 232.867 51.35V51.66H229.147C229.18 52.1133 229.31 52.46 229.537 52.7C229.77 52.94 230.073 53.06 230.447 53.06C230.733 53.06 230.97 52.9933 231.157 52.86C231.35 52.72 231.483 52.54 231.557 52.32L232.767 52.41C232.6 52.9433 232.317 53.3633 231.917 53.67C231.517 53.97 231.02 54.12 230.427 54.12ZM229.157 50.8H231.587C231.553 50.3933 231.43 50.0933 231.217 49.9C231.003 49.7 230.73 49.6 230.397 49.6C230.063 49.6 229.787 49.7033 229.567 49.91C229.353 50.11 229.217 50.4067 229.157 50.8ZM233.533 54V48.66H234.613L234.653 50.09L234.533 50.02C234.593 49.68 234.706 49.4033 234.873 49.19C235.039 48.97 235.243 48.8067 235.483 48.7C235.729 48.5933 235.996 48.54 236.283 48.54C236.676 48.54 236.999 48.6267 237.253 48.8C237.506 48.9733 237.696 49.2133 237.823 49.52C237.949 49.82 238.013 50.1633 238.013 50.55V54H236.833V50.83C236.833 50.4033 236.753 50.0833 236.593 49.87C236.439 49.6567 236.203 49.55 235.883 49.55C235.669 49.55 235.473 49.6 235.293 49.7C235.119 49.8 234.979 49.95 234.873 50.15C234.766 50.3433 234.713 50.5833 234.713 50.87V54H233.533ZM246.635 54.16C246.115 54.16 245.662 54.0567 245.275 53.85C244.895 53.6433 244.595 53.3533 244.375 52.98C244.155 52.6 244.025 52.1533 243.985 51.64L245.245 51.57C245.292 51.8967 245.375 52.17 245.495 52.39C245.622 52.6033 245.785 52.7667 245.985 52.88C246.192 52.9867 246.428 53.04 246.695 53.04C246.948 53.04 247.162 53.0067 247.335 52.94C247.515 52.8733 247.652 52.7733 247.745 52.64C247.838 52.5067 247.885 52.3467 247.885 52.16C247.885 51.96 247.838 51.7867 247.745 51.64C247.652 51.4933 247.485 51.3567 247.245 51.23C247.005 51.1033 246.662 50.98 246.215 50.86C245.735 50.7333 245.342 50.5867 245.035 50.42C244.728 50.2533 244.502 50.0467 244.355 49.8C244.208 49.5467 244.135 49.23 244.135 48.85C244.135 48.4233 244.228 48.0533 244.415 47.74C244.608 47.42 244.885 47.1733 245.245 47C245.612 46.8267 246.048 46.74 246.555 46.74C247.055 46.74 247.482 46.8367 247.835 47.03C248.188 47.2167 248.465 47.4867 248.665 47.84C248.872 48.1867 248.998 48.6 249.045 49.08L247.775 49.14C247.742 48.88 247.672 48.6567 247.565 48.47C247.465 48.2767 247.325 48.1267 247.145 48.02C246.972 47.9133 246.758 47.86 246.505 47.86C246.165 47.86 245.895 47.9467 245.695 48.12C245.495 48.2867 245.395 48.5067 245.395 48.78C245.395 48.9733 245.438 49.1333 245.525 49.26C245.618 49.3867 245.775 49.5 245.995 49.6C246.215 49.7 246.525 49.8 246.925 49.9C247.478 50.0467 247.915 50.22 248.235 50.42C248.562 50.62 248.795 50.86 248.935 51.14C249.075 51.42 249.145 51.75 249.145 52.13C249.145 52.5367 249.042 52.8933 248.835 53.2C248.628 53.5067 248.338 53.7433 247.965 53.91C247.592 54.0767 247.148 54.16 246.635 54.16ZM251.961 54.12C251.461 54.12 251.021 54.0067 250.641 53.78C250.268 53.5533 249.978 53.23 249.771 52.81C249.564 52.39 249.461 51.8967 249.461 51.33C249.461 50.7633 249.564 50.27 249.771 49.85C249.978 49.43 250.268 49.1067 250.641 48.88C251.021 48.6533 251.461 48.54 251.961 48.54C252.461 48.54 252.898 48.6533 253.271 48.88C253.651 49.1067 253.944 49.43 254.151 49.85C254.358 50.2633 254.461 50.7567 254.461 51.33C254.461 51.8967 254.358 52.39 254.151 52.81C253.944 53.23 253.651 53.5533 253.271 53.78C252.898 54.0067 252.461 54.12 251.961 54.12ZM251.961 53.06C252.368 53.06 252.681 52.91 252.901 52.61C253.121 52.3033 253.231 51.8767 253.231 51.33C253.231 50.7833 253.121 50.36 252.901 50.06C252.681 49.7533 252.368 49.6 251.961 49.6C251.554 49.6 251.241 49.7533 251.021 50.06C250.801 50.36 250.691 50.7833 250.691 51.33C250.691 51.8767 250.801 52.3033 251.021 52.61C251.241 52.91 251.554 53.06 251.961 53.06ZM256.817 54.12C256.304 54.12 255.897 53.95 255.597 53.61C255.304 53.2633 255.157 52.7733 255.157 52.14V48.66H256.337V51.83C256.337 52.2767 256.41 52.6033 256.557 52.81C256.71 53.01 256.94 53.11 257.247 53.11C257.567 53.11 257.827 52.9967 258.027 52.77C258.234 52.5367 258.337 52.21 258.337 51.79V48.66H259.527V54H258.427L258.407 52.53L258.557 52.58C258.47 53.0733 258.277 53.4533 257.977 53.72C257.677 53.9867 257.29 54.12 256.817 54.12ZM261.853 54V48.66H262.753L262.843 50.04H262.753C262.82 49.5733 262.96 49.2267 263.173 49C263.393 48.7733 263.703 48.66 264.103 48.66H265.273V49.65H264.173C263.92 49.65 263.71 49.6967 263.543 49.79C263.376 49.8833 263.25 50.02 263.163 50.2C263.076 50.38 263.033 50.6067 263.033 50.88V54H261.853ZM260.533 54V53.04H264.683V54H260.533ZM260.533 49.62V48.66H262.543V49.62H260.533ZM268.259 54.12C267.753 54.12 267.309 54.0033 266.929 53.77C266.549 53.5367 266.253 53.2133 266.039 52.8C265.826 52.38 265.719 51.89 265.719 51.33C265.719 50.77 265.826 50.2833 266.039 49.87C266.253 49.45 266.549 49.1233 266.929 48.89C267.309 48.6567 267.753 48.54 268.259 48.54C268.673 48.54 269.043 48.62 269.369 48.78C269.703 48.94 269.976 49.17 270.189 49.47C270.409 49.7633 270.549 50.1133 270.609 50.52L269.419 50.59C269.346 50.27 269.209 50.0267 269.009 49.86C268.809 49.6867 268.563 49.6 268.269 49.6C267.856 49.6 267.533 49.7567 267.299 50.07C267.066 50.3767 266.949 50.7967 266.949 51.33C266.949 51.8633 267.066 52.2867 267.299 52.6C267.533 52.9067 267.856 53.06 268.269 53.06C268.563 53.06 268.813 52.97 269.019 52.79C269.233 52.61 269.376 52.3467 269.449 52L270.639 52.07C270.573 52.4833 270.429 52.8433 270.209 53.15C269.996 53.4567 269.719 53.6967 269.379 53.87C269.046 54.0367 268.673 54.12 268.259 54.12ZM273.595 54.12C273.095 54.12 272.655 54.0067 272.275 53.78C271.902 53.5533 271.612 53.23 271.405 52.81C271.199 52.39 271.095 51.8967 271.095 51.33C271.095 50.77 271.199 50.2833 271.405 49.87C271.612 49.45 271.899 49.1233 272.265 48.89C272.639 48.6567 273.075 48.54 273.575 48.54C274.055 48.54 274.479 48.6533 274.845 48.88C275.219 49.1067 275.509 49.43 275.715 49.85C275.929 50.27 276.035 50.77 276.035 51.35V51.66H272.315C272.349 52.1133 272.479 52.46 272.705 52.7C272.939 52.94 273.242 53.06 273.615 53.06C273.902 53.06 274.139 52.9933 274.325 52.86C274.519 52.72 274.652 52.54 274.725 52.32L275.935 52.41C275.769 52.9433 275.485 53.3633 275.085 53.67C274.685 53.97 274.189 54.12 273.595 54.12ZM272.325 50.8H274.755C274.722 50.3933 274.599 50.0933 274.385 49.9C274.172 49.7 273.899 49.6 273.565 49.6C273.232 49.6 272.955 49.7033 272.735 49.91C272.522 50.11 272.385 50.4067 272.325 50.8ZM282.348 54L281.598 46.9H282.798L283.308 52.78H283.188L283.878 47.7H284.798L285.488 52.78H285.368L285.878 46.9H287.078L286.328 54H284.898L284.218 49.2H284.458L283.778 54H282.348ZM288.994 54.12C288.66 54.12 288.36 54.06 288.094 53.94C287.827 53.82 287.614 53.65 287.454 53.43C287.294 53.2033 287.214 52.9367 287.214 52.63C287.214 52.1767 287.354 51.8267 287.634 51.58C287.92 51.3267 288.33 51.1433 288.864 51.03L290.534 50.68C290.534 50.3067 290.454 50.0233 290.294 49.83C290.14 49.63 289.897 49.53 289.564 49.53C289.257 49.53 289.02 49.6033 288.854 49.75C288.687 49.8967 288.577 50.09 288.524 50.33L287.294 50.26C287.394 49.7467 287.64 49.3333 288.034 49.02C288.434 48.7 288.937 48.54 289.544 48.54C290.27 48.54 290.814 48.7333 291.174 49.12C291.534 49.5067 291.714 50.0467 291.714 50.74V52.73C291.714 52.8633 291.74 52.9567 291.794 53.01C291.847 53.0567 291.92 53.08 292.014 53.08H292.274V54C292.234 54.0067 292.167 54.0133 292.074 54.02C291.987 54.0333 291.897 54.04 291.804 54.04C291.55 54.04 291.334 53.9967 291.154 53.91C290.98 53.8233 290.847 53.6933 290.754 53.52C290.66 53.34 290.61 53.12 290.604 52.86H290.754C290.72 53.1 290.624 53.3167 290.464 53.51C290.304 53.6967 290.097 53.8467 289.844 53.96C289.597 54.0667 289.314 54.12 288.994 54.12ZM289.204 53.2C289.49 53.2 289.734 53.15 289.934 53.05C290.134 52.9433 290.284 52.7967 290.384 52.61C290.484 52.4167 290.534 52.1867 290.534 51.92V51.56L289.204 51.84C288.917 51.8933 288.717 51.98 288.604 52.1C288.497 52.2133 288.444 52.3667 288.444 52.56C288.444 52.76 288.51 52.9167 288.644 53.03C288.777 53.1433 288.964 53.2 289.204 53.2ZM293.36 55.5V54.54H294.04C294.22 54.54 294.356 54.5133 294.45 54.46C294.543 54.4067 294.613 54.3133 294.66 54.18L294.83 53.74H294.44L292.53 48.66H293.78L295.2 52.62L296.5 48.66H297.75L295.66 54.54C295.54 54.88 295.356 55.1233 295.11 55.27C294.87 55.4233 294.553 55.5 294.16 55.5H293.36ZM195.96 65V57.9H200.44V59.02H196.44L197.2 58.3V61.56L196.44 60.97H200.26V62.08H196.44L197.2 61.5V65H195.96ZM202.496 65V59.66H203.396L203.486 61.04H203.396C203.463 60.5733 203.603 60.2267 203.816 60C204.036 59.7733 204.346 59.66 204.746 59.66H205.916V60.65H204.816C204.563 60.65 204.353 60.6967 204.186 60.79C204.019 60.8833 203.893 61.02 203.806 61.2C203.719 61.38 203.676 61.6067 203.676 61.88V65H202.496ZM201.176 65V64.04H205.326V65H201.176ZM201.176 60.62V59.66H203.186V60.62H201.176ZM208.842 65.12C208.342 65.12 207.902 65.0067 207.522 64.78C207.149 64.5533 206.859 64.23 206.652 63.81C206.446 63.39 206.342 62.8967 206.342 62.33C206.342 61.77 206.446 61.2833 206.652 60.87C206.859 60.45 207.146 60.1233 207.512 59.89C207.886 59.6567 208.322 59.54 208.822 59.54C209.302 59.54 209.726 59.6533 210.092 59.88C210.466 60.1067 210.756 60.43 210.962 60.85C211.176 61.27 211.282 61.77 211.282 62.35V62.66H207.562C207.596 63.1133 207.726 63.46 207.952 63.7C208.186 63.94 208.489 64.06 208.862 64.06C209.149 64.06 209.386 63.9933 209.572 63.86C209.766 63.72 209.899 63.54 209.972 63.32L211.182 63.41C211.016 63.9433 210.732 64.3633 210.332 64.67C209.932 64.97 209.436 65.12 208.842 65.12ZM207.572 61.8H210.002C209.969 61.3933 209.846 61.0933 209.632 60.9C209.419 60.7 209.146 60.6 208.812 60.6C208.479 60.6 208.202 60.7033 207.982 60.91C207.769 61.11 207.632 61.4067 207.572 61.8ZM214.238 65.12C213.738 65.12 213.298 65.0067 212.918 64.78C212.545 64.5533 212.255 64.23 212.048 63.81C211.842 63.39 211.738 62.8967 211.738 62.33C211.738 61.77 211.842 61.2833 212.048 60.87C212.255 60.45 212.542 60.1233 212.908 59.89C213.282 59.6567 213.718 59.54 214.218 59.54C214.698 59.54 215.122 59.6533 215.488 59.88C215.862 60.1067 216.152 60.43 216.358 60.85C216.572 61.27 216.678 61.77 216.678 62.35V62.66H212.958C212.992 63.1133 213.122 63.46 213.348 63.7C213.582 63.94 213.885 64.06 214.258 64.06C214.545 64.06 214.782 63.9933 214.968 63.86C215.162 63.72 215.295 63.54 215.368 63.32L216.578 63.41C216.412 63.9433 216.128 64.3633 215.728 64.67C215.328 64.97 214.832 65.12 214.238 65.12ZM212.968 61.8H215.398C215.365 61.3933 215.242 61.0933 215.028 60.9C214.815 60.7 214.542 60.6 214.208 60.6C213.875 60.6 213.598 60.7033 213.378 60.91C213.165 61.11 213.028 61.4067 212.968 61.8ZM216.904 65V59.66H217.894L217.944 60.88L217.824 60.85C217.904 60.4233 218.041 60.1 218.234 59.88C218.428 59.6533 218.671 59.54 218.964 59.54C219.284 59.54 219.524 59.6533 219.684 59.88C219.844 60.1067 219.948 60.4467 219.994 60.9H219.864C219.931 60.46 220.071 60.1233 220.284 59.89C220.504 59.6567 220.774 59.54 221.094 59.54C221.501 59.54 221.798 59.6833 221.984 59.97C222.171 60.2567 222.264 60.7133 222.264 61.34V65H221.134V61.57C221.134 61.1767 221.098 60.91 221.024 60.77C220.951 60.6233 220.834 60.55 220.674 60.55C220.568 60.55 220.471 60.5867 220.384 60.66C220.304 60.7267 220.238 60.8367 220.184 60.99C220.138 61.1433 220.114 61.34 220.114 61.58V65H219.054V61.57C219.054 61.1967 219.018 60.9333 218.944 60.78C218.871 60.6267 218.751 60.55 218.584 60.55C218.471 60.55 218.374 60.5867 218.294 60.66C218.214 60.7267 218.151 60.8367 218.104 60.99C218.058 61.1433 218.034 61.34 218.034 61.58V65H216.904ZM224.24 65.12C223.907 65.12 223.607 65.06 223.34 64.94C223.074 64.82 222.86 64.65 222.7 64.43C222.54 64.2033 222.46 63.9367 222.46 63.63C222.46 63.1767 222.6 62.8267 222.88 62.58C223.167 62.3267 223.577 62.1433 224.11 62.03L225.78 61.68C225.78 61.3067 225.7 61.0233 225.54 60.83C225.387 60.63 225.144 60.53 224.81 60.53C224.504 60.53 224.267 60.6033 224.1 60.75C223.934 60.8967 223.824 61.09 223.77 61.33L222.54 61.26C222.64 60.7467 222.887 60.3333 223.28 60.02C223.68 59.7 224.184 59.54 224.79 59.54C225.517 59.54 226.06 59.7333 226.42 60.12C226.78 60.5067 226.96 61.0467 226.96 61.74V63.73C226.96 63.8633 226.987 63.9567 227.04 64.01C227.094 64.0567 227.167 64.08 227.26 64.08H227.52V65C227.48 65.0067 227.414 65.0133 227.32 65.02C227.234 65.0333 227.144 65.04 227.05 65.04C226.797 65.04 226.58 64.9967 226.4 64.91C226.227 64.8233 226.094 64.6933 226 64.52C225.907 64.34 225.857 64.12 225.85 63.86H226C225.967 64.1 225.87 64.3167 225.71 64.51C225.55 64.6967 225.344 64.8467 225.09 64.96C224.844 65.0667 224.56 65.12 224.24 65.12ZM224.45 64.2C224.737 64.2 224.98 64.15 225.18 64.05C225.38 63.9433 225.53 63.7967 225.63 63.61C225.73 63.4167 225.78 63.1867 225.78 62.92V62.56L224.45 62.84C224.164 62.8933 223.964 62.98 223.85 63.1C223.744 63.2133 223.69 63.3667 223.69 63.56C223.69 63.76 223.757 63.9167 223.89 64.03C224.024 64.1433 224.21 64.2 224.45 64.2ZM230.137 65V59.66H231.317V65H230.137ZM228.097 65V64.04H233.057V65H228.097ZM228.197 60.62V59.66H231.147V60.62H228.197ZM230.087 58.95V57.83H231.287V58.95H230.087ZM235.323 65V59.5C235.323 59.3 235.266 59.1433 235.153 59.03C235.046 58.9167 234.889 58.86 234.683 58.86H233.493V57.9H234.863C235.403 57.9 235.809 58.04 236.083 58.32C236.363 58.5933 236.503 59.0033 236.503 59.55V65H235.323ZM233.293 65V64.04H238.253V65H233.293ZM246.605 65.16C246.025 65.16 245.535 65.01 245.135 64.71C244.735 64.41 244.428 63.9833 244.215 63.43C244.008 62.8767 243.905 62.22 243.905 61.46C243.905 60.6933 244.008 60.0333 244.215 59.48C244.428 58.9267 244.735 58.5 245.135 58.2C245.535 57.8933 246.025 57.74 246.605 57.74C247.272 57.74 247.828 57.96 248.275 58.4C248.722 58.84 249.008 59.4633 249.135 60.27L247.865 60.33C247.778 59.85 247.622 59.4867 247.395 59.24C247.175 58.9867 246.912 58.86 246.605 58.86C246.292 58.86 246.028 58.9633 245.815 59.17C245.608 59.37 245.452 59.6633 245.345 60.05C245.238 60.4367 245.185 60.9067 245.185 61.46C245.185 62.0067 245.238 62.4733 245.345 62.86C245.452 63.2467 245.608 63.54 245.815 63.74C246.028 63.94 246.292 64.04 246.605 64.04C246.925 64.04 247.202 63.9067 247.435 63.64C247.668 63.3667 247.825 62.97 247.905 62.45L249.175 62.5C249.055 63.34 248.768 63.9933 248.315 64.46C247.868 64.9267 247.298 65.16 246.605 65.16ZM251.721 65V59.66H252.901V65H251.721ZM249.681 65V64.04H254.641V65H249.681ZM249.781 60.62V59.66H252.731V60.62H249.781ZM251.671 58.95V57.83H252.871V58.95H251.671ZM258.107 65C257.534 65 257.11 64.87 256.837 64.61C256.564 64.3433 256.427 63.94 256.427 63.4V58.41H257.607V63.31C257.607 63.5567 257.667 63.74 257.787 63.86C257.907 63.98 258.084 64.04 258.317 64.04H259.637V65H258.107ZM254.817 60.62V59.66H259.637V60.62H254.817ZM260.983 66.5V65.54H261.663C261.843 65.54 261.98 65.5133 262.073 65.46C262.166 65.4067 262.236 65.3133 262.283 65.18L262.453 64.74H262.063L260.153 59.66H261.403L262.823 63.62L264.123 59.66H265.373L263.283 65.54C263.163 65.88 262.98 66.1233 262.733 66.27C262.493 66.4233 262.176 66.5 261.783 66.5H260.983ZM267.559 66.57L268.049 65H267.429V63.59H268.869V64.85L268.209 66.57H267.559ZM276.901 65V57.9H281.381V59.02H277.381L278.141 58.3V61.56L277.381 60.97H281.201V62.08H277.381L278.141 61.5V65H276.901ZM284.408 65.16C283.888 65.16 283.434 65.0567 283.048 64.85C282.668 64.6433 282.368 64.3533 282.148 63.98C281.928 63.6 281.798 63.1533 281.758 62.64L283.018 62.57C283.064 62.8967 283.148 63.17 283.268 63.39C283.394 63.6033 283.558 63.7667 283.758 63.88C283.964 63.9867 284.201 64.04 284.468 64.04C284.721 64.04 284.934 64.0067 285.108 63.94C285.288 63.8733 285.424 63.7733 285.518 63.64C285.611 63.5067 285.658 63.3467 285.658 63.16C285.658 62.96 285.611 62.7867 285.518 62.64C285.424 62.4933 285.258 62.3567 285.018 62.23C284.778 62.1033 284.434 61.98 283.988 61.86C283.508 61.7333 283.114 61.5867 282.808 61.42C282.501 61.2533 282.274 61.0467 282.128 60.8C281.981 60.5467 281.908 60.23 281.908 59.85C281.908 59.4233 282.001 59.0533 282.188 58.74C282.381 58.42 282.658 58.1733 283.018 58C283.384 57.8267 283.821 57.74 284.328 57.74C284.828 57.74 285.254 57.8367 285.608 58.03C285.961 58.2167 286.238 58.4867 286.438 58.84C286.644 59.1867 286.771 59.6 286.818 60.08L285.548 60.14C285.514 59.88 285.444 59.6567 285.338 59.47C285.238 59.2767 285.098 59.1267 284.918 59.02C284.744 58.9133 284.531 58.86 284.278 58.86C283.938 58.86 283.668 58.9467 283.468 59.12C283.268 59.2867 283.168 59.5067 283.168 59.78C283.168 59.9733 283.211 60.1333 283.298 60.26C283.391 60.3867 283.548 60.5 283.768 60.6C283.988 60.7 284.298 60.8 284.698 60.9C285.251 61.0467 285.688 61.22 286.008 61.42C286.334 61.62 286.568 61.86 286.708 62.14C286.848 62.42 286.918 62.75 286.918 63.13C286.918 63.5367 286.814 63.8933 286.608 64.2C286.401 64.5067 286.111 64.7433 285.738 64.91C285.364 65.0767 284.921 65.16 284.408 65.16ZM295.11 57.74C295.67 57.74 296.143 57.8667 296.53 58.12C296.916 58.3667 297.21 58.73 297.41 59.21C297.61 59.6833 297.71 60.26 297.71 60.94C297.71 61.5333 297.656 62.0867 297.55 62.6C297.45 63.1067 297.286 63.5533 297.06 63.94C296.833 64.32 296.536 64.62 296.17 64.84C295.81 65.0533 295.37 65.16 294.85 65.16C294.396 65.16 294.016 65.0867 293.71 64.94C293.403 64.7867 293.156 64.58 292.97 64.32C292.79 64.0533 292.656 63.7533 292.57 63.42L293.83 63.32C293.89 63.5333 293.996 63.7067 294.15 63.84C294.31 63.9733 294.543 64.04 294.85 64.04C295.176 64.04 295.456 63.9467 295.69 63.76C295.93 63.5667 296.116 63.2733 296.25 62.88C296.383 62.48 296.453 61.9667 296.46 61.34L296.82 61.38C296.746 61.6067 296.623 61.82 296.45 62.02C296.276 62.2133 296.056 62.3733 295.79 62.5C295.53 62.6267 295.22 62.69 294.86 62.69C294.393 62.69 293.986 62.59 293.64 62.39C293.293 62.19 293.023 61.91 292.83 61.55C292.643 61.19 292.55 60.77 292.55 60.29C292.55 59.7633 292.656 59.31 292.87 58.93C293.083 58.55 293.38 58.2567 293.76 58.05C294.146 57.8433 294.596 57.74 295.11 57.74ZM295.12 58.88C294.72 58.88 294.403 59 294.17 59.24C293.943 59.4733 293.83 59.8133 293.83 60.26C293.83 60.6667 293.936 60.9933 294.15 61.24C294.363 61.48 294.666 61.6 295.06 61.6C295.333 61.6 295.57 61.5467 295.77 61.44C295.976 61.3267 296.136 61.17 296.25 60.97C296.37 60.7633 296.43 60.5233 296.43 60.25C296.43 59.99 296.376 59.7567 296.27 59.55C296.17 59.3433 296.02 59.18 295.82 59.06C295.626 58.94 295.393 58.88 295.12 58.88ZM300.526 65.16C300.019 65.16 299.572 65.08 299.186 64.92C298.799 64.76 298.496 64.5233 298.276 64.21C298.056 63.8967 297.946 63.5133 297.946 63.06C297.946 62.54 298.102 62.11 298.416 61.77C298.736 61.43 299.159 61.2033 299.686 61.09L299.706 61.29C299.279 61.19 298.929 61.01 298.656 60.75C298.389 60.4833 298.256 60.13 298.256 59.69C298.256 59.3167 298.349 58.9833 298.536 58.69C298.729 58.3967 298.996 58.1667 299.336 58C299.676 57.8267 300.072 57.74 300.526 57.74C300.979 57.74 301.376 57.8267 301.716 58C302.062 58.1667 302.329 58.3967 302.516 58.69C302.702 58.9833 302.796 59.3167 302.796 59.69C302.796 60.13 302.662 60.4833 302.396 60.75C302.129 61.01 301.779 61.19 301.346 61.29L301.366 61.09C301.899 61.2033 302.322 61.43 302.636 61.77C302.949 62.11 303.106 62.54 303.106 63.06C303.106 63.5133 302.996 63.8967 302.776 64.21C302.556 64.5233 302.252 64.76 301.866 64.92C301.479 65.08 301.032 65.16 300.526 65.16ZM300.526 64.04C300.892 64.04 301.199 63.9533 301.446 63.78C301.699 63.6067 301.826 63.3267 301.826 62.94C301.826 62.58 301.712 62.2967 301.486 62.09C301.266 61.8767 300.946 61.77 300.526 61.77C300.106 61.77 299.782 61.8767 299.556 62.09C299.336 62.2967 299.226 62.58 299.226 62.94C299.226 63.3267 299.349 63.6067 299.596 63.78C299.849 63.9533 300.159 64.04 300.526 64.04ZM300.526 60.69C300.826 60.69 301.066 60.6133 301.246 60.46C301.432 60.3067 301.526 60.0733 301.526 59.76C301.526 59.48 301.436 59.26 301.256 59.1C301.076 58.94 300.832 58.86 300.526 58.86C300.226 58.86 299.982 58.94 299.796 59.1C299.616 59.26 299.526 59.48 299.526 59.76C299.526 60.0733 299.616 60.3067 299.796 60.46C299.982 60.6133 300.226 60.69 300.526 60.69ZM304.672 65C304.672 64.28 304.769 63.5733 304.962 62.88C305.162 62.1867 305.442 61.52 305.802 60.88C306.169 60.2333 306.602 59.62 307.102 59.04H303.482V57.9H308.362V58.97C307.942 59.4433 307.579 59.9133 307.272 60.38C306.972 60.8467 306.725 61.32 306.532 61.8C306.345 62.2733 306.205 62.7733 306.112 63.3C306.025 63.8267 305.982 64.3933 305.982 65H304.672ZM311.338 65.16C310.778 65.16 310.305 65.0367 309.918 64.79C309.531 64.5367 309.238 64.17 309.038 63.69C308.838 63.21 308.738 62.6333 308.738 61.96C308.738 61.3667 308.788 60.8167 308.888 60.31C308.995 59.7967 309.161 59.35 309.388 58.97C309.615 58.5833 309.908 58.2833 310.268 58.07C310.635 57.85 311.078 57.74 311.598 57.74C312.051 57.74 312.431 57.8167 312.738 57.97C313.045 58.1167 313.288 58.3233 313.468 58.59C313.655 58.85 313.791 59.1467 313.878 59.48L312.618 59.58C312.558 59.3667 312.451 59.1933 312.298 59.06C312.145 58.9267 311.911 58.86 311.598 58.86C311.271 58.86 310.988 58.9567 310.748 59.15C310.515 59.3367 310.331 59.63 310.198 60.03C310.065 60.4233 309.995 60.9333 309.988 61.56L309.628 61.52C309.701 61.2933 309.825 61.0833 309.998 60.89C310.171 60.69 310.388 60.5267 310.648 60.4C310.915 60.2733 311.228 60.21 311.588 60.21C312.055 60.21 312.461 60.31 312.808 60.51C313.155 60.71 313.421 60.99 313.608 61.35C313.801 61.71 313.898 62.13 313.898 62.61C313.898 63.13 313.791 63.5833 313.578 63.97C313.365 64.35 313.065 64.6433 312.678 64.85C312.298 65.0567 311.851 65.16 311.338 65.16ZM311.328 64.02C311.735 64.02 312.051 63.9 312.278 63.66C312.505 63.42 312.618 63.08 312.618 62.64C312.618 62.2267 312.511 61.9 312.298 61.66C312.085 61.42 311.781 61.3 311.388 61.3C311.121 61.3 310.885 61.3567 310.678 61.47C310.471 61.5767 310.308 61.7333 310.188 61.94C310.075 62.14 310.018 62.3767 310.018 62.65C310.018 62.91 310.068 63.1433 310.168 63.35C310.275 63.5567 310.425 63.72 310.618 63.84C310.818 63.96 311.055 64.02 311.328 64.02ZM316.704 65.16C316.217 65.16 315.794 65.0733 315.434 64.9C315.081 64.72 314.801 64.4767 314.594 64.17C314.387 63.8633 314.267 63.5167 314.234 63.13L315.514 63.05C315.561 63.3767 315.684 63.6233 315.884 63.79C316.091 63.9567 316.364 64.04 316.704 64.04C317.077 64.04 317.371 63.9233 317.584 63.69C317.804 63.4567 317.914 63.1233 317.914 62.69C317.914 62.4033 317.864 62.1567 317.764 61.95C317.671 61.7433 317.534 61.5867 317.354 61.48C317.174 61.3733 316.961 61.32 316.714 61.32C316.474 61.32 316.254 61.38 316.054 61.5C315.854 61.62 315.711 61.7833 315.624 61.99L314.334 61.94L314.784 57.9H318.834V59.04H315.824L315.554 61.32L315.294 61.18C315.401 60.98 315.537 60.8133 315.704 60.68C315.871 60.5467 316.057 60.4467 316.264 60.38C316.477 60.3067 316.694 60.27 316.914 60.27C317.381 60.27 317.784 60.3767 318.124 60.59C318.464 60.7967 318.727 61.0833 318.914 61.45C319.101 61.81 319.194 62.2233 319.194 62.69C319.194 63.1767 319.091 63.6067 318.884 63.98C318.677 64.3533 318.384 64.6433 318.004 64.85C317.631 65.0567 317.197 65.16 316.704 65.16ZM198 76.16C197.233 76.16 196.633 75.9333 196.2 75.48C195.773 75.02 195.56 74.3733 195.56 73.54V68.9H196.8V73.62C196.8 74.0733 196.9 74.4233 197.1 74.67C197.307 74.9167 197.607 75.04 198 75.04C198.393 75.04 198.69 74.9167 198.89 74.67C199.097 74.4233 199.2 74.0733 199.2 73.62V68.9H200.44V73.54C200.44 74.3733 200.223 75.02 199.79 75.48C199.363 75.9333 198.767 76.16 198 76.16ZM201.156 76V70.66H202.236L202.276 72.09L202.156 72.02C202.216 71.68 202.329 71.4033 202.496 71.19C202.663 70.97 202.866 70.8067 203.106 70.7C203.353 70.5933 203.619 70.54 203.906 70.54C204.299 70.54 204.623 70.6267 204.876 70.8C205.129 70.9733 205.319 71.2133 205.446 71.52C205.573 71.82 205.636 72.1633 205.636 72.55V76H204.456V72.83C204.456 72.4033 204.376 72.0833 204.216 71.87C204.063 71.6567 203.826 71.55 203.506 71.55C203.293 71.55 203.096 71.6 202.916 71.7C202.743 71.8 202.603 71.95 202.496 72.15C202.389 72.3433 202.336 72.5833 202.336 72.87V76H201.156ZM208.552 76V70.66H209.732V76H208.552ZM206.512 76V75.04H211.472V76H206.512ZM206.612 71.62V70.66H209.562V71.62H206.612ZM208.502 69.95V68.83H209.702V69.95H208.502ZM214.938 76C214.365 76 213.942 75.87 213.668 75.61C213.395 75.3433 213.258 74.94 213.258 74.4V69.41H214.438V74.31C214.438 74.5567 214.498 74.74 214.618 74.86C214.738 74.98 214.915 75.04 215.148 75.04H216.468V76H214.938ZM211.648 71.62V70.66H216.468V71.62H211.648ZM219.634 76.12C219.134 76.12 218.694 76.0067 218.314 75.78C217.941 75.5533 217.651 75.23 217.444 74.81C217.238 74.39 217.134 73.8967 217.134 73.33C217.134 72.77 217.238 72.2833 217.444 71.87C217.651 71.45 217.938 71.1233 218.304 70.89C218.678 70.6567 219.114 70.54 219.614 70.54C220.094 70.54 220.518 70.6533 220.884 70.88C221.258 71.1067 221.548 71.43 221.754 71.85C221.968 72.27 222.074 72.77 222.074 73.35V73.66H218.354C218.388 74.1133 218.518 74.46 218.744 74.7C218.978 74.94 219.281 75.06 219.654 75.06C219.941 75.06 220.178 74.9933 220.364 74.86C220.558 74.72 220.691 74.54 220.764 74.32L221.974 74.41C221.808 74.9433 221.524 75.3633 221.124 75.67C220.724 75.97 220.228 76.12 219.634 76.12ZM218.364 72.8H220.794C220.761 72.3933 220.638 72.0933 220.424 71.9C220.211 71.7 219.938 71.6 219.604 71.6C219.271 71.6 218.994 71.7033 218.774 71.91C218.561 72.11 218.424 72.4067 218.364 72.8ZM224.48 76.12C224.034 76.12 223.647 76.01 223.32 75.79C222.994 75.5633 222.74 75.2433 222.56 74.83C222.387 74.41 222.3 73.91 222.3 73.33C222.3 72.75 222.387 72.2533 222.56 71.84C222.74 71.42 222.994 71.1 223.32 70.88C223.647 70.6533 224.034 70.54 224.48 70.54C224.854 70.54 225.177 70.6267 225.45 70.8C225.73 70.9667 225.934 71.17 226.06 71.41V68.9H227.24V76H226.12L226.09 75.17C225.95 75.45 225.74 75.68 225.46 75.86C225.187 76.0333 224.86 76.12 224.48 76.12ZM224.76 75.06C225.02 75.06 225.247 74.99 225.44 74.85C225.64 74.71 225.794 74.5133 225.9 74.26C226.007 74 226.06 73.69 226.06 73.33C226.06 72.9633 226.007 72.6533 225.9 72.4C225.794 72.14 225.64 71.9433 225.44 71.81C225.247 71.67 225.014 71.6 224.74 71.6C224.36 71.6 224.064 71.7533 223.85 72.06C223.637 72.36 223.53 72.7833 223.53 73.33C223.53 73.8767 223.637 74.3033 223.85 74.61C224.064 74.91 224.367 75.06 224.76 75.06ZM235.843 76.16C235.323 76.16 234.869 76.0567 234.483 75.85C234.103 75.6433 233.803 75.3533 233.583 74.98C233.363 74.6 233.233 74.1533 233.193 73.64L234.453 73.57C234.499 73.8967 234.583 74.17 234.703 74.39C234.829 74.6033 234.993 74.7667 235.193 74.88C235.399 74.9867 235.636 75.04 235.903 75.04C236.156 75.04 236.369 75.0067 236.543 74.94C236.723 74.8733 236.859 74.7733 236.953 74.64C237.046 74.5067 237.093 74.3467 237.093 74.16C237.093 73.96 237.046 73.7867 236.953 73.64C236.859 73.4933 236.693 73.3567 236.453 73.23C236.213 73.1033 235.869 72.98 235.423 72.86C234.943 72.7333 234.549 72.5867 234.243 72.42C233.936 72.2533 233.709 72.0467 233.563 71.8C233.416 71.5467 233.343 71.23 233.343 70.85C233.343 70.4233 233.436 70.0533 233.623 69.74C233.816 69.42 234.093 69.1733 234.453 69C234.819 68.8267 235.256 68.74 235.763 68.74C236.263 68.74 236.689 68.8367 237.043 69.03C237.396 69.2167 237.673 69.4867 237.873 69.84C238.079 70.1867 238.206 70.6 238.253 71.08L236.983 71.14C236.949 70.88 236.879 70.6567 236.773 70.47C236.673 70.2767 236.533 70.1267 236.353 70.02C236.179 69.9133 235.966 69.86 235.713 69.86C235.373 69.86 235.103 69.9467 234.903 70.12C234.703 70.2867 234.603 70.5067 234.603 70.78C234.603 70.9733 234.646 71.1333 234.733 71.26C234.826 71.3867 234.983 71.5 235.203 71.6C235.423 71.7 235.733 71.8 236.133 71.9C236.686 72.0467 237.123 72.22 237.443 72.42C237.769 72.62 238.003 72.86 238.143 73.14C238.283 73.42 238.353 73.75 238.353 74.13C238.353 74.5367 238.249 74.8933 238.043 75.2C237.836 75.5067 237.546 75.7433 237.173 75.91C236.799 76.0767 236.356 76.16 235.843 76.16ZM241.919 76C241.345 76 240.922 75.87 240.649 75.61C240.375 75.3433 240.239 74.94 240.239 74.4V69.41H241.419V74.31C241.419 74.5567 241.479 74.74 241.599 74.86C241.719 74.98 241.895 75.04 242.129 75.04H243.449V76H241.919ZM238.629 71.62V70.66H243.449V71.62H238.629ZM245.825 76.12C245.492 76.12 245.192 76.06 244.925 75.94C244.658 75.82 244.445 75.65 244.285 75.43C244.125 75.2033 244.045 74.9367 244.045 74.63C244.045 74.1767 244.185 73.8267 244.465 73.58C244.752 73.3267 245.162 73.1433 245.695 73.03L247.365 72.68C247.365 72.3067 247.285 72.0233 247.125 71.83C246.972 71.63 246.728 71.53 246.395 71.53C246.088 71.53 245.852 71.6033 245.685 71.75C245.518 71.8967 245.408 72.09 245.355 72.33L244.125 72.26C244.225 71.7467 244.472 71.3333 244.865 71.02C245.265 70.7 245.768 70.54 246.375 70.54C247.102 70.54 247.645 70.7333 248.005 71.12C248.365 71.5067 248.545 72.0467 248.545 72.74V74.73C248.545 74.8633 248.572 74.9567 248.625 75.01C248.678 75.0567 248.752 75.08 248.845 75.08H249.105V76C249.065 76.0067 248.998 76.0133 248.905 76.02C248.818 76.0333 248.728 76.04 248.635 76.04C248.382 76.04 248.165 75.9967 247.985 75.91C247.812 75.8233 247.678 75.6933 247.585 75.52C247.492 75.34 247.442 75.12 247.435 74.86H247.585C247.552 75.1 247.455 75.3167 247.295 75.51C247.135 75.6967 246.928 75.8467 246.675 75.96C246.428 76.0667 246.145 76.12 245.825 76.12ZM246.035 75.2C246.322 75.2 246.565 75.15 246.765 75.05C246.965 74.9433 247.115 74.7967 247.215 74.61C247.315 74.4167 247.365 74.1867 247.365 73.92V73.56L246.035 73.84C245.748 73.8933 245.548 73.98 245.435 74.1C245.328 74.2133 245.275 74.3667 245.275 74.56C245.275 74.76 245.342 74.9167 245.475 75.03C245.608 75.1433 245.795 75.2 246.035 75.2ZM252.711 76C252.138 76 251.714 75.87 251.441 75.61C251.168 75.3433 251.031 74.94 251.031 74.4V69.41H252.211V74.31C252.211 74.5567 252.271 74.74 252.391 74.86C252.511 74.98 252.688 75.04 252.921 75.04H254.241V76H252.711ZM249.421 71.62V70.66H254.241V71.62H249.421ZM257.407 76.12C256.907 76.12 256.467 76.0067 256.087 75.78C255.714 75.5533 255.424 75.23 255.217 74.81C255.01 74.39 254.907 73.8967 254.907 73.33C254.907 72.77 255.01 72.2833 255.217 71.87C255.424 71.45 255.71 71.1233 256.077 70.89C256.45 70.6567 256.887 70.54 257.387 70.54C257.867 70.54 258.29 70.6533 258.657 70.88C259.03 71.1067 259.32 71.43 259.527 71.85C259.74 72.27 259.847 72.77 259.847 73.35V73.66H256.127C256.16 74.1133 256.29 74.46 256.517 74.7C256.75 74.94 257.054 75.06 257.427 75.06C257.714 75.06 257.95 74.9933 258.137 74.86C258.33 74.72 258.464 74.54 258.537 74.32L259.747 74.41C259.58 74.9433 259.297 75.3633 258.897 75.67C258.497 75.97 258 76.12 257.407 76.12ZM256.137 72.8H258.567C258.534 72.3933 258.41 72.0933 258.197 71.9C257.984 71.7 257.71 71.6 257.377 71.6C257.044 71.6 256.767 71.7033 256.547 71.91C256.334 72.11 256.197 72.4067 256.137 72.8ZM262.823 76.12C262.323 76.12 261.903 76.04 261.563 75.88C261.223 75.72 260.96 75.5033 260.773 75.23C260.586 74.9567 260.48 74.6533 260.453 74.32L261.633 74.27C261.686 74.5233 261.81 74.7267 262.003 74.88C262.196 75.0267 262.473 75.1 262.833 75.1C263.166 75.1 263.416 75.0567 263.583 74.97C263.756 74.8767 263.843 74.74 263.843 74.56C263.843 74.4467 263.813 74.35 263.753 74.27C263.7 74.19 263.59 74.1233 263.423 74.07C263.256 74.01 263.01 73.9467 262.683 73.88C262.15 73.7733 261.73 73.65 261.423 73.51C261.116 73.37 260.896 73.1933 260.763 72.98C260.636 72.7667 260.573 72.5067 260.573 72.2C260.573 71.8867 260.653 71.6067 260.813 71.36C260.973 71.1067 261.21 70.9067 261.523 70.76C261.843 70.6133 262.236 70.54 262.703 70.54C263.21 70.54 263.623 70.6233 263.943 70.79C264.263 70.9567 264.506 71.1733 264.673 71.44C264.846 71.7067 264.953 71.9933 264.993 72.3L263.803 72.36C263.77 72.2067 263.706 72.07 263.613 71.95C263.52 71.83 263.396 71.7367 263.243 71.67C263.09 71.5967 262.913 71.56 262.713 71.56C262.386 71.56 262.15 71.6233 262.003 71.75C261.856 71.8767 261.783 72.0267 261.783 72.2C261.783 72.34 261.82 72.4567 261.893 72.55C261.973 72.6367 262.103 72.71 262.283 72.77C262.463 72.83 262.713 72.89 263.033 72.95C263.56 73.05 263.97 73.1667 264.263 73.3C264.556 73.4333 264.76 73.6 264.873 73.8C264.993 74 265.053 74.25 265.053 74.55C265.053 74.8767 264.963 75.1567 264.783 75.39C264.603 75.6233 264.346 75.8033 264.013 75.93C263.68 76.0567 263.283 76.12 262.823 76.12Z" fill="#DFDFDF"/>
</g>
</g>
</g>
<defs>
<filter id="filter0_dddd_19_2" x="-46.4931" y="-10.7293" width="607.986" height="507.847" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
<feFlood flood-opacity="0" result="BackgroundImageFix"/>
<feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>
<feOffset dy="7.15278"/>
<feGaussianBlur stdDeviation="7.15278"/>
<feColorMatrix type="matrix" values="0 0 0 0 0.117647 0 0 0 0 0.160784 0 0 0 0 0.231373 0 0 0 0.08 0"/>
<feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_19_2"/>
<feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>
<feOffset dy="28.6111"/>
<feGaussianBlur stdDeviation="14.3056"/>
<feColorMatrix type="matrix" values="0 0 0 0 0.117647 0 0 0 0 0.160784 0 0 0 0 0.231373 0 0 0 0.07 0"/>
<feBlend mode="normal" in2="effect1_dropShadow_19_2" result="effect2_dropShadow_19_2"/>
<feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>
<feOffset dy="60.7986"/>
<feGaussianBlur stdDeviation="17.8819"/>
<feColorMatrix type="matrix" values="0 0 0 0 0.117647 0 0 0 0 0.160784 0 0 0 0 0.231373 0 0 0 0.04 0"/>
<feBlend mode="normal" in2="effect2_dropShadow_19_2" result="effect3_dropShadow_19_2"/>
<feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>
<feOffset dy="107.292"/>
<feGaussianBlur stdDeviation="21.4583"/>
<feColorMatrix type="matrix" values="0 0 0 0 0.117647 0 0 0 0 0.160784 0 0 0 0 0.231373 0 0 0 0.01 0"/>
<feBlend mode="normal" in2="effect3_dropShadow_19_2" result="effect4_dropShadow_19_2"/>
<feBlend mode="normal" in="SourceGraphic" in2="effect4_dropShadow_19_2" result="shape"/>
</filter>
<filter id="filter1_f_19_2" x="-3.57643" y="117.145" width="522.153" height="240.494" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
<feFlood flood-opacity="0" result="BackgroundImageFix"/>
<feBlend mode="normal" in="SourceGraphic" in2="BackgroundImageFix" result="shape"/>
<feGaussianBlur stdDeviation="7.15278" result="effect1_foregroundBlur_19_2"/>
</filter>
<filter id="filter2_f_19_2" x="-3.57633" y="71.4578" width="522.153" height="314.792" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
<feFlood flood-opacity="0" result="BackgroundImageFix"/>
<feBlend mode="normal" in="SourceGraphic" in2="BackgroundImageFix" result="shape"/>
<feGaussianBlur stdDeviation="21.4583" result="effect1_foregroundBlur_19_2"/>
</filter>
<filter id="filter3_f_19_2" x="-75.1042" y="6.18987" width="665.208" height="422.977" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
<feFlood flood-opacity="0" result="BackgroundImageFix"/>
<feBlend mode="normal" in="SourceGraphic" in2="BackgroundImageFix" result="shape"/>
<feGaussianBlur stdDeviation="42.9167" result="effect1_foregroundBlur_19_2"/>
</filter>
<filter id="filter4_i_19_2" x="0" y="130.743" width="515" height="212.591" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
<feFlood flood-opacity="0" result="BackgroundImageFix"/>
<feBlend mode="normal" in="SourceGraphic" in2="BackgroundImageFix" result="shape"/>
<feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>
<feOffset dy="3.57639"/>
<feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1"/>
<feColorMatrix type="matrix" values="0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.6 0"/>
<feBlend mode="normal" in2="shape" result="effect1_innerShadow_19_2"/>
</filter>
<filter id="filter5_f_19_2" x="-3.57643" y="-14.3056" width="522.153" height="240.494" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
<feFlood flood-opacity="0" result="BackgroundImageFix"/>
<feBlend mode="normal" in="SourceGraphic" in2="BackgroundImageFix" result="shape"/>
<feGaussianBlur stdDeviation="7.15278" result="effect1_foregroundBlur_19_2"/>
</filter>
<filter id="filter6_f_19_2" x="-3.57633" y="-42.9167" width="522.153" height="314.792" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
<feFlood flood-opacity="0" result="BackgroundImageFix"/>
<feBlend mode="normal" in="SourceGraphic" in2="BackgroundImageFix" result="shape"/>
<feGaussianBlur stdDeviation="21.4583" result="effect1_foregroundBlur_19_2"/>
</filter>
<filter id="filter7_f_19_2" x="-75.1042" y="-85.8333" width="665.208" height="422.977" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
<feFlood flood-opacity="0" result="BackgroundImageFix"/>
<feBlend mode="normal" in="SourceGraphic" in2="BackgroundImageFix" result="shape"/>
<feGaussianBlur stdDeviation="42.9167" result="effect1_foregroundBlur_19_2"/>
</filter>
<filter id="filter8_f_19_2" x="-7.15281" y="-35.7639" width="529.306" height="311.532" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
<feFlood flood-opacity="0" result="BackgroundImageFix"/>
<feBlend mode="normal" in="SourceGraphic" in2="BackgroundImageFix" result="shape"/>
<feGaussianBlur stdDeviation="17.8819" result="effect1_foregroundBlur_19_2"/>
</filter>
<filter id="filter9_f_19_2" x="-7.15272" y="-17.882" width="529.306" height="253.252" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
<feFlood flood-opacity="0" result="BackgroundImageFix"/>
<feBlend mode="normal" in="SourceGraphic" in2="BackgroundImageFix" result="shape"/>
<feGaussianBlur stdDeviation="7.15278" result="effect1_foregroundBlur_19_2"/>
</filter>
<filter id="filter10_i_19_2" x="0" y="0" width="515" height="212.59" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
<feFlood flood-opacity="0" result="BackgroundImageFix"/>
<feBlend mode="normal" in="SourceGraphic" in2="BackgroundImageFix" result="shape"/>
<feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>
<feOffset dy="-3.57639"/>
<feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1"/>
<feColorMatrix type="matrix" values="0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.5 0"/>
<feBlend mode="normal" in2="shape" result="effect1_innerShadow_19_2"/>
</filter>
<filter id="filter11_f_19_2" x="-57.2222" y="-57.2222" width="629.444" height="457.778" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
<feFlood flood-opacity="0" result="BackgroundImageFix"/>
<feBlend mode="normal" in="SourceGraphic" in2="BackgroundImageFix" result="shape"/>
<feGaussianBlur stdDeviation="14.3056" result="effect1_foregroundBlur_19_2"/>
</filter>
<filter id="filter12_i_19_2" x="195.46" y="35.74" width="123.734" height="42.42" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
<feFlood flood-opacity="0" result="BackgroundImageFix"/>
<feBlend mode="normal" in="SourceGraphic" in2="BackgroundImageFix" result="shape"/>
<feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>
<feOffset dy="2"/>
<feGaussianBlur stdDeviation="2"/>
<feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1"/>
<feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.1 0"/>
<feBlend mode="normal" in2="shape" result="effect1_innerShadow_19_2"/>
</filter>
<linearGradient id="paint0_linear_19_2" x1="257.5" y1="0" x2="257.5" y2="343.333" gradientUnits="userSpaceOnUse">
<stop offset="0.130208" stop-color="#EEF0F1"/>
<stop offset="0.848958" stop-color="#F9FAFA"/>
</linearGradient>
<linearGradient id="paint1_linear_19_2" x1="257.5" y1="0" x2="257.5" y2="343.333" gradientUnits="userSpaceOnUse">
<stop stop-color="#475569" stop-opacity="0.06"/>
<stop offset="1" stop-color="#475569" stop-opacity="0.04"/>
</linearGradient>
<linearGradient id="paint2_linear_19_2" x1="257.5" y1="121.597" x2="257.5" y2="343.333" gradientUnits="userSpaceOnUse">
<stop offset="0.524194" stop-color="#F4F5F6"/>
<stop offset="1" stop-color="#EEF0F1"/>
</linearGradient>
<linearGradient id="paint3_linear_19_2" x1="257.5" y1="0" x2="257.5" y2="221.736" gradientUnits="userSpaceOnUse">
<stop offset="0.25" stop-color="#FAFAFB"/>
<stop offset="1" stop-color="#F4F5F6"/>
</linearGradient>
<linearGradient id="paint4_linear_19_2" x1="257.5" y1="3.20871" x2="257.5" y2="343.333" gradientUnits="userSpaceOnUse">
<stop stop-color="#F9FAFA"/>
<stop offset="0.693396" stop-color="#EEF0F1"/>
</linearGradient>
<clipPath id="clip0_19_2">
<rect width="515" height="343.333" fill="white"/>
</clipPath>
</defs>
</svg>

================
File: public/opened-mail.svg
================
<svg width="144" height="140" viewBox="0 0 144 140" fill="none" xmlns="http://www.w3.org/2000/svg">
<g clip-path="url(#clip0_1_5)">
<g filter="url(#filter0_dddd_1_5)">
<path fill-rule="evenodd" clip-rule="evenodd" d="M144 127.2C144 131.68 144 133.921 143.128 135.632C142.361 137.137 141.137 138.361 139.632 139.128C137.921 140 135.68 140 131.2 140H12.8C8.31958 140 6.07937 140 4.36808 139.128C2.86278 138.361 1.63893 137.137 0.871948 135.632C0 133.921 0 131.68 0 127.2V50.8503C0 48.3458 0 47.0935 0.345206 45.9568C0.650815 44.9505 1.15185 44.0143 1.81963 43.2018C2.57395 42.284 3.61591 41.5894 5.69984 40.2001L32.7754 22.1498C33.9739 21.3507 34.5732 20.9512 35.2216 20.6682C35.7971 20.4169 36.4001 20.2343 37.0183 20.1241C37.7148 20 38.435 20 39.8755 20H104.124C105.565 20 106.285 20 106.982 20.1241C107.6 20.2343 108.203 20.4169 108.778 20.6682C109.427 20.9512 110.026 21.3507 111.225 22.1498L138.3 40.2001C140.384 41.5894 141.426 42.284 142.18 43.2018C142.848 44.0143 143.349 44.9505 143.655 45.9568C144 47.0935 144 48.3458 144 50.8503V127.2Z" fill="url(#paint0_linear_1_5)"/>
<path d="M144.5 127.2V127.223C144.5 129.444 144.5 131.141 144.389 132.495C144.278 133.86 144.051 134.921 143.574 135.859C142.759 137.458 141.458 138.759 139.859 139.574C138.921 140.051 137.86 140.278 136.495 140.389C135.141 140.5 133.444 140.5 131.223 140.5H131.2H12.8H12.7767C10.5562 140.5 8.85927 140.5 7.5049 140.389C6.13996 140.278 5.07896 140.051 4.14108 139.574C2.5417 138.759 1.24137 137.458 0.426445 135.859C-0.0514296 134.921 -0.277826 133.86 -0.389346 132.495C-0.500002 131.141 -0.500001 129.444 -0.5 127.223V127.2V50.8503L-0.500002 50.7514C-0.500069 48.341 -0.500106 47.0196 -0.133218 45.8115C0.191491 44.7423 0.723837 43.7476 1.43336 42.8843C2.23505 41.9089 3.33451 41.176 5.34016 39.839L5.42249 39.7841L32.498 21.7337L32.5443 21.7029C33.6991 20.933 34.3325 20.5107 35.0215 20.2099C35.633 19.943 36.2737 19.749 36.9306 19.6319C37.6707 19.5 38.432 19.5 39.82 19.5H39.8755H104.124H104.18C105.568 19.5 106.329 19.5 107.069 19.6319C107.726 19.749 108.367 19.943 108.978 20.2099C109.668 20.5107 110.301 20.933 111.456 21.7029L111.502 21.7337L138.577 39.7841L138.66 39.8389C140.665 41.1759 141.765 41.9089 142.567 42.8843C143.276 43.7476 143.809 44.7423 144.133 45.8115C144.5 47.0196 144.5 48.3409 144.5 50.7514V50.8503V127.2Z" stroke="url(#paint1_linear_1_5)"/>
</g>
<path fill-rule="evenodd" clip-rule="evenodd" d="M131.2 139H12.8C10.5433 139 8.9109 138.999 7.62705 138.894C6.35487 138.791 5.51325 138.589 4.82207 138.237C3.50493 137.566 2.43407 136.495 1.76295 135.178C1.41078 134.487 1.20961 133.645 1.10567 132.373C1.00078 131.089 1 129.457 1 127.2V50.8505C1 48.2836 1.01019 47.2086 1.30206 46.2475C1.56946 45.367 2.00787 44.5478 2.59218 43.8369C3.22994 43.0609 4.1188 42.4561 6.25454 41.0323L33.3301 22.9819C34.5573 22.1638 35.073 21.8243 35.6217 21.5848C36.1252 21.3649 36.6529 21.2052 37.1938 21.1087C37.7832 21.0037 38.4006 21.0001 39.8755 21.0001H104.124C105.599 21.0001 106.217 21.0037 106.806 21.1087C107.347 21.2052 107.875 21.3649 108.378 21.5848C108.927 21.8243 109.443 22.1638 110.67 22.9819L137.745 41.0323C139.881 42.4561 140.77 43.0609 141.408 43.8369C141.992 44.5478 142.431 45.367 142.698 46.2475C142.99 47.2086 143 48.2836 143 50.8505V127.2C143 129.457 142.999 131.089 142.894 132.373C142.79 133.645 142.589 134.487 142.237 135.178C141.566 136.495 140.495 137.566 139.178 138.237C138.487 138.589 137.645 138.791 136.373 138.894C135.089 138.999 133.457 139 131.2 139ZM143.128 135.632C144 133.921 144 131.681 144 127.2V50.8505C144 48.3459 144 47.0936 143.655 45.9569C143.349 44.9506 142.848 44.0144 142.18 43.2019C141.426 42.2842 140.384 41.5895 138.3 40.2002L111.225 22.1498C110.026 21.3508 109.427 20.9513 108.778 20.6683C108.203 20.4171 107.6 20.2345 106.982 20.1243C106.285 20.0001 105.565 20.0001 104.124 20.0001H39.8755C38.435 20.0001 37.7148 20.0001 37.0183 20.1243C36.4001 20.2345 35.7971 20.4171 35.2216 20.6683C34.5733 20.9513 33.974 21.3508 32.7755 22.1498L32.7754 22.1499L5.69978 40.2003C3.61589 41.5895 2.57394 42.2842 1.81963 43.2019C1.15185 44.0144 0.650815 44.9506 0.345206 45.9569C0 47.0936 0 48.3459 0 50.8505V127.2C0 131.681 0 133.921 0.871948 135.632C1.63893 137.137 2.86278 138.361 4.36808 139.128C6.07937 140 8.31958 140 12.8 140H131.2C135.68 140 137.921 140 139.632 139.128C141.137 138.361 142.361 137.137 143.128 135.632Z" fill="#475569" fill-opacity="0.06"/>
<g style="mix-blend-mode:multiply" filter="url(#filter1_f_1_5)">
<path d="M25.2569 30.7834C26.2983 27.9258 29.049 26.0531 32.0894 26.1319L117.785 28.352C121.119 28.4383 123.94 30.8409 124.557 34.1187L132.898 78.4819C133.726 82.8821 130.31 86.9352 125.834 86.8658L15.4449 85.1543C10.5787 85.0788 7.23907 80.2278 8.90537 75.6552L25.2569 30.7834Z" fill="#1E293B" fill-opacity="0.2"/>
</g>
<path d="M24.9086 2.79313C24.4903 3.46263 24.2518 4.24055 24.0792 5.25307C23.908 6.25775 23.7971 7.52559 23.652 9.18465L23.6504 9.20205L15.9982 96.6679L15.9967 96.6853C15.8515 98.3444 15.7406 99.6122 15.7347 100.631C15.7288 101.658 15.8286 102.466 16.1244 103.198C16.6287 104.446 17.5152 105.503 18.6569 106.216C19.3264 106.635 20.1043 106.873 21.1169 107.046C22.1216 107.217 23.3894 107.328 25.0485 107.473L25.0658 107.474L109.543 114.865L109.56 114.867C111.22 115.012 112.487 115.123 113.507 115.129C114.534 115.135 115.341 115.035 116.073 114.739C117.321 114.235 118.378 113.348 119.091 112.206C119.51 111.537 119.748 110.759 119.921 109.746C120.092 108.742 120.203 107.474 120.348 105.815L120.35 105.798L128.002 18.3316L128.003 18.3143C128.149 16.6552 128.259 15.3873 128.265 14.3682C128.271 13.3411 128.171 12.5336 127.876 11.8016C127.371 10.5533 126.485 9.4968 125.343 8.78339C124.674 8.36504 123.896 8.12654 122.883 7.95399C121.878 7.78278 120.611 7.67186 118.952 7.52672L118.934 7.52519L34.4569 0.134387L34.4395 0.132865C32.7804 -0.0122854 31.5126 -0.123208 30.4934 -0.129062C29.4663 -0.134962 28.6588 -0.0351653 27.9268 0.26057C26.6786 0.764891 25.6221 1.65143 24.9086 2.79313Z" fill="white" stroke="url(#paint2_linear_1_5)" stroke-width="0.75"/>
<path d="M24.3378 5.64843C24.6266 2.34733 27.5368 -0.0946096 30.8379 0.194199L122.488 8.21253C125.789 8.50134 128.231 11.4115 127.942 14.7126L119.662 109.351C119.373 112.652 116.463 115.094 113.162 114.805L21.5122 106.787C18.2111 106.498 15.7692 103.588 16.058 100.287L24.3378 5.64843Z" fill="url(#paint3_linear_1_5)" fill-opacity="0.15"/>
<path d="M20.4781 55.5017L24.5483 8.9794C24.8167 5.91084 24.951 4.37655 25.6507 3.25676C26.2662 2.27177 27.1777 1.50691 28.2546 1.07181C29.4789 0.577164 31.0132 0.711396 34.0818 0.979861L119.157 8.42296C122.225 8.69143 123.76 8.82566 124.879 9.52538C125.864 10.1409 126.629 11.0524 127.064 12.1293C127.559 13.3536 127.425 14.8879 127.156 17.9564L122.65 69.4597" stroke="white" stroke-width="0.75"/>
<path d="M29.8317 11.068L29.0951 11.0035L29.2853 8.83002L30.0367 8.89576C30.2525 8.91464 30.434 8.97437 30.5814 9.07495C30.7295 9.17489 30.8382 9.30952 30.9075 9.47884C30.9768 9.64817 31.0016 9.84569 30.9818 10.0714C30.962 10.2978 30.9029 10.4887 30.8045 10.644C30.7068 10.7995 30.5752 10.9138 30.4098 10.987C30.2451 11.0603 30.0524 11.0873 29.8317 11.068ZM29.5187 10.6973L29.8424 10.7256C29.9938 10.7389 30.1225 10.7223 30.2285 10.676C30.3346 10.629 30.4179 10.5525 30.4785 10.4466C30.5391 10.3399 30.5767 10.2035 30.5913 10.0372C30.6058 9.87095 30.5924 9.73075 30.5511 9.61663C30.5098 9.5018 30.4417 9.41278 30.3467 9.34957C30.2524 9.28572 30.1317 9.24736 29.9846 9.23448L29.6492 9.20514L29.5187 10.6973ZM31.9626 11.2865C31.7992 11.2722 31.661 11.2259 31.5481 11.1476C31.4359 11.0686 31.3535 10.9637 31.3007 10.8329C31.2481 10.7014 31.2292 10.5504 31.2441 10.3799C31.2588 10.2122 31.3035 10.0678 31.3783 9.94673C31.4538 9.82501 31.5523 9.73381 31.6738 9.67315C31.7954 9.61178 31.934 9.5879 32.0897 9.60152C32.1902 9.61031 32.2835 9.63488 32.3698 9.67523C32.4569 9.71493 32.5318 9.77138 32.5946 9.8446C32.658 9.91789 32.705 10.0083 32.7355 10.1157C32.7661 10.2225 32.7752 10.3473 32.7627 10.4903L32.7524 10.6081L31.4162 10.4912L31.4388 10.2322L32.4067 10.3169C32.4125 10.2432 32.4023 10.1764 32.3762 10.1164C32.3501 10.0556 32.3106 10.0062 32.2576 9.96805C32.2053 9.92997 32.1424 9.90771 32.0688 9.90127C31.9903 9.8944 31.9196 9.90747 31.8568 9.94047C31.7941 9.97277 31.7435 10.0182 31.7048 10.0769C31.6669 10.1349 31.6445 10.2003 31.6374 10.2731L31.6176 10.4992C31.6093 10.594 31.6195 10.6769 31.6483 10.7478C31.677 10.8181 31.721 10.8739 31.7801 10.9155C31.8393 10.9563 31.9106 10.9804 31.9941 10.9877C32.05 10.9926 32.1012 10.9892 32.1479 10.9776C32.1946 10.9653 32.2359 10.945 32.2719 10.9168C32.3079 10.8886 32.3364 10.8522 32.3574 10.8077L32.7126 10.8794C32.6816 10.9723 32.6312 11.0513 32.5614 11.1164C32.4923 11.181 32.4068 11.2284 32.3051 11.2587C32.2034 11.2883 32.0892 11.2976 31.9626 11.2865ZM33.4815 11.4204C33.3782 11.4114 33.2867 11.3849 33.2072 11.3408C33.1284 11.2962 33.0681 11.2353 33.0264 11.1582C32.9854 11.0812 32.9695 10.9892 32.9789 10.8824C32.9869 10.7904 33.0105 10.7158 33.0498 10.6587C33.089 10.6015 33.1395 10.5575 33.2014 10.5265C33.2633 10.4956 33.3318 10.4741 33.407 10.4622C33.483 10.4496 33.561 10.4425 33.641 10.4409C33.7373 10.4394 33.8156 10.4373 33.8757 10.4347C33.9359 10.4314 33.9801 10.4225 34.0085 10.4078C34.0377 10.3926 34.0538 10.3665 34.0571 10.3297L34.0576 10.3234C34.0646 10.2434 34.0463 10.1794 34.0028 10.1314C33.9592 10.0834 33.8928 10.0555 33.8037 10.0477C33.7096 10.0395 33.6331 10.0535 33.5744 10.0897C33.5163 10.1259 33.4753 10.1712 33.4513 10.2254L33.097 10.1431C33.134 10.0465 33.1879 9.96781 33.2588 9.907C33.3298 9.84548 33.4138 9.80221 33.5108 9.77719C33.6079 9.75146 33.7134 9.74358 33.8273 9.75354C33.9058 9.76041 33.9832 9.77645 34.0594 9.80166C34.1356 9.82686 34.2041 9.8635 34.2647 9.91159C34.3255 9.95897 34.3721 10.0204 34.4047 10.096C34.4381 10.1716 34.45 10.2636 34.4405 10.3718L34.345 11.4628L33.9757 11.4305L33.9953 11.2066L33.9826 11.2055C33.9553 11.2487 33.9187 11.2883 33.8727 11.3242C33.8276 11.3595 33.7721 11.3863 33.7063 11.4048C33.6413 11.4227 33.5664 11.4279 33.4815 11.4204ZM33.6059 11.1469C33.683 11.1536 33.7512 11.1443 33.8105 11.1188C33.8698 11.0926 33.9169 11.0554 33.9518 11.0071C33.9874 10.9589 34.0078 10.9047 34.0131 10.8446L34.0299 10.6525C34.017 10.6613 33.9957 10.6687 33.9659 10.6747C33.9369 10.6807 33.9044 10.6853 33.8685 10.6886C33.8325 10.6919 33.797 10.6945 33.7619 10.6964C33.7268 10.6983 33.6964 10.6999 33.6706 10.7012C33.6126 10.704 33.5602 10.7122 33.5133 10.726C33.4665 10.7397 33.4286 10.7613 33.3997 10.7909C33.3708 10.8197 33.3541 10.8589 33.3498 10.9084C33.3436 10.9792 33.3648 11.0349 33.4133 11.0755C33.4618 11.1161 33.526 11.1399 33.6059 11.1469ZM34.7314 11.4966L34.874 9.8665L35.2465 9.89909L35.2227 10.1708L35.2397 10.1723C35.2776 10.0808 35.3349 10.0127 35.4116 9.96808C35.489 9.9228 35.5743 9.90425 35.6677 9.91242C35.689 9.91428 35.7126 9.91741 35.7386 9.92183C35.7653 9.92559 35.7874 9.93002 35.8048 9.93511L35.7739 10.2885C35.7581 10.2814 35.7327 10.2742 35.6977 10.2669C35.6634 10.2589 35.6301 10.2535 35.5975 10.2506C35.5275 10.2445 35.4632 10.2542 35.4046 10.2797C35.3468 10.3046 35.2997 10.3422 35.2632 10.3925C35.2267 10.4428 35.2055 10.5026 35.1994 10.5719L35.1155 11.5303L34.7314 11.4966ZM37.7566 11.0705L37.8392 10.1259L38.2234 10.1595L38.0808 11.7897L37.7083 11.7571L37.7336 11.4674L37.7166 11.4659C37.6719 11.5539 37.6048 11.6233 37.5156 11.6739C37.427 11.7246 37.3215 11.7446 37.1991 11.7339C37.0923 11.7246 36.9999 11.6926 36.922 11.638C36.8448 11.5828 36.7872 11.5075 36.7492 11.4122C36.7113 11.3162 36.698 11.2032 36.7094 11.073L36.8002 10.035L37.1844 10.0686L37.0988 11.0471C37.0898 11.1504 37.1109 11.235 37.1622 11.3008C37.2134 11.3666 37.2851 11.4035 37.377 11.4116C37.4336 11.4165 37.4897 11.4075 37.5452 11.3846C37.6006 11.3616 37.6477 11.3244 37.6865 11.2729C37.726 11.2207 37.7493 11.1533 37.7566 11.0705ZM39.8692 10.7377L39.5156 10.7453C39.5088 10.709 39.4944 10.6743 39.4723 10.641C39.451 10.6077 39.4206 10.5798 39.3813 10.5571C39.3419 10.5344 39.2925 10.5204 39.2331 10.5152C39.1531 10.5082 39.0844 10.5197 39.0269 10.5496C38.9701 10.5796 38.9396 10.6222 38.9355 10.6774C38.9306 10.7248 38.9446 10.7648 38.9774 10.7976C39.0109 10.8305 39.0682 10.8601 39.1493 10.8865L39.4221 10.9702C39.5735 11.017 39.6835 11.0797 39.7522 11.1584C39.8215 11.2372 39.8515 11.335 39.842 11.4518C39.8323 11.5544 39.7943 11.6423 39.728 11.7156C39.6625 11.7883 39.5754 11.842 39.4669 11.8767C39.3583 11.9114 39.2361 11.9228 39.1003 11.911C38.9008 11.8935 38.7438 11.8377 38.6294 11.7436C38.5151 11.6487 38.4528 11.5253 38.4426 11.3732L38.8204 11.3699C38.8309 11.445 38.8621 11.5037 38.914 11.546C38.966 11.5884 39.0361 11.6134 39.1246 11.6211C39.2158 11.6291 39.2907 11.6168 39.3492 11.5841C39.4083 11.5515 39.4403 11.5076 39.4452 11.4524C39.4493 11.4057 39.4346 11.3656 39.4012 11.332C39.3685 11.2985 39.3153 11.2703 39.2417 11.2475L38.9688 11.1648C38.8153 11.1185 38.7044 11.0536 38.6361 10.9699C38.568 10.8855 38.5394 10.7839 38.5505 10.6651C38.5586 10.5646 38.5935 10.4799 38.6551 10.4112C38.7175 10.3418 38.8 10.2913 38.9025 10.2596C39.0059 10.2273 39.1227 10.2168 39.2528 10.2282C39.4439 10.2449 39.5907 10.2988 39.6932 10.3897C39.7965 10.4807 39.8551 10.5967 39.8692 10.7377ZM40.835 12.0627C40.6715 12.0484 40.5333 12.0021 40.4204 11.9238C40.3083 11.8448 40.2258 11.7399 40.1731 11.6091C40.1204 11.4776 40.1016 11.3266 40.1165 11.1561C40.1312 10.9884 40.1759 10.844 40.2506 10.723C40.3262 10.6012 40.4247 10.51 40.5462 10.4494C40.6678 10.388 40.8064 10.3641 40.962 10.3778C41.0625 10.3865 41.1559 10.4111 41.2422 10.4515C41.3293 10.4912 41.4042 10.5476 41.4669 10.6208C41.5304 10.6941 41.5774 10.7845 41.6079 10.892C41.6385 10.9987 41.6475 11.1236 41.635 11.2665L41.6247 11.3843L40.2886 11.2674L40.3112 11.0084L41.2791 11.0931C41.2848 11.0195 41.2746 10.9526 41.2485 10.8926C41.2225 10.8319 41.1829 10.7824 41.13 10.7443C41.0777 10.7062 41.0148 10.6839 40.9412 10.6775C40.8626 10.6706 40.792 10.6837 40.7292 10.7167C40.6665 10.749 40.6158 10.7945 40.5772 10.8531C40.5393 10.9111 40.5168 10.9765 40.5097 11.0493L40.49 11.2754C40.4817 11.3702 40.4919 11.4531 40.5206 11.524C40.5494 11.5943 40.5934 11.6502 40.6525 11.6917C40.7116 11.7325 40.783 11.7566 40.8664 11.7639C40.9223 11.7688 40.9736 11.7654 41.0202 11.7538C41.067 11.7415 41.1083 11.7213 41.1443 11.693C41.1802 11.6648 41.2087 11.6284 41.2297 11.5839L41.5849 11.6557C41.554 11.7485 41.5036 11.8275 41.4337 11.8927C41.3646 11.9572 41.2792 12.0046 41.1775 12.0349C41.0758 12.0645 40.9616 12.0738 40.835 12.0627ZM41.8876 12.1227L42.0302 10.4926L42.4027 10.5252L42.379 10.7969L42.396 10.7984C42.4339 10.7069 42.4912 10.6388 42.5678 10.5942C42.6452 10.5489 42.7306 10.5303 42.824 10.5385C42.8452 10.5404 42.8688 10.5435 42.8948 10.5479C42.9216 10.5517 42.9437 10.5561 42.961 10.5612L42.9301 10.9146C42.9143 10.9075 42.8889 10.9003 42.8539 10.893C42.8197 10.885 42.7863 10.8796 42.7538 10.8767C42.6837 10.8706 42.6194 10.8803 42.5609 10.9058C42.5031 10.9307 42.4559 10.9683 42.4195 11.0186C42.383 11.0689 42.3617 11.1287 42.3556 11.198L42.2718 12.1563L41.8876 12.1227ZM43.3628 11.9524L43.3388 12.0679C43.3211 12.1562 43.2955 12.2452 43.262 12.3349C43.2291 12.4255 43.1954 12.5084 43.161 12.5838C43.1266 12.6593 43.099 12.7185 43.0781 12.7616L42.8192 12.7389C42.8328 12.6966 42.8514 12.6391 42.8749 12.5663C42.8991 12.4935 42.9234 12.4115 42.9478 12.3203C42.9721 12.229 42.9913 12.1359 43.0054 12.0409L43.0232 11.9226L43.3628 11.9524ZM28.681 21.0055L28.2577 18.7783L28.6812 18.8154L28.933 20.4469L28.9532 20.4486L29.5111 18.888L29.8963 18.9217L30.1757 20.5567L30.1948 20.5583L30.7263 18.9943L31.1497 19.0313L30.3461 21.1512L29.9577 21.1172L29.656 19.5541L29.639 19.5526L29.0694 21.0395L28.681 21.0055ZM31.7681 21.3077C31.6047 21.2934 31.4665 21.2471 31.3536 21.1687C31.2414 21.0898 31.159 20.9849 31.1063 20.8541C31.0536 20.7226 31.0348 20.5716 31.0497 20.4011C31.0643 20.2334 31.1091 20.089 31.1838 19.9679C31.2593 19.8462 31.3579 19.755 31.4794 19.6943C31.601 19.633 31.7396 19.6091 31.8952 19.6227C31.9957 19.6315 32.0891 19.6561 32.1754 19.6964C32.2625 19.7361 32.3374 19.7926 32.4001 19.8658C32.4636 19.9391 32.5106 20.0294 32.5411 20.1369C32.5717 20.2437 32.5807 20.3685 32.5682 20.5114L32.5579 20.6293L31.2217 20.5124L31.2444 20.2534L32.2123 20.3381C32.218 20.2644 32.2078 20.1976 32.1817 20.1376C32.1557 20.0768 32.1161 20.0274 32.0631 19.9892C32.0109 19.9512 31.9479 19.9289 31.8744 19.9225C31.7958 19.9156 31.7252 19.9287 31.6624 19.9617C31.5997 19.994 31.549 20.0394 31.5104 20.0981C31.4725 20.1561 31.45 20.2215 31.4429 20.2943L31.4232 20.5203C31.4149 20.6152 31.4251 20.698 31.4538 20.769C31.4826 20.8392 31.5265 20.8951 31.5856 20.9367C31.6448 20.9775 31.7161 21.0015 31.7996 21.0089C31.8555 21.0137 31.9068 21.0104 31.9534 20.9988C32.0001 20.9865 32.0415 20.9662 32.0775 20.938C32.1134 20.9098 32.1419 20.8734 32.1629 20.8289L32.5181 20.9006C32.4872 20.9934 32.4368 21.0724 32.3669 21.1376C32.2978 21.2022 32.2124 21.2496 32.1106 21.2799C32.009 21.3095 31.8948 21.3188 31.7681 21.3077ZM33.3951 19.2278L33.205 21.4013L32.8208 21.3677L33.011 19.1942L33.3951 19.2278ZM34.3083 21.5299C34.1456 21.5157 34.009 21.4677 33.8985 21.386C33.7887 21.3044 33.7078 21.1979 33.6559 21.0665C33.6047 20.9344 33.5863 20.7859 33.6008 20.621C33.6152 20.4555 33.6599 20.3122 33.7346 20.1911C33.8094 20.0693 33.908 19.9781 34.0302 19.9175C34.1532 19.8563 34.2943 19.8326 34.4535 19.8465C34.5858 19.8581 34.7007 19.8928 34.7983 19.9505C34.8967 20.0076 34.9725 20.083 35.0256 20.1768C35.0788 20.2698 35.1044 20.3754 35.1027 20.4936L34.7355 20.4615C34.7275 20.3817 34.6978 20.3131 34.6465 20.2559C34.596 20.198 34.5243 20.165 34.4317 20.1569C34.3531 20.15 34.2823 20.1652 34.2191 20.2025C34.1561 20.239 34.1044 20.2951 34.0643 20.3707C34.0249 20.4464 34.0004 20.5391 33.9908 20.6487C33.9811 20.7598 33.989 20.8568 34.0146 20.9396C34.0402 21.0217 34.0804 21.0868 34.1354 21.1351C34.1911 21.1828 34.259 21.2101 34.3389 21.2171C34.3955 21.2221 34.447 21.2159 34.4935 21.1985C34.5407 21.1806 34.5813 21.1524 34.6153 21.114C34.6493 21.0757 34.6745 21.0276 34.691 20.9699L35.0582 21.002C35.0389 21.1165 34.996 21.2158 34.9295 21.2998C34.863 21.3831 34.777 21.4454 34.6714 21.4868C34.5659 21.5275 34.4449 21.5419 34.3083 21.5299ZM36.0332 21.6808C35.874 21.6669 35.7391 21.6198 35.6285 21.5395C35.5179 21.4593 35.4359 21.3534 35.3825 21.2218C35.3298 21.0903 35.3109 20.9403 35.3256 20.7719C35.3403 20.6035 35.3851 20.4588 35.4598 20.3377C35.5353 20.2167 35.6345 20.1263 35.7573 20.0665C35.8802 20.0066 36.0213 19.9837 36.1804 19.9976C36.3396 20.0115 36.4745 20.0586 36.5852 20.1389C36.6958 20.2192 36.7774 20.3254 36.83 20.4576C36.8833 20.5899 36.9026 20.7402 36.8878 20.9086C36.8731 21.077 36.828 21.2214 36.7526 21.3417C36.6779 21.462 36.5791 21.5521 36.4563 21.612C36.3334 21.6718 36.1924 21.6947 36.0332 21.6808ZM36.0622 21.3732C36.1485 21.3808 36.2228 21.3634 36.285 21.3211C36.3472 21.278 36.396 21.2174 36.4313 21.1392C36.4674 21.0611 36.4898 20.9725 36.4984 20.8735C36.5072 20.7737 36.5005 20.6822 36.4786 20.599C36.4574 20.5152 36.4199 20.4467 36.3661 20.3935C36.3123 20.3403 36.2422 20.3099 36.1559 20.3024C36.0675 20.2947 35.9918 20.3123 35.9289 20.3552C35.8666 20.3983 35.8175 20.4592 35.7813 20.538C35.746 20.6162 35.7239 20.7052 35.7152 20.805C35.7065 20.904 35.7128 20.9951 35.7341 21.0782C35.756 21.1614 35.7939 21.2296 35.8477 21.2828C35.9023 21.3354 35.9738 21.3655 36.0622 21.3732ZM37.1432 21.7458L37.2858 20.1157L37.653 20.1478L37.6287 20.4248L37.6478 20.4265C37.69 20.3361 37.7526 20.2681 37.8357 20.2226C37.9189 20.1764 38.015 20.1581 38.1239 20.1676C38.2343 20.1773 38.325 20.2123 38.396 20.2727C38.4678 20.3325 38.5152 20.4097 38.5383 20.5044L38.5552 20.5059C38.5993 20.4185 38.6664 20.3516 38.7567 20.3054C38.8478 20.2584 38.9524 20.2401 39.0706 20.2505C39.2206 20.2636 39.3388 20.3217 39.4254 20.4248C39.5119 20.5279 39.5472 20.6704 39.5313 20.8522L39.4355 21.9464L39.0503 21.9127L39.1408 20.8779C39.1497 20.7768 39.1293 20.7005 39.0796 20.6491C39.0299 20.597 38.9662 20.5675 38.8884 20.5607C38.7957 20.5526 38.7206 20.5753 38.6632 20.6287C38.6065 20.6815 38.5742 20.7539 38.5661 20.8458L38.4772 21.8626L38.1004 21.8296L38.1924 20.7789C38.1997 20.6947 38.1801 20.6253 38.1336 20.5706C38.0877 20.516 38.0241 20.4851 37.9428 20.478C37.8876 20.4731 37.8361 20.4829 37.7884 20.5072C37.7407 20.5309 37.7011 20.567 37.6698 20.6156C37.6385 20.6635 37.6199 20.721 37.6141 20.7882L37.5273 21.7795L37.1432 21.7458ZM40.5442 22.0755C40.3807 22.0612 40.2426 22.0149 40.1296 21.9365C40.0175 21.8576 39.9351 21.7527 39.8823 21.6219C39.8297 21.4904 39.8108 21.3394 39.8257 21.1689C39.8404 21.0012 39.8851 20.8568 39.9599 20.7357C40.0354 20.614 40.1339 20.5228 40.2554 20.4621C40.377 20.4008 40.5156 20.3769 40.6713 20.3905C40.7717 20.3993 40.8651 20.4239 40.9514 20.4642C41.0385 20.5039 41.1134 20.5604 41.1762 20.6336C41.2396 20.7069 41.2866 20.7973 41.3171 20.9047C41.3477 21.0115 41.3568 21.1363 41.3443 21.2793L41.3339 21.3971L39.9978 21.2802L40.0204 21.0212L40.9883 21.1059C40.9941 21.0322 40.9839 20.9654 40.9578 20.9054C40.9317 20.8446 40.8922 20.7952 40.8392 20.757C40.7869 20.719 40.724 20.6967 40.6504 20.6903C40.5719 20.6834 40.5012 20.6965 40.4384 20.7295C40.3757 20.7618 40.325 20.8072 40.2864 20.8659C40.2485 20.9239 40.2261 20.9893 40.219 21.0621L40.1992 21.2882C40.1909 21.383 40.2011 21.4658 40.2299 21.5368C40.2586 21.607 40.3026 21.6629 40.3617 21.7045C40.4209 21.7453 40.4922 21.7694 40.5757 21.7767C40.6316 21.7815 40.6828 21.7782 40.7295 21.7666C40.7762 21.7543 40.8175 21.734 40.8535 21.7058C40.8895 21.6776 40.918 21.6412 40.939 21.5967L41.2942 21.6684C41.2632 21.7612 41.2128 21.8402 41.143 21.9054C41.0739 21.97 40.9884 22.0174 40.8867 22.0477C40.785 22.0773 40.6708 22.0866 40.5442 22.0755ZM43.2948 20.6414L43.2688 20.9386L42.3317 20.8566L42.3577 20.5594L43.2948 20.6414ZM42.6232 20.1891L43.0074 20.2227L42.8735 21.7531C42.869 21.8048 42.8733 21.8451 42.8864 21.874C42.9004 21.9023 42.92 21.9226 42.9453 21.9348C42.9706 21.947 42.9992 21.9545 43.031 21.9573C43.0551 21.9594 43.0772 21.9595 43.0973 21.9577C43.1181 21.956 43.1339 21.9541 43.1448 21.9522L43.1833 22.2582C43.1621 22.2635 43.1321 22.2687 43.0931 22.2739C43.0549 22.2791 43.0085 22.28 42.9539 22.2767C42.8574 22.2711 42.772 22.249 42.6977 22.2104C42.6234 22.1711 42.5666 22.1155 42.5272 22.0436C42.4886 21.9718 42.4741 21.885 42.4837 21.7832L42.6232 20.1891ZM44.1642 22.3922C44.005 22.3783 43.8701 22.3312 43.7595 22.2509C43.6489 22.1707 43.5669 22.0647 43.5136 21.9332C43.4609 21.8017 43.4419 21.6517 43.4567 21.4833C43.4714 21.3149 43.5161 21.1702 43.5909 21.0491C43.6664 20.9281 43.7655 20.8377 43.8884 20.7778C44.0113 20.718 44.1523 20.6951 44.3115 20.709C44.4707 20.7229 44.6056 20.77 44.7162 20.8503C44.8268 20.9305 44.9084 21.0368 44.961 21.169C45.0143 21.3013 45.0336 21.4516 45.0189 21.62C45.0041 21.7884 44.9591 21.9327 44.8837 22.053C44.809 22.1734 44.7102 22.2635 44.5873 22.3233C44.4645 22.3832 44.3234 22.4061 44.1642 22.3922ZM44.1933 22.0846C44.2796 22.0922 44.3538 22.0748 44.416 22.0324C44.4782 21.9894 44.527 21.9288 44.5624 21.8506C44.5984 21.7725 44.6208 21.6839 44.6295 21.5849C44.6382 21.4851 44.6316 21.3936 44.6096 21.3104C44.5885 21.2266 44.551 21.1581 44.4972 21.1049C44.4433 21.0517 44.3733 21.0213 44.287 21.0138C44.1985 21.006 44.1228 21.0236 44.0599 21.0666C43.9977 21.1097 43.9485 21.1706 43.9124 21.2494C43.877 21.3276 43.855 21.4166 43.8462 21.5163C43.8376 21.6154 43.8439 21.7065 43.8651 21.7896C43.8871 21.8728 43.9249 21.941 43.9788 21.9942C44.0333 22.0467 44.1048 22.0769 44.1933 22.0846ZM46.9721 20.9632L46.9461 21.2603L46.009 21.1783L46.035 20.8812L46.9721 20.9632ZM46.3006 20.5109L46.6847 20.5445L46.5508 22.0748C46.5463 22.1265 46.5506 22.1668 46.5638 22.1957C46.5777 22.2241 46.5973 22.2443 46.6226 22.2565C46.648 22.2687 46.6765 22.2762 46.7084 22.279C46.7324 22.2811 46.7545 22.2812 46.7746 22.2794C46.7955 22.2777 46.8113 22.2759 46.8222 22.274L46.8606 22.58C46.8395 22.5853 46.8094 22.5905 46.7705 22.5956C46.7323 22.6008 46.6858 22.6018 46.6312 22.5984C46.5348 22.5928 46.4494 22.5707 46.375 22.5321C46.3008 22.4928 46.2439 22.4373 46.2046 22.3654C46.166 22.2936 46.1515 22.2067 46.1611 22.1049L46.3006 20.5109ZM47.6536 21.7029L47.57 22.6581L47.1858 22.6245L47.376 20.4509L47.7517 20.4838L47.6799 21.3042L47.699 21.3059C47.7453 21.2172 47.8107 21.1499 47.8953 21.1038C47.9807 21.0571 48.0856 21.0392 48.2101 21.0501C48.3233 21.06 48.42 21.0923 48.5 21.1471C48.5801 21.2019 48.6391 21.2769 48.6771 21.3722C48.7158 21.4675 48.7294 21.581 48.7179 21.7126L48.6271 22.7506L48.2429 22.7169L48.3285 21.7384C48.3381 21.6288 48.3173 21.541 48.266 21.4752C48.2155 21.4088 48.1396 21.3711 48.0384 21.3623C47.9705 21.3564 47.9084 21.3659 47.852 21.3909C47.7964 21.4153 47.751 21.4537 47.7157 21.5062C47.6812 21.5588 47.6605 21.6244 47.6536 21.7029ZM49.7376 22.8798C49.5741 22.8655 49.436 22.8192 49.323 22.7409C49.2109 22.6619 49.1285 22.557 49.0757 22.4262C49.0231 22.2947 49.0042 22.1437 49.0191 21.9732C49.0338 21.8055 49.0785 21.6611 49.1533 21.54C49.2288 21.4183 49.3273 21.3271 49.4488 21.2665C49.5704 21.2051 49.709 21.1812 49.8647 21.1948C49.9651 21.2036 50.0585 21.2282 50.1448 21.2685C50.2319 21.3082 50.3068 21.3647 50.3696 21.4379C50.433 21.5112 50.48 21.6016 50.5105 21.709C50.5411 21.8158 50.5502 21.9407 50.5376 22.0836L50.5273 22.2014L49.1912 22.0845L49.2138 21.8255L50.1817 21.9102C50.1875 21.8366 50.1773 21.7697 50.1512 21.7097C50.1251 21.6489 50.0856 21.5995 50.0326 21.5614C49.9803 21.5233 49.9174 21.501 49.8438 21.4946C49.7653 21.4877 49.6946 21.5008 49.6318 21.5338C49.5691 21.5661 49.5184 21.6116 49.4798 21.6702C49.4419 21.7282 49.4195 21.7936 49.4124 21.8664L49.3926 22.0925C49.3843 22.1873 49.3945 22.2702 49.4232 22.3411C49.452 22.4114 49.496 22.4673 49.5551 22.5088C49.6143 22.5496 49.6856 22.5737 49.7691 22.581C49.825 22.5859 49.8762 22.5825 49.9229 22.5709C49.9696 22.5586 50.0109 22.5383 50.0469 22.5101C50.0829 22.4819 50.1114 22.4455 50.1324 22.401L50.4876 22.4727C50.4566 22.5656 50.4062 22.6446 50.3364 22.7097C50.2673 22.7743 50.1818 22.8217 50.0801 22.852C49.9784 22.8816 49.8642 22.8909 49.7376 22.8798ZM51.5485 23.0062L51.7387 20.8326L53.1311 20.9545L53.1022 21.2845L52.1036 21.1971L52.0519 21.7872L52.9551 21.8662L52.9262 22.1963L52.0231 22.1173L51.9423 23.0406L51.5485 23.0062ZM54.2795 22.5542L54.3621 21.6097L54.7463 21.6433L54.6037 23.2734L54.2312 23.2409L54.2565 22.9511L54.2396 22.9496C54.1948 23.0377 54.1278 23.107 54.0385 23.1577C53.9499 23.2084 53.8445 23.2284 53.722 23.2177C53.6152 23.2084 53.5228 23.1764 53.4449 23.1218C53.3678 23.0666 53.3102 22.9913 53.2722 22.896C53.2342 22.8 53.2209 22.6869 53.2323 22.5567L53.3231 21.5188L53.7073 21.5524L53.6217 22.5309C53.6127 22.6342 53.6338 22.7188 53.6851 22.7846C53.7364 22.8504 53.808 22.8873 53.9 22.8953C53.9566 22.9003 54.0126 22.8913 54.0681 22.8683C54.1236 22.8454 54.1707 22.8082 54.2094 22.7566C54.2489 22.7045 54.2723 22.637 54.2795 22.5542ZM55.9554 21.7491L55.9294 22.0462L54.9923 21.9643L55.0183 21.6671L55.9554 21.7491ZM55.2838 21.2968L55.668 21.3304L55.5341 22.8608C55.5296 22.9124 55.5339 22.9527 55.5471 22.9817C55.561 23.01 55.5806 23.0302 55.6059 23.0424C55.6312 23.0546 55.6598 23.0621 55.6916 23.0649C55.7157 23.067 55.7378 23.0672 55.7579 23.0654C55.7787 23.0636 55.7946 23.0618 55.8054 23.0599L55.8439 23.3659C55.8228 23.3712 55.7927 23.3764 55.7538 23.3815C55.7155 23.3868 55.6691 23.3877 55.6145 23.3843C55.518 23.3787 55.4326 23.3567 55.3583 23.3181C55.284 23.2788 55.2272 23.2232 55.1879 23.1513C55.1492 23.0795 55.1347 22.9927 55.1444 22.8908L55.2838 21.2968ZM57.2331 22.8126L57.3157 21.8681L57.6999 21.9017L57.5573 23.5318L57.1848 23.4993L57.2101 23.2095L57.1931 23.208C57.1484 23.2961 57.0813 23.3654 56.9921 23.4161C56.9035 23.4668 56.798 23.4868 56.6756 23.4761C56.5688 23.4668 56.4764 23.4348 56.3985 23.3802C56.3213 23.325 56.2637 23.2497 56.2257 23.1544C56.1878 23.0584 56.1745 22.9453 56.1859 22.8151L56.2767 21.7772L56.6609 21.8108L56.5753 22.7893C56.5662 22.8926 56.5874 22.9772 56.6386 23.043C56.6899 23.1088 56.7616 23.1457 56.8535 23.1537C56.9101 23.1587 56.9662 23.1497 57.0217 23.1267C57.0771 23.1038 57.1242 23.0666 57.163 23.015C57.2025 22.9629 57.2258 22.8954 57.2331 22.8126ZM57.9523 23.5664L58.095 21.9363L58.4675 21.9689L58.4437 22.2406L58.4607 22.242C58.4986 22.1505 58.5559 22.0825 58.6325 22.0378C58.7099 21.9926 58.7953 21.974 58.8887 21.9822C58.9099 21.984 58.9336 21.9872 58.9595 21.9916C58.9863 21.9954 59.0084 21.9998 59.0258 22.0049L58.9948 22.3583C58.9791 22.3512 58.9537 22.344 58.9187 22.3366C58.8844 22.3287 58.851 22.3232 58.8185 22.3204C58.7484 22.3143 58.6841 22.324 58.6256 22.3495C58.5678 22.3744 58.5207 22.412 58.4842 22.4623C58.4477 22.5125 58.4264 22.5723 58.4204 22.6417L58.3365 23.6L57.9523 23.5664ZM59.789 23.7592C59.6256 23.7449 59.4874 23.6986 59.3745 23.6203C59.2623 23.5413 59.1799 23.4364 59.1272 23.3056C59.0745 23.1741 59.0557 23.0231 59.0706 22.8526C59.0852 22.6849 59.13 22.5405 59.2047 22.4194C59.2802 22.2977 59.3788 22.2065 59.5003 22.1458C59.6219 22.0845 59.7605 22.0606 59.9161 22.0742C60.0166 22.083 60.11 22.1076 60.1963 22.1479C60.2833 22.1876 60.3583 22.2441 60.421 22.3173C60.4845 22.3906 60.5315 22.481 60.562 22.5884C60.5926 22.6952 60.6016 22.82 60.5891 22.963L60.5788 23.0808L59.2426 22.9639L59.2653 22.7049L60.2332 22.7896C60.2389 22.7159 60.2287 22.6491 60.2026 22.5891C60.1765 22.5283 60.137 22.4789 60.084 22.4407C60.0318 22.4027 59.9688 22.3804 59.8952 22.374C59.8167 22.3671 59.7461 22.3802 59.6833 22.4132C59.6206 22.4455 59.5699 22.4909 59.5313 22.5496C59.4934 22.6076 59.4709 22.673 59.4638 22.7458L59.444 22.9719C59.4358 23.0667 59.446 23.1495 59.4747 23.2205C59.5035 23.2908 59.5474 23.3466 59.6065 23.3882C59.6657 23.429 59.737 23.4531 59.8205 23.4604C59.8764 23.4653 59.9277 23.4619 59.9743 23.4503C60.021 23.438 60.0624 23.4177 60.0983 23.3895C60.1343 23.3613 60.1628 23.3249 60.1838 23.2804L60.539 23.3521C60.5081 23.4449 60.4577 23.524 60.3878 23.5891C60.3187 23.6537 60.2333 23.7011 60.1315 23.7314C60.0298 23.761 59.9157 23.7703 59.789 23.7592ZM62.2913 23.9781C62.1321 23.9642 61.9972 23.9171 61.8866 23.8368C61.776 23.7566 61.694 23.6506 61.6406 23.5191C61.5879 23.3876 61.569 23.2376 61.5837 23.0692C61.5984 22.9008 61.6432 22.7561 61.7179 22.635C61.7934 22.514 61.8926 22.4236 62.0154 22.3638C62.1383 22.3039 62.2793 22.281 62.4385 22.2949C62.5977 22.3088 62.7326 22.3559 62.8432 22.4362C62.9539 22.5164 63.0355 22.6227 63.0881 22.7549C63.1414 22.8872 63.1607 23.0375 63.1459 23.2059C63.1312 23.3743 63.0861 23.5186 63.0107 23.6389C62.936 23.7593 62.8372 23.8494 62.7144 23.9092C62.5915 23.9691 62.4505 23.992 62.2913 23.9781ZM62.3203 23.6705C62.4066 23.6781 62.4809 23.6607 62.5431 23.6183C62.6053 23.5753 62.6541 23.5147 62.6894 23.4365C62.7255 23.3584 62.7479 23.2698 62.7565 23.1708C62.7653 23.071 62.7586 22.9795 62.7367 22.8963C62.7155 22.8125 62.678 22.744 62.6242 22.6908C62.5704 22.6376 62.5003 22.6072 62.414 22.5997C62.3256 22.5919 62.2499 22.6096 62.187 22.6525C62.1247 22.6956 62.0755 22.7565 62.0394 22.8353C62.0041 22.9135 61.982 23.0025 61.9733 23.1022C61.9646 23.2013 61.9709 23.2924 61.9922 23.3755C62.0141 23.4587 62.052 23.5269 62.1058 23.5801C62.1604 23.6326 62.2319 23.6628 62.3203 23.6705ZM64.3696 22.4852L64.3436 22.7824L63.3799 22.6981L63.4059 22.4009L64.3696 22.4852ZM63.5042 24.0521L63.6603 22.2681C63.6699 22.1584 63.7005 22.0692 63.7522 22.0002C63.8045 21.9314 63.8708 21.8823 63.9511 21.853C64.0314 21.8236 64.1186 21.8131 64.2127 21.8213C64.2792 21.8271 64.3378 21.8376 64.3885 21.8527C64.4392 21.8679 64.4766 21.8808 64.5006 21.8914L64.3982 22.1819C64.3824 22.1755 64.3623 22.1688 64.338 22.1616C64.3137 22.1538 64.2864 22.1486 64.2559 22.1459C64.1845 22.1397 64.1324 22.1526 64.0996 22.1846C64.0676 22.2161 64.0489 22.2636 64.0433 22.3273L63.8894 24.0858L63.5042 24.0521ZM65.2861 24.208L65.4763 22.0345L66.8899 22.1582L66.861 22.4883L65.8411 22.399L65.7895 22.9891L66.7362 23.0719L66.7073 23.402L65.7606 23.3192L65.7087 23.9124L66.7371 24.0024L66.7082 24.3325L65.2861 24.208ZM67.0844 24.3654L67.2271 22.7352L67.5943 22.7674L67.57 23.0444L67.5891 23.046C67.6313 22.9556 67.6939 22.8876 67.777 22.8422C67.8602 22.796 67.9563 22.7776 68.0652 22.7872C68.1756 22.7968 68.2663 22.8319 68.3373 22.8922C68.409 22.952 68.4565 23.0292 68.4796 23.1239L68.4965 23.1254C68.5405 23.038 68.6077 22.9712 68.698 22.9249C68.7891 22.878 68.8937 22.8597 69.0119 22.87C69.1619 22.8831 69.2801 22.9412 69.3666 23.0443C69.4532 23.1474 69.4885 23.2899 69.4726 23.4717L69.3768 24.5659L68.9916 24.5322L69.0821 23.4975C69.091 23.3963 69.0705 23.32 69.0209 23.2686C68.9712 23.2165 68.9075 23.187 68.8297 23.1802C68.737 23.1721 68.6619 23.1948 68.6045 23.2482C68.5478 23.301 68.5155 23.3734 68.5074 23.4654L68.4185 24.4821L68.0417 24.4491L68.1337 23.3984C68.141 23.3142 68.1214 23.2448 68.0749 23.1901C68.029 23.1355 67.9654 23.1046 67.8841 23.0975C67.8289 23.0927 67.7774 23.1024 67.7297 23.1268C67.682 23.1504 67.6424 23.1865 67.6111 23.2351C67.5798 23.283 67.5612 23.3405 67.5554 23.4077L67.4686 24.399L67.0844 24.3654ZM70.2328 24.674C70.1295 24.6649 70.0381 24.6384 69.9585 24.5944C69.8797 24.5497 69.8194 24.4888 69.7777 24.4117C69.7367 24.3347 69.7208 24.2428 69.7302 24.1359C69.7382 24.0439 69.7619 23.9694 69.8011 23.9122C69.8403 23.855 69.8909 23.811 69.9528 23.78C70.0146 23.7491 70.0832 23.7276 70.1584 23.7157C70.2343 23.7031 70.3123 23.696 70.3923 23.6944C70.4887 23.6929 70.5669 23.6908 70.627 23.6882C70.6872 23.6849 70.7315 23.676 70.7598 23.6614C70.789 23.6461 70.8052 23.6201 70.8084 23.5833L70.8089 23.5769C70.8159 23.4969 70.7977 23.433 70.7541 23.3849C70.7105 23.3369 70.6442 23.309 70.555 23.3012C70.4609 23.293 70.3845 23.307 70.3257 23.3432C70.2676 23.3795 70.2266 23.4247 70.2026 23.4789L69.8483 23.3966C69.8853 23.3 69.9392 23.2213 70.0102 23.1605C70.0811 23.099 70.1651 23.0557 70.2621 23.0307C70.3592 23.005 70.4647 22.9971 70.5786 23.0071C70.6571 23.0139 70.7345 23.03 70.8107 23.0552C70.887 23.0804 70.9554 23.117 71.0161 23.1651C71.0768 23.2125 71.1235 23.274 71.1561 23.3495C71.1894 23.4252 71.2013 23.5171 71.1918 23.6254L71.0964 24.7164L70.727 24.6841L70.7466 24.4601L70.7339 24.459C70.7066 24.5022 70.67 24.5418 70.6241 24.5777C70.5789 24.613 70.5235 24.6399 70.4577 24.6583C70.3927 24.6762 70.3177 24.6814 70.2328 24.674ZM70.3573 24.4004C70.4344 24.4071 70.5026 24.3978 70.5618 24.3723C70.6212 24.3461 70.6683 24.3089 70.7031 24.2606C70.7387 24.2124 70.7592 24.1582 70.7644 24.0981L70.7812 23.906C70.7683 23.9148 70.747 23.9222 70.7173 23.9282C70.6882 23.9342 70.6557 23.9389 70.6198 23.9421C70.5839 23.9454 70.5483 23.948 70.5132 23.9499C70.4781 23.9518 70.4477 23.9534 70.4219 23.9548C70.3639 23.9575 70.3115 23.9658 70.2647 23.9795C70.2179 23.9932 70.18 24.0149 70.151 24.0444C70.1221 24.0733 70.1055 24.1124 70.1011 24.162C70.0949 24.2327 70.1161 24.2884 70.1646 24.329C70.2131 24.3696 70.2773 24.3934 70.3573 24.4004ZM71.4827 24.7502L71.6253 23.12L72.0095 23.1536L71.8669 24.7838L71.4827 24.7502ZM71.8387 22.9056C71.7779 22.9002 71.7273 22.8755 71.6869 22.8313C71.6466 22.7865 71.629 22.7354 71.634 22.6781C71.6391 22.62 71.6653 22.5728 71.7127 22.5363C71.7602 22.4991 71.8143 22.4832 71.8752 22.4885C71.9367 22.4939 71.9873 22.519 72.0269 22.5638C72.0672 22.6079 72.0848 22.659 72.0798 22.7171C72.0748 22.7744 72.0485 22.8216 72.0011 22.8588C71.9544 22.8954 71.9003 22.911 71.8387 22.9056ZM72.8363 22.6784L72.6461 24.852L72.2619 24.8183L72.4521 22.6448L72.8363 22.6784ZM73.2758 24.9306C73.2114 24.9249 73.1582 24.8975 73.1162 24.8482C73.0742 24.7989 73.0564 24.7417 73.0628 24.6767C73.0676 24.6129 73.095 24.5604 73.145 24.5192C73.1949 24.4779 73.2521 24.4601 73.3165 24.4657C73.3787 24.4712 73.4309 24.4985 73.4729 24.5479C73.5156 24.5972 73.5346 24.6538 73.5297 24.7175C73.5252 24.7606 73.5105 24.7989 73.4855 24.8323C73.4611 24.8659 73.4304 24.8917 73.3931 24.9098C73.3567 24.9273 73.3176 24.9342 73.2758 24.9306ZM74.5992 25.0228L74.7893 22.8493L76.2029 22.973L76.1741 23.303L75.1542 23.2138L75.1025 23.8039L76.0492 23.8867L76.0203 24.2168L75.0737 24.1339L75.0218 24.7272L76.0502 24.8172L76.0213 25.1472L74.5992 25.0228ZM76.3975 25.1802L76.5401 23.55L76.9073 23.5821L76.8831 23.8591L76.9022 23.8608C76.9443 23.7704 77.007 23.7024 77.0901 23.6569C77.1732 23.6108 77.2693 23.5924 77.3783 23.602C77.4886 23.6116 77.5793 23.6466 77.6503 23.707C77.7221 23.7668 77.7695 23.844 77.7926 23.9387L77.8096 23.9402C77.8536 23.8528 77.9208 23.7859 78.0111 23.7397C78.1022 23.6927 78.2068 23.6744 78.3249 23.6848C78.4749 23.6979 78.5932 23.756 78.6797 23.8591C78.7662 23.9622 78.8015 24.1047 78.7856 24.2865L78.6899 25.3807L78.3046 25.347L78.3952 24.3123C78.404 24.2111 78.3836 24.1348 78.3339 24.0834C78.2843 24.0313 78.2206 24.0018 78.1427 23.995C78.0501 23.9869 77.975 24.0096 77.9176 24.063C77.8609 24.1158 77.8285 24.1882 77.8205 24.2802L77.7315 25.2969L77.3548 25.2639L77.4467 24.2132C77.4541 24.129 77.4345 24.0596 77.3879 24.0049C77.3421 23.9503 77.2785 23.9194 77.1971 23.9123C77.1419 23.9075 77.0905 23.9172 77.0427 23.9415C76.995 23.9652 76.9555 24.0013 76.9242 24.0499C76.8929 24.0978 76.8743 24.1553 76.8684 24.2225L76.7817 25.2138L76.3975 25.1802ZM79.5459 25.4888C79.4426 25.4797 79.3511 25.4532 79.2716 25.4091C79.1928 25.3645 79.1325 25.3036 79.0908 25.2265C79.0497 25.1495 79.0339 25.0575 79.0432 24.9507C79.0513 24.8587 79.0749 24.7842 79.1142 24.727C79.1534 24.6698 79.2039 24.6258 79.2658 24.5948C79.3277 24.5639 79.3962 24.5424 79.4714 24.5305C79.5474 24.5179 79.6254 24.5108 79.7053 24.5092C79.8017 24.5077 79.88 24.5056 79.9401 24.503C80.0003 24.4997 80.0445 24.4908 80.0729 24.4761C80.102 24.4609 80.1182 24.4348 80.1214 24.398L80.122 24.3917C80.129 24.3117 80.1107 24.2477 80.0671 24.1997C80.0236 24.1517 79.9572 24.1238 79.8681 24.116C79.774 24.1078 79.6975 24.1218 79.6388 24.158C79.5807 24.1942 79.5397 24.2395 79.5157 24.2937L79.1614 24.2114C79.1984 24.1148 79.2523 24.0361 79.3232 23.9753C79.3942 23.9138 79.4782 23.8705 79.5752 23.8455C79.6723 23.8198 79.7778 23.8119 79.8917 23.8219C79.9702 23.8287 80.0476 23.8448 80.1238 23.87C80.2 23.8952 80.2685 23.9318 80.3291 23.9799C80.3899 24.0273 80.4365 24.0888 80.4691 24.1643C80.5024 24.24 80.5144 24.3319 80.5049 24.4401L80.4094 25.5312L80.0401 25.4988L80.0597 25.2749L80.047 25.2738C80.0197 25.317 79.983 25.3566 79.9371 25.3925C79.892 25.4278 79.8365 25.4546 79.7707 25.4731C79.7057 25.491 79.6308 25.4962 79.5459 25.4888ZM79.6703 25.2152C79.7474 25.2219 79.8156 25.2126 79.8749 25.1871C79.9342 25.1609 79.9813 25.1237 80.0162 25.0754C80.0518 25.0272 80.0722 24.973 80.0775 24.9129L80.0943 24.7208C80.0814 24.7296 80.0601 24.737 80.0303 24.743C80.0013 24.749 79.9688 24.7536 79.9328 24.7569C79.8969 24.7602 79.8614 24.7628 79.8263 24.7647C79.7912 24.7666 79.7607 24.7682 79.735 24.7695C79.677 24.7723 79.6246 24.7806 79.5777 24.7943C79.5309 24.808 79.493 24.8296 79.464 24.8592C79.4351 24.888 79.4185 24.9272 79.4142 24.9767C79.408 25.0475 79.4292 25.1032 79.4776 25.1438C79.5261 25.1844 79.5904 25.2082 79.6703 25.2152ZM80.7957 25.565L80.9384 23.9348L81.3225 23.9684L81.1799 25.5986L80.7957 25.565ZM81.1518 23.7204C81.0909 23.715 81.0403 23.6903 81 23.6461C80.9597 23.6012 80.9421 23.5502 80.9471 23.4928C80.9522 23.4348 80.9784 23.3876 81.0258 23.3511C81.0732 23.3139 81.1274 23.2979 81.1882 23.3033C81.2498 23.3087 81.3004 23.3338 81.3399 23.3786C81.3803 23.4227 81.3979 23.4738 81.3928 23.5318C81.3878 23.5891 81.3616 23.6364 81.3141 23.6736C81.2674 23.7102 81.2133 23.7257 81.1518 23.7204ZM82.1493 23.4932L81.9592 25.6667L81.575 25.6331L81.7652 23.4596L82.1493 23.4932ZM83.5633 24.8446L83.4797 25.7998L83.0956 25.7662L83.2857 23.5926L83.6614 23.6255L83.5896 24.4459L83.6087 24.4476C83.655 24.3589 83.7204 24.2916 83.805 24.2455C83.8904 24.1988 83.9953 24.1809 84.1198 24.1918C84.233 24.2017 84.3297 24.234 84.4097 24.2888C84.4898 24.3436 84.5488 24.4186 84.5868 24.5139C84.6255 24.6092 84.6391 24.7227 84.6276 24.8543L84.5368 25.8922L84.1526 25.8586L84.2382 24.8801C84.2478 24.7705 84.227 24.6827 84.1757 24.6169C84.1252 24.5505 84.0493 24.5128 83.9481 24.504C83.8802 24.498 83.8181 24.5076 83.7617 24.5326C83.7061 24.557 83.6607 24.5954 83.6254 24.6479C83.5909 24.7005 83.5702 24.7661 83.5633 24.8446ZM85.3946 26.0005C85.2913 25.9914 85.1999 25.9649 85.1203 25.9208C85.0415 25.8762 84.9813 25.8153 84.9395 25.7382C84.8985 25.6612 84.8827 25.5692 84.892 25.4624C84.9 25.3704 84.9237 25.2959 84.9629 25.2387C85.0021 25.1815 85.0527 25.1375 85.1146 25.1065C85.1764 25.0756 85.245 25.0541 85.3202 25.0422C85.3961 25.0296 85.4741 25.0225 85.5541 25.0209C85.6505 25.0194 85.7287 25.0173 85.7888 25.0147C85.849 25.0114 85.8933 25.0025 85.9217 24.9878C85.9508 24.9726 85.967 24.9465 85.9702 24.9097L85.9708 24.9034C85.9777 24.8234 85.9595 24.7594 85.9159 24.7114C85.8723 24.6634 85.806 24.6355 85.7168 24.6277C85.6227 24.6195 85.5463 24.6335 85.4875 24.6697C85.4294 24.7059 85.3884 24.7512 85.3644 24.8054L85.0102 24.7231C85.0471 24.6265 85.1011 24.5478 85.172 24.487C85.2429 24.4255 85.3269 24.3822 85.4239 24.3572C85.521 24.3315 85.6265 24.3236 85.7404 24.3336C85.819 24.3404 85.8963 24.3565 85.9726 24.3817C86.0488 24.4069 86.1172 24.4435 86.1779 24.4916C86.2386 24.539 86.2853 24.6004 86.3179 24.676C86.3512 24.7517 86.3631 24.8436 86.3536 24.9518L86.2582 26.0429L85.8889 26.0105L85.9085 25.7866L85.8957 25.7855C85.8684 25.8287 85.8318 25.8683 85.7859 25.9042C85.7407 25.9395 85.6853 25.9663 85.6195 25.9848C85.5545 26.0027 85.4795 26.0079 85.3946 26.0005ZM85.5191 25.7269C85.5962 25.7336 85.6644 25.7243 85.7236 25.6988C85.783 25.6726 85.8301 25.6354 85.8649 25.5871C85.9005 25.5389 85.921 25.4847 85.9262 25.4246L85.943 25.2325C85.9301 25.2413 85.9088 25.2487 85.8791 25.2547C85.85 25.2607 85.8175 25.2653 85.7816 25.2686C85.7457 25.2719 85.7101 25.2745 85.675 25.2764C85.6399 25.2783 85.6095 25.2799 85.5837 25.2812C85.5257 25.284 85.4733 25.2923 85.4265 25.306C85.3797 25.3197 85.3418 25.3413 85.3128 25.3709C85.2839 25.3997 85.2673 25.4389 85.2629 25.4884C85.2568 25.5592 85.2779 25.6149 85.3264 25.6555C85.3749 25.6961 85.4391 25.7199 85.5191 25.7269ZM88.0378 24.9901L87.6843 24.9977C87.6774 24.9614 87.663 24.9267 87.641 24.8934C87.6196 24.8601 87.5893 24.8322 87.5499 24.8095C87.5106 24.7868 87.4612 24.7728 87.4017 24.7676C87.3218 24.7606 87.2531 24.7721 87.1955 24.802C87.1387 24.832 87.1083 24.8746 87.1042 24.9298C87.0993 24.9772 87.1133 25.0172 87.146 25.05C87.1795 25.0829 87.2368 25.1125 87.3179 25.1389L87.5908 25.2226C87.7421 25.2694 87.8521 25.3321 87.9208 25.4109C87.9902 25.4896 88.0201 25.5874 88.0106 25.7042C88.0009 25.8068 87.963 25.8947 87.8967 25.968C87.8311 26.0407 87.7441 26.0944 87.6355 26.1291C87.527 26.1638 87.4048 26.1752 87.2689 26.1634C87.0694 26.1459 86.9125 26.0901 86.7981 25.996C86.6837 25.9011 86.6215 25.7777 86.6112 25.6257L86.989 25.6223C86.9996 25.6974 87.0308 25.7561 87.0827 25.7984C87.1346 25.8408 87.2048 25.8658 87.2932 25.8735C87.3845 25.8815 87.4594 25.8692 87.5178 25.8365C87.577 25.8039 87.609 25.76 87.6138 25.7048C87.6179 25.6581 87.6032 25.618 87.5698 25.5844C87.5371 25.5509 87.484 25.5227 87.4104 25.4999L87.1374 25.4172C86.9839 25.3709 86.873 25.306 86.8048 25.2223C86.7366 25.1379 86.7081 25.0363 86.7192 24.9175C86.7273 24.817 86.7621 24.7324 86.8237 24.6636C86.8861 24.5942 86.9686 24.5437 87.0712 24.512C87.1745 24.4797 87.2913 24.4692 87.4215 24.4806C87.6125 24.4973 87.7593 24.5512 87.8619 24.6421C87.9651 24.7332 88.0238 24.8492 88.0378 24.9901ZM89.043 26.2865L89.2332 24.113L89.6173 24.1466L89.5462 24.9595L89.5621 24.9609C89.5854 24.923 89.6171 24.8834 89.657 24.842C89.6971 24.7998 89.7493 24.7656 89.8136 24.7391C89.878 24.7119 89.958 24.7025 90.0535 24.7109C90.1794 24.7219 90.2902 24.764 90.3857 24.8373C90.482 24.9099 90.5544 25.0114 90.6029 25.1418C90.6521 25.2716 90.6688 25.4271 90.653 25.6082C90.6373 25.7872 90.5947 25.9367 90.525 26.0568C90.4553 26.1769 90.367 26.2654 90.2601 26.3224C90.1531 26.3793 90.0356 26.4022 89.9076 26.391C89.8142 26.3828 89.7381 26.3605 89.6792 26.324C89.6204 26.2875 89.5742 26.2456 89.5405 26.1985C89.5076 26.1507 89.4826 26.1061 89.4656 26.0647L89.4433 26.0627L89.4208 26.3195L89.043 26.2865ZM89.4911 25.5044C89.4818 25.6098 89.4886 25.7034 89.5114 25.7853C89.5349 25.8672 89.573 25.9329 89.6257 25.9824C89.6792 26.0313 89.7466 26.0593 89.828 26.0664C89.9129 26.0739 89.9859 26.0574 90.0472 26.0172C90.1086 25.9762 90.1572 25.9174 90.1931 25.8406C90.2298 25.7633 90.2527 25.6737 90.2616 25.5718C90.2704 25.4706 90.2638 25.3795 90.2416 25.2984C90.2195 25.2173 90.1817 25.152 90.1283 25.1024C90.0749 25.0528 90.0054 25.0243 89.9198 25.0168C89.8377 25.0096 89.7661 25.0251 89.705 25.0633C89.644 25.1014 89.5952 25.1581 89.5586 25.2333C89.5228 25.3086 89.5003 25.399 89.4911 25.5044ZM91.6274 26.5447C91.4639 26.5304 91.3258 26.4841 91.2128 26.4057C91.1007 26.3268 91.0182 26.2219 90.9655 26.0911C90.9129 25.9596 90.894 25.8086 90.9089 25.6381C90.9236 25.4704 90.9683 25.326 91.0431 25.2049C91.1186 25.0832 91.2171 24.992 91.3386 24.9313C91.4602 24.87 91.5988 24.8461 91.7545 24.8597C91.8549 24.8685 91.9483 24.8931 92.0346 24.9334C92.1217 24.9731 92.1966 25.0296 92.2594 25.1028C92.3228 25.1761 92.3698 25.2665 92.4003 25.3739C92.4309 25.4807 92.4399 25.6055 92.4274 25.7485L92.4171 25.8663L91.081 25.7494L91.1036 25.4904L92.0715 25.5751C92.0773 25.5014 92.0671 25.4346 92.0409 25.3746C92.0149 25.3138 91.9754 25.2644 91.9224 25.2262C91.8701 25.1882 91.8072 25.1659 91.7336 25.1595C91.6551 25.1526 91.5844 25.1657 91.5216 25.1987C91.4589 25.231 91.4082 25.2764 91.3696 25.3351C91.3317 25.3931 91.3093 25.4585 91.3022 25.5313L91.2824 25.7574C91.2741 25.8522 91.2843 25.935 91.313 26.006C91.3418 26.0762 91.3858 26.1321 91.4449 26.1737C91.504 26.2145 91.5754 26.2386 91.6589 26.2459C91.7148 26.2507 91.766 26.2474 91.8127 26.2358C91.8594 26.2235 91.9007 26.2032 91.9367 26.175C91.9727 26.1468 92.0012 26.1104 92.0222 26.0659L92.3774 26.1376C92.3464 26.2304 92.296 26.3094 92.2261 26.3746C92.157 26.4392 92.0716 26.4866 91.9699 26.5169C91.8682 26.5465 91.754 26.5558 91.6274 26.5447ZM93.3989 26.6997C93.2355 26.6854 93.0973 26.6391 92.9844 26.5607C92.8722 26.4818 92.7898 26.3769 92.7371 26.2461C92.6844 26.1146 92.6655 25.9636 92.6805 25.793C92.6951 25.6254 92.7398 25.481 92.8146 25.3599C92.8901 25.2382 92.9887 25.147 93.1102 25.0863C93.2317 25.025 93.3704 25.0011 93.526 25.0147C93.6265 25.0235 93.7199 25.0481 93.8062 25.0884C93.8932 25.1281 93.9682 25.1846 94.0309 25.2578C94.0944 25.3311 94.1414 25.4214 94.1719 25.5289C94.2025 25.6357 94.2115 25.7605 94.199 25.9034L94.1887 26.0212L92.8525 25.9043L92.8752 25.6454L93.8431 25.7301C93.8488 25.6564 93.8386 25.5896 93.8125 25.5296C93.7864 25.4688 93.7469 25.4194 93.6939 25.3812C93.6417 25.3431 93.5787 25.3209 93.5051 25.3145C93.4266 25.3076 93.356 25.3206 93.2932 25.3537C93.2305 25.386 93.1798 25.4314 93.1412 25.4901C93.1033 25.5481 93.0808 25.6135 93.0737 25.6863L93.0539 25.9123C93.0457 26.0072 93.0559 26.09 93.0846 26.161C93.1134 26.2312 93.1573 26.2871 93.2164 26.3287C93.2756 26.3695 93.3469 26.3935 93.4304 26.4008C93.4863 26.4057 93.5376 26.4024 93.5842 26.3908C93.6309 26.3785 93.6723 26.3582 93.7082 26.33C93.7442 26.3018 93.7727 26.2654 93.7937 26.2209L94.1489 26.2926C94.118 26.3854 94.0676 26.4644 93.9977 26.5296C93.9286 26.5942 93.8432 26.6416 93.7414 26.6719C93.6397 26.7015 93.5256 26.7107 93.3989 26.6997ZM94.9193 25.8381L94.8358 26.7933L94.4516 26.7597L94.5942 25.1295L94.9614 25.1617L94.9372 25.4387L94.9563 25.4403C95.0018 25.3523 95.0679 25.2851 95.1547 25.2385C95.2422 25.1919 95.3467 25.174 95.4684 25.1846C95.5809 25.1945 95.6768 25.2271 95.7561 25.2825C95.8361 25.338 95.8951 25.4134 95.9331 25.5087C95.9718 25.604 95.9851 25.7168 95.973 25.8469L95.8822 26.8848L95.498 26.8512L95.5836 25.8727C95.5932 25.7638 95.5723 25.676 95.5211 25.6095C95.4706 25.5431 95.3958 25.5055 95.2968 25.4969C95.2295 25.491 95.1685 25.5006 95.1135 25.5257C95.0593 25.5502 95.0149 25.5888 94.9804 25.6414C94.9466 25.694 94.9262 25.7596 94.9193 25.8381ZM97.031 26.9854L97.2212 24.8118L97.6054 24.8455L97.5343 25.6584L97.5502 25.6598C97.5735 25.6219 97.6051 25.5822 97.6451 25.5408C97.6851 25.4987 97.7373 25.4644 97.8017 25.438C97.8661 25.4108 97.946 25.4014 98.0415 25.4098C98.1675 25.4208 98.2782 25.4629 98.3738 25.5361C98.4701 25.6087 98.5425 25.7102 98.5909 25.8407C98.6402 25.9705 98.6569 26.1259 98.641 26.307C98.6254 26.486 98.5827 26.6356 98.513 26.7557C98.4433 26.8758 98.355 26.9643 98.2481 27.0213C98.1412 27.0782 98.0237 27.1011 97.8956 27.0899C97.8022 27.0817 97.7261 27.0594 97.6673 27.0228C97.6084 26.9863 97.5622 26.9445 97.5285 26.8973C97.4956 26.8495 97.4707 26.8049 97.4536 26.7635L97.4313 26.7616L97.4089 27.0184L97.031 26.9854ZM97.4791 26.2032C97.4699 26.3087 97.4767 26.4023 97.4995 26.4841C97.5229 26.566 97.561 26.6318 97.6137 26.6813C97.6672 26.7302 97.7346 26.7582 97.816 26.7653C97.9009 26.7727 97.974 26.7563 98.0353 26.716C98.0966 26.6751 98.1452 26.6162 98.1812 26.5395C98.2179 26.4622 98.2407 26.3725 98.2496 26.2707C98.2585 26.1695 98.2518 26.0784 98.2297 25.9973C98.2075 25.9162 98.1698 25.8509 98.1164 25.8013C98.0629 25.7517 97.9934 25.7232 97.9078 25.7157C97.8258 25.7085 97.7542 25.724 97.6931 25.7621C97.632 25.8003 97.5832 25.857 97.5467 25.9322C97.5109 26.0075 97.4883 26.0978 97.4791 26.2032ZM98.8965 27.1486L99.0391 25.5184L99.4117 25.551L99.3879 25.8227L99.4049 25.8242C99.4428 25.7327 99.5001 25.6646 99.5767 25.62C99.6541 25.5747 99.7395 25.5562 99.8329 25.5643C99.8541 25.5662 99.8777 25.5693 99.9037 25.5737C99.9305 25.5775 99.9526 25.5819 99.9699 25.587L99.939 25.9404C99.9232 25.9334 99.8979 25.9261 99.8629 25.9188C99.8286 25.9108 99.7952 25.9054 99.7627 25.9026C99.6926 25.8964 99.6283 25.9061 99.5698 25.9317C99.512 25.9565 99.4649 25.9941 99.4284 26.0444C99.3919 26.0947 99.3706 26.1545 99.3646 26.2238L99.2807 27.1822L98.8965 27.1486ZM100.723 27.3404C100.563 27.3265 100.429 27.2794 100.318 27.1991C100.207 27.1189 100.125 27.013 100.072 26.8814C100.019 26.7499 100 26.5999 100.015 26.4315C100.03 26.2631 100.075 26.1184 100.149 25.9973C100.225 25.8763 100.324 25.7859 100.447 25.7261C100.57 25.6662 100.711 25.6433 100.87 25.6572C101.029 25.6711 101.164 25.7182 101.275 25.7985C101.385 25.8787 101.467 25.985 101.519 26.1172C101.573 26.2495 101.592 26.3998 101.577 26.5682C101.563 26.7366 101.517 26.8809 101.442 27.0013C101.367 27.1216 101.269 27.2117 101.146 27.2716C101.023 27.3314 100.882 27.3543 100.723 27.3404ZM100.752 27.0328C100.838 27.0404 100.912 27.023 100.974 26.9807C101.037 26.9376 101.085 26.877 101.121 26.7988C101.157 26.7207 101.179 26.6321 101.188 26.5331C101.197 26.4333 101.19 26.3418 101.168 26.2586C101.147 26.1748 101.109 26.1063 101.056 26.0531C101.002 25.9999 100.932 25.9695 100.845 25.962C100.757 25.9542 100.681 25.9719 100.618 26.0148C100.556 26.0579 100.507 26.1188 100.471 26.1976C100.435 26.2758 100.413 26.3648 100.405 26.4645C100.396 26.5636 100.402 26.6547 100.423 26.7378C100.445 26.821 100.483 26.8892 100.537 26.9424C100.592 26.9949 100.663 27.0251 100.752 27.0328ZM102.228 26.9245L102.267 26.4607L102.329 26.466L102.972 25.8625L103.421 25.9018L102.63 26.641L102.55 26.6341L102.228 26.9245ZM101.833 27.4054L102.023 25.2319L102.407 25.2655L102.217 27.439L101.833 27.4054ZM102.856 27.4949L102.39 26.7067L102.673 26.4587L103.315 27.5351L102.856 27.4949ZM104.186 27.6434C104.022 27.6291 103.884 27.5828 103.771 27.5045C103.659 27.4255 103.577 27.3206 103.524 27.1898C103.471 27.0583 103.452 26.9073 103.467 26.7368C103.482 26.5691 103.527 26.4247 103.602 26.3036C103.677 26.1819 103.776 26.0907 103.897 26.0301C104.019 25.9687 104.157 25.9448 104.313 25.9584C104.413 25.9672 104.507 25.9918 104.593 26.0321C104.68 26.0718 104.755 26.1283 104.818 26.2015C104.881 26.2748 104.928 26.3652 104.959 26.4726C104.989 26.5794 104.998 26.7043 104.986 26.8472L104.976 26.965L103.639 26.8481L103.662 26.5891L104.63 26.6738C104.636 26.6002 104.626 26.5333 104.599 26.4733C104.573 26.4125 104.534 26.3631 104.481 26.325C104.429 26.2869 104.366 26.2646 104.292 26.2582C104.214 26.2513 104.143 26.2644 104.08 26.2974C104.017 26.3297 103.967 26.3752 103.928 26.4338C103.89 26.4918 103.868 26.5572 103.861 26.63L103.841 26.8561C103.833 26.9509 103.843 27.0338 103.872 27.1047C103.9 27.175 103.944 27.2309 104.003 27.2724C104.063 27.3132 104.134 27.3373 104.217 27.3446C104.273 27.3495 104.324 27.3461 104.371 27.3345C104.418 27.3222 104.459 27.3019 104.495 27.2737C104.531 27.2455 104.56 27.2091 104.581 27.1646L104.936 27.2363C104.905 27.3292 104.854 27.4082 104.785 27.4734C104.716 27.5379 104.63 27.5853 104.528 27.6156C104.427 27.6452 104.312 27.6545 104.186 27.6434ZM105.706 26.7819L105.623 27.737L105.239 27.7034L105.381 26.0733L105.748 26.1054L105.724 26.3824L105.743 26.3841C105.789 26.2961 105.855 26.2288 105.942 26.1822C106.029 26.1357 106.134 26.1177 106.255 26.1284C106.368 26.1382 106.464 26.1708 106.543 26.2263C106.623 26.2817 106.682 26.3571 106.72 26.4524C106.759 26.5478 106.772 26.6605 106.76 26.7906L106.669 27.8286L106.285 27.795L106.371 26.8165C106.38 26.7075 106.359 26.6198 106.308 26.5533C106.258 26.4868 106.183 26.4493 106.084 26.4406C106.016 26.4347 105.955 26.4443 105.9 26.4695C105.846 26.494 105.802 26.5325 105.767 26.5851C105.733 26.6377 105.713 26.7033 105.706 26.7819ZM109.944 27.0435L109.916 27.3598L106.928 27.0983L106.955 26.7821L109.944 27.0435ZM28.4791 26.039C28.3164 26.0248 28.1797 25.9768 28.0693 25.8952C27.9595 25.8135 27.8786 25.707 27.8267 25.5756C27.7755 25.4435 27.7571 25.295 27.7715 25.1301C27.786 24.9646 27.8306 24.8213 27.9054 24.7002C27.9802 24.5784 28.0787 24.4872 28.2009 24.4266C28.3239 24.3654 28.465 24.3417 28.6242 24.3556C28.7565 24.3672 28.8715 24.4019 28.9691 24.4596C29.0675 24.5167 29.1432 24.5921 29.1963 24.6859C29.2495 24.7789 29.2752 24.8846 29.2734 25.0027L28.9062 24.9706C28.8982 24.8908 28.8686 24.8222 28.8173 24.765C28.7667 24.7071 28.6951 24.6741 28.6024 24.666C28.5239 24.6591 28.453 24.6743 28.3899 24.7116C28.3268 24.7481 28.2752 24.8042 28.2351 24.8798C28.1957 24.9555 28.1712 25.0482 28.1616 25.1578C28.1518 25.2689 28.1598 25.3659 28.1853 25.4487C28.2109 25.5308 28.2512 25.596 28.3062 25.6442C28.3619 25.6919 28.4297 25.7192 28.5097 25.7262C28.5663 25.7312 28.6178 25.725 28.6642 25.7077C28.7114 25.6897 28.752 25.6615 28.786 25.6231C28.82 25.5848 28.8453 25.5367 28.8617 25.479L29.2289 25.5111C29.2097 25.6256 29.1668 25.7249 29.1002 25.8089C29.0338 25.8922 28.9477 25.9545 28.8422 25.9959C28.7367 26.0366 28.6156 26.051 28.4791 26.039ZM30.07 23.956L29.8799 26.1295L29.4957 26.0959L29.6858 23.9224L30.07 23.956ZM31.3739 25.5694L31.4565 24.6248L31.8407 24.6584L31.6981 26.2886L31.3256 26.256L31.3509 25.9662L31.334 25.9648C31.2892 26.0528 31.2222 26.1222 31.1329 26.1728C31.0443 26.2235 30.9388 26.2435 30.8164 26.2328C30.7096 26.2235 30.6172 26.1915 30.5393 26.1369C30.4621 26.0817 30.4046 26.0064 30.3666 25.9111C30.3286 25.8151 30.3153 25.702 30.3267 25.5719L30.4175 24.5339L30.8017 24.5675L30.7161 25.546C30.7071 25.6493 30.7282 25.7339 30.7795 25.7997C30.8308 25.8655 30.9024 25.9024 30.9944 25.9104C31.051 25.9154 31.107 25.9064 31.1625 25.8834C31.218 25.8605 31.2651 25.8233 31.3038 25.7718C31.3433 25.7196 31.3667 25.6521 31.3739 25.5694ZM33.0498 24.7642L33.0238 25.0614L32.0867 24.9794L32.1127 24.6822L33.0498 24.7642ZM32.3782 24.3119L32.7624 24.3455L32.6285 25.8759C32.624 25.9275 32.6283 25.9678 32.6414 25.9968C32.6554 26.0251 32.675 26.0454 32.7003 26.0576C32.7256 26.0698 32.7542 26.0772 32.786 26.08C32.8101 26.0821 32.8322 26.0823 32.8523 26.0805C32.8731 26.0787 32.889 26.0769 32.8998 26.075L32.9383 26.381C32.9171 26.3863 32.8871 26.3915 32.8482 26.3967C32.8099 26.4019 32.7635 26.4028 32.7089 26.3995C32.6124 26.3939 32.527 26.3718 32.4527 26.3332C32.3784 26.2939 32.3216 26.2383 32.2823 26.1664C32.2436 26.0946 32.2291 26.0078 32.2387 25.906L32.3782 24.3119ZM34.1851 24.8635L34.1591 25.1607L33.222 25.0787L33.248 24.7815L34.1851 24.8635ZM33.5135 24.4112L33.8977 24.4448L33.7638 25.9752C33.7593 26.0269 33.7636 26.0672 33.7768 26.0961C33.7907 26.1244 33.8103 26.1447 33.8356 26.1569C33.8609 26.1691 33.8895 26.1766 33.9213 26.1794C33.9454 26.1815 33.9675 26.1816 33.9876 26.1798C34.0084 26.1781 34.0243 26.1762 34.0351 26.1743L34.0736 26.4803C34.0525 26.4856 34.0224 26.4908 33.9835 26.496C33.9452 26.5012 33.8988 26.5021 33.8442 26.4988C33.7477 26.4932 33.6623 26.4711 33.588 26.4325C33.5137 26.3932 33.4569 26.3376 33.4176 26.2658C33.3789 26.1939 33.3644 26.1071 33.3741 26.0053L33.5135 24.4112ZM35.0652 26.6152C34.9017 26.6009 34.7636 26.5546 34.6506 26.4763C34.5385 26.3973 34.456 26.2924 34.4033 26.1616C34.3507 26.0301 34.3318 25.8791 34.3467 25.7086C34.3614 25.5409 34.4061 25.3965 34.4808 25.2755C34.5564 25.1537 34.6549 25.0626 34.7764 25.0019C34.898 24.9405 35.0366 24.9166 35.1923 24.9303C35.2927 24.939 35.3861 24.9636 35.4724 25.004C35.5595 25.0437 35.6344 25.1001 35.6971 25.1733C35.7606 25.2466 35.8076 25.337 35.8381 25.4445C35.8687 25.5512 35.8777 25.6761 35.8652 25.819L35.8549 25.9368L34.5188 25.8199L34.5414 25.5609L35.5093 25.6456C35.515 25.572 35.5049 25.5051 35.4787 25.4451C35.4527 25.3844 35.4132 25.3349 35.3602 25.2968C35.3079 25.2587 35.245 25.2364 35.1714 25.23C35.0929 25.2231 35.0222 25.2362 34.9594 25.2692C34.8967 25.3015 34.846 25.347 34.8074 25.4056C34.7695 25.4636 34.747 25.529 34.74 25.6018L34.7202 25.8279C34.7119 25.9227 34.7221 26.0056 34.7508 26.0765C34.7796 26.1468 34.8236 26.2027 34.8827 26.2442C34.9418 26.285 35.0132 26.3091 35.0967 26.3164C35.1526 26.3213 35.2038 26.3179 35.2505 26.3063C35.2972 26.294 35.3385 26.2738 35.3745 26.2455C35.4105 26.2173 35.439 26.181 35.46 26.1364L35.8151 26.2082C35.7842 26.301 35.7338 26.38 35.6639 26.4452C35.5948 26.5097 35.5094 26.5571 35.4077 26.5874C35.306 26.617 35.1918 26.6263 35.0652 26.6152ZM36.1178 26.6752L36.2605 25.0451L36.633 25.0777L36.6092 25.3494L36.6262 25.3509C36.6641 25.2594 36.7214 25.1913 36.798 25.1467C36.8754 25.1014 36.9608 25.0828 37.0542 25.091C37.0754 25.0929 37.099 25.096 37.125 25.1004C37.1518 25.1042 37.1739 25.1086 37.1913 25.1137L37.1603 25.4671C37.1446 25.46 37.1192 25.4528 37.0842 25.4455C37.0499 25.4375 37.0165 25.4321 36.984 25.4292C36.9139 25.4231 36.8496 25.4328 36.7911 25.4583C36.7333 25.4832 36.6862 25.5208 36.6497 25.5711C36.6132 25.6214 36.5919 25.6812 36.5859 25.7505L36.502 26.7089L36.1178 26.6752ZM37.9545 26.868C37.7911 26.8537 37.6529 26.8074 37.54 26.7291C37.4278 26.6501 37.3454 26.5452 37.2927 26.4144C37.24 26.2829 37.2211 26.1319 37.2361 25.9614C37.2507 25.7937 37.2954 25.6493 37.3702 25.5282C37.4457 25.4065 37.5443 25.3153 37.6658 25.2547C37.7873 25.1933 37.926 25.1694 38.0816 25.183C38.1821 25.1918 38.2755 25.2164 38.3618 25.2567C38.4488 25.2964 38.5238 25.3529 38.5865 25.4261C38.65 25.4994 38.6969 25.5898 38.7275 25.6973C38.7581 25.804 38.7671 25.9289 38.7546 26.0718L38.7443 26.1896L37.4081 26.0727L37.4308 25.8137L38.3987 25.8984C38.4044 25.8248 38.3942 25.7579 38.3681 25.6979C38.342 25.6372 38.3025 25.5877 38.2495 25.5496C38.1973 25.5115 38.1343 25.4892 38.0607 25.4828C37.9822 25.4759 37.9116 25.489 37.8488 25.522C37.7861 25.5543 37.7354 25.5998 37.6967 25.6584C37.6589 25.7164 37.6364 25.7818 37.6293 25.8546L37.6095 26.0807C37.6012 26.1755 37.6115 26.2584 37.6402 26.3293C37.669 26.3996 37.7129 26.4555 37.772 26.497C37.8312 26.5378 37.9025 26.5619 37.986 26.5692C38.0419 26.5741 38.0932 26.5707 38.1398 26.5591C38.1865 26.5468 38.2279 26.5265 38.2638 26.4983C38.2998 26.4701 38.3283 26.4337 38.3493 26.3892L38.7045 26.4609C38.6736 26.5538 38.6232 26.6328 38.5533 26.698C38.4842 26.7625 38.3988 26.8099 38.297 26.8402C38.1953 26.8698 38.0812 26.8791 37.9545 26.868ZM39.6096 27.0096C39.4816 26.9984 39.3698 26.9555 39.2744 26.8808C39.179 26.8062 39.1074 26.7037 39.0596 26.5733C39.0118 26.4429 38.9958 26.2882 39.0114 26.1092C39.0273 25.9281 39.0704 25.7779 39.1407 25.6586C39.2118 25.5386 39.3011 25.4512 39.4085 25.3965C39.5161 25.341 39.6324 25.3187 39.7577 25.3297C39.8532 25.338 39.9303 25.3612 39.989 25.3991C40.0478 25.4363 40.0932 25.4792 40.1253 25.5276C40.1575 25.5753 40.1818 25.6199 40.1981 25.6612L40.214 25.6626L40.2852 24.8497L40.6704 24.8834L40.4803 27.0569L40.1024 27.0238L40.1249 26.767L40.1016 26.765C40.0783 26.8029 40.0459 26.8425 40.0045 26.8837C39.9632 26.9243 39.9104 26.9575 39.8461 26.9832C39.7818 27.009 39.703 27.0178 39.6096 27.0096ZM39.7444 26.7038C39.8257 26.7109 39.897 26.695 39.9581 26.6562C40.0194 26.6166 40.0683 26.5585 40.1049 26.4819C40.1416 26.4052 40.1645 26.3142 40.1737 26.2088C40.183 26.1034 40.1761 26.0104 40.1532 25.93C40.131 25.8496 40.0932 25.7854 40.0396 25.7372C39.9868 25.6891 39.919 25.6614 39.8362 25.6542C39.7506 25.6467 39.6772 25.6627 39.616 25.7023C39.5548 25.7418 39.5062 25.7996 39.4703 25.8756C39.4345 25.9516 39.4121 26.0402 39.4032 26.1414C39.3943 26.2433 39.4009 26.3354 39.4229 26.4179C39.4457 26.4998 39.4837 26.5662 39.537 26.6172C39.5911 26.6676 39.6602 26.6964 39.7444 26.7038ZM41.3667 26.835L41.3427 26.9506C41.325 27.0388 41.2994 27.1279 41.2658 27.2176C41.233 27.3081 41.1993 27.3911 41.1649 27.4665C41.1305 27.5419 41.1029 27.6012 41.082 27.6443L40.8231 27.6216C40.8367 27.5793 40.8553 27.5218 40.8788 27.449C40.903 27.3762 40.9273 27.2942 40.9517 27.2029C40.976 27.1117 40.9952 27.0185 41.0092 26.9235L41.0271 26.8053L41.3667 26.835ZM43.8385 26.1423L43.485 26.1498C43.4782 26.1136 43.4637 26.0788 43.4417 26.0455C43.4204 26.0123 43.39 25.9843 43.3507 25.9616C43.3113 25.9389 43.2619 25.925 43.2025 25.9198C43.1225 25.9128 43.0538 25.9243 42.9963 25.9542C42.9395 25.9841 42.909 26.0267 42.9049 26.082C42.9 26.1293 42.914 26.1694 42.9468 26.2022C42.9802 26.2351 43.0375 26.2647 43.1187 26.291L43.3915 26.3748C43.5428 26.4215 43.6528 26.4843 43.7215 26.563C43.7909 26.6418 43.8209 26.7396 43.8114 26.8564C43.8017 26.9589 43.7637 27.0469 43.6974 27.1202C43.6318 27.1929 43.5448 27.2466 43.4363 27.2813C43.3277 27.316 43.2055 27.3274 43.0697 27.3155C42.8701 27.2981 42.7132 27.2423 42.5988 27.1481C42.4845 27.0533 42.4222 26.9299 42.412 26.7778L42.7898 26.7745C42.8003 26.8496 42.8315 26.9083 42.8834 26.9506C42.9353 26.9929 43.0055 27.018 43.0939 27.0257C43.1852 27.0337 43.2601 27.0213 43.3186 26.9887C43.3777 26.9561 43.4097 26.9122 43.4146 26.857C43.4186 26.8103 43.404 26.7701 43.3706 26.7366C43.3378 26.703 43.2847 26.6749 43.2111 26.652L42.9382 26.5693C42.7847 26.5231 42.6738 26.4582 42.6055 26.3745C42.5373 26.2901 42.5088 26.1885 42.5199 26.0697C42.528 25.9692 42.5628 25.8845 42.6245 25.8158C42.6869 25.7464 42.7693 25.6958 42.8719 25.6642C42.9753 25.6319 43.092 25.6214 43.2222 25.6328C43.4133 25.6495 43.56 25.7033 43.6626 25.7943C43.7659 25.8853 43.8245 26.0013 43.8385 26.1423ZM44.6598 25.2324L44.4696 27.4059L44.0854 27.3723L44.2756 25.1988L44.6598 25.2324ZM45.573 27.5345C45.4138 27.5206 45.2789 27.4735 45.1683 27.3933C45.0576 27.313 44.9757 27.2071 44.9223 27.0755C44.8696 26.944 44.8507 26.7941 44.8654 26.6257C44.8801 26.4573 44.9249 26.3125 44.9996 26.1915C45.0751 26.0704 45.1743 25.98 45.2971 25.9202C45.42 25.8604 45.561 25.8374 45.7202 25.8513C45.8794 25.8653 46.0143 25.9124 46.1249 25.9926C46.2356 26.0729 46.3172 26.1791 46.3698 26.3113C46.4231 26.4436 46.4423 26.5939 46.4276 26.7623C46.4129 26.9307 46.3678 27.0751 46.2924 27.1954C46.2177 27.3158 46.1189 27.4059 45.9961 27.4657C45.8732 27.5255 45.7322 27.5485 45.573 27.5345ZM45.602 27.227C45.6883 27.2345 45.7626 27.2171 45.8247 27.1748C45.887 27.1318 45.9358 27.0711 45.9711 26.993C46.0072 26.9148 46.0295 26.8263 46.0382 26.7272C46.0469 26.6274 46.0403 26.536 46.0184 26.4528C45.9972 26.3689 45.9597 26.3004 45.9059 26.2472C45.8521 26.194 45.782 26.1637 45.6957 26.1561C45.6073 26.1484 45.5316 26.166 45.4686 26.209C45.4064 26.252 45.3572 26.3129 45.3211 26.3918C45.2858 26.4699 45.2637 26.5589 45.255 26.6587C45.2463 26.7577 45.2526 26.8488 45.2739 26.932C45.2958 27.0152 45.3337 27.0833 45.3875 27.1365C45.4421 27.1891 45.5136 27.2192 45.602 27.227ZM46.9727 27.6249L46.6547 25.9545L47.0463 25.9887L47.2326 27.16L47.2474 27.1613L47.6406 26.0407L48.028 26.0746L48.2212 27.2401L48.2371 27.2415L48.6191 26.1263L49.0118 26.1607L48.4075 27.7504L48.0074 27.7154L47.7982 26.5871L47.7759 26.5851L47.3738 27.66L46.9727 27.6249ZM49.3927 27.5372L49.3687 27.6527C49.351 27.741 49.3253 27.83 49.2918 27.9198C49.259 28.0103 49.2253 28.0933 49.1909 28.1687C49.1565 28.2441 49.1289 28.3033 49.108 28.3464L48.849 28.3238C48.8627 28.2815 48.8813 28.2239 48.9048 28.1511C48.929 28.0784 48.9533 27.9964 48.9776 27.9051C49.002 27.8139 49.0212 27.7207 49.0352 27.6257L49.0531 27.5075L49.3927 27.5372ZM51.1795 28.025C51.0203 28.0111 50.8854 27.964 50.7748 27.8838C50.6642 27.8035 50.5822 27.6976 50.5288 27.566C50.4761 27.4345 50.4572 27.2846 50.4719 27.1162C50.4866 26.9478 50.5314 26.803 50.6061 26.682C50.6816 26.561 50.7808 26.4705 50.9037 26.4107C51.0265 26.3509 51.1676 26.3279 51.3267 26.3418C51.4859 26.3558 51.6208 26.4029 51.7315 26.4831C51.8421 26.5634 51.9237 26.6696 51.9763 26.8018C52.0296 26.9341 52.0489 27.0845 52.0341 27.2528C52.0194 27.4212 51.9743 27.5656 51.8989 27.6859C51.8242 27.8063 51.7254 27.8964 51.6026 27.9562C51.4797 28.016 51.3387 28.039 51.1795 28.025ZM51.2085 27.7175C51.2949 27.725 51.3691 27.7076 51.4313 27.6653C51.4935 27.6223 51.5423 27.5616 51.5776 27.4835C51.6137 27.4053 51.6361 27.3168 51.6447 27.2177C51.6535 27.1179 51.6468 27.0265 51.6249 26.9433C51.6037 26.8594 51.5662 26.7909 51.5124 26.7377C51.4586 26.6845 51.3885 26.6542 51.3022 26.6466C51.2138 26.6389 51.1381 26.6565 51.0752 26.6995C51.0129 26.7425 50.9638 26.8034 50.9276 26.8823C50.8923 26.9604 50.8702 27.0494 50.8615 27.1492C50.8528 27.2482 50.8591 27.3393 50.8804 27.4225C50.9023 27.5057 50.9402 27.5739 50.994 27.627C51.0486 27.6796 51.1201 27.7097 51.2085 27.7175ZM53.3884 27.4954L53.4711 26.5508L53.8553 26.5844L53.7126 28.2146L53.3401 28.182L53.3655 27.8923L53.3485 27.8908C53.3037 27.9788 53.2367 28.0482 53.1474 28.0988C53.0589 28.1495 52.9534 28.1695 52.831 28.1588C52.7241 28.1495 52.6318 28.1175 52.5538 28.0629C52.4767 28.0077 52.4191 27.9324 52.3811 27.8372C52.3432 27.7412 52.3299 27.6281 52.3413 27.4979L52.4321 26.4599L52.8163 26.4935L52.7307 27.4721C52.7216 27.5754 52.7427 27.6599 52.794 27.7257C52.8453 27.7915 52.9169 27.8284 53.0089 27.8365C53.0655 27.8414 53.1215 27.8324 53.177 27.8095C53.2325 27.7865 53.2796 27.7493 53.3183 27.6978C53.3578 27.6456 53.3812 27.5782 53.3884 27.4954ZM55.0643 26.6902L55.0383 26.9874L54.1012 26.9054L54.1272 26.6082L55.0643 26.6902ZM54.3927 26.2379L54.7769 26.2715L54.643 27.8019C54.6385 27.8536 54.6428 27.8939 54.656 27.9228C54.6699 27.9511 54.6895 27.9714 54.7148 27.9836C54.7402 27.9958 54.7687 28.0033 54.8006 28.0061C54.8246 28.0082 54.8467 28.0083 54.8668 28.0065C54.8877 28.0048 54.9035 28.0029 54.9144 28.001L54.9528 28.307C54.9317 28.3123 54.9016 28.3175 54.8627 28.3227C54.8245 28.3279 54.778 28.3288 54.7234 28.3255C54.627 28.3199 54.5416 28.2978 54.4672 28.2592C54.3929 28.2199 54.3361 28.1643 54.2968 28.0924C54.2582 28.0206 54.2437 27.9338 54.2533 27.832L54.3927 26.2379ZM55.8279 28.4285C55.6999 28.4173 55.5881 28.3744 55.4927 28.2997C55.3973 28.2251 55.3257 28.1226 55.2779 27.9922C55.2302 27.8618 55.2141 27.7072 55.2298 27.5281C55.2456 27.347 55.2887 27.1968 55.359 27.0775C55.4301 26.9575 55.5194 26.8701 55.6269 26.8154C55.7344 26.7599 55.8507 26.7376 55.976 26.7486C56.0715 26.757 56.1486 26.7801 56.2073 26.818C56.2661 26.8553 56.3115 26.8981 56.3436 26.9465C56.3758 26.9943 56.4001 27.0388 56.4164 27.0802L56.4324 27.0815L56.5035 26.2686L56.8887 26.3023L56.6986 28.4758L56.3208 28.4428L56.3432 28.1859L56.3199 28.1839C56.2966 28.2218 56.2643 28.2614 56.2229 28.3027C56.1815 28.3432 56.1287 28.3764 56.0644 28.4022C56.0002 28.4279 55.9213 28.4367 55.8279 28.4285ZM55.9627 28.1227C56.0441 28.1298 56.1153 28.114 56.1765 28.0751C56.2377 28.0355 56.2866 27.9774 56.3233 27.9008C56.3599 27.8242 56.3828 27.7331 56.3921 27.6277C56.4013 27.5223 56.3944 27.4294 56.3715 27.3489C56.3493 27.2686 56.3115 27.2043 56.2579 27.1561C56.2051 27.108 56.1373 27.0803 56.0545 27.0731C55.9689 27.0656 55.8955 27.0816 55.8343 27.1212C55.7731 27.1608 55.7245 27.2185 55.6887 27.2945C55.6528 27.3705 55.6304 27.4591 55.6216 27.5603C55.6127 27.6622 55.6192 27.7544 55.6412 27.8368C55.664 27.9187 55.702 27.9851 55.7553 28.0361C55.8094 28.0865 55.8785 28.1153 55.9627 28.1227ZM57.5742 28.5856C57.4709 28.5765 57.3794 28.55 57.2999 28.506C57.2211 28.4613 57.1608 28.4004 57.1191 28.3233C57.0781 28.2463 57.0622 28.1544 57.0716 28.0475C57.0796 27.9556 57.1033 27.881 57.1425 27.8238C57.1817 27.7666 57.2323 27.7226 57.2941 27.6916C57.356 27.6607 57.4245 27.6392 57.4997 27.6273C57.5757 27.6147 57.6537 27.6076 57.7337 27.606C57.83 27.6045 57.9083 27.6024 57.9684 27.5999C58.0286 27.5966 58.0729 27.5876 58.1012 27.573C58.1304 27.5577 58.1465 27.5317 58.1498 27.4949L58.1503 27.4885C58.1573 27.4086 58.139 27.3446 58.0955 27.2966C58.0519 27.2485 57.9855 27.2206 57.8964 27.2128C57.8023 27.2046 57.7259 27.2186 57.6671 27.2548C57.609 27.2911 57.568 27.3363 57.544 27.3905L57.1897 27.3082C57.2267 27.2116 57.2806 27.1329 57.3515 27.0721C57.4225 27.0106 57.5065 26.9673 57.6035 26.9423C57.7006 26.9166 57.8061 26.9087 57.92 26.9187C57.9985 26.9255 58.0759 26.9416 58.1521 26.9668C58.2283 26.992 58.2968 27.0286 58.3575 27.0767C58.4182 27.1241 58.4649 27.1856 58.4975 27.2611C58.5308 27.3368 58.5427 27.4287 58.5332 27.537L58.4378 28.628L58.0684 28.5957L58.088 28.3717L58.0753 28.3706C58.048 28.4139 58.0114 28.4534 57.9654 28.4893C57.9203 28.5246 57.8648 28.5515 57.799 28.57C57.734 28.5878 57.6591 28.593 57.5742 28.5856ZM57.6986 28.312C57.7758 28.3187 57.8439 28.3094 57.9032 28.2839C57.9625 28.2577 58.0096 28.2205 58.0445 28.1722C58.0801 28.124 58.1005 28.0698 58.1058 28.0097L58.1226 27.8176C58.1097 27.8265 58.0884 27.8339 58.0586 27.8398C58.0296 27.8458 57.9971 27.8505 57.9612 27.8537C57.9252 27.857 57.8897 27.8596 57.8546 27.8615C57.8195 27.8634 57.7891 27.8651 57.7633 27.8664C57.7053 27.8691 57.6529 27.8774 57.6061 27.8911C57.5592 27.9048 57.5213 27.9265 57.4924 27.956C57.4635 27.9849 57.4469 28.024 57.4425 28.0736C57.4363 28.1443 57.4575 28.2 57.506 28.2406C57.5545 28.2812 57.6187 28.305 57.6986 28.312ZM59.7807 27.1029L59.7547 27.4L58.8176 27.318L58.8436 27.0209L59.7807 27.1029ZM59.1091 26.6506L59.4933 26.6842L59.3594 28.2145C59.3549 28.2662 59.3592 28.3065 59.3723 28.3355C59.3863 28.3638 59.4059 28.384 59.4312 28.3962C59.4565 28.4084 59.4851 28.4159 59.5169 28.4187C59.541 28.4208 59.5631 28.4209 59.5832 28.4191C59.604 28.4174 59.6199 28.4156 59.6307 28.4137L59.6692 28.7197C59.648 28.725 59.618 28.7302 59.5791 28.7353C59.5408 28.7405 59.4944 28.7415 59.4398 28.7381C59.3433 28.7325 59.2579 28.7104 59.1836 28.6718C59.1093 28.6325 59.0525 28.577 59.0132 28.5051C58.9745 28.4333 58.96 28.3464 58.9696 28.2446L59.1091 26.6506ZM60.6608 28.8545C60.4973 28.8402 60.3591 28.7939 60.2462 28.7156C60.1341 28.6367 60.0516 28.5318 59.9989 28.401C59.9462 28.2695 59.9274 28.1184 59.9423 27.9479C59.957 27.7802 60.0017 27.6359 60.0764 27.5148C60.152 27.3931 60.2505 27.3019 60.372 27.2412C60.4936 27.1798 60.6322 27.156 60.7879 27.1696C60.8883 27.1784 60.9817 27.2029 61.068 27.2433C61.1551 27.283 61.23 27.3394 61.2927 27.4127C61.3562 27.4859 61.4032 27.5763 61.4337 27.6838C61.4643 27.7906 61.4733 27.9154 61.4608 28.0583L61.4505 28.1761L60.1144 28.0592L60.137 27.8003L61.1049 27.885C61.1106 27.8113 61.1004 27.7445 61.0743 27.6844C61.0483 27.6237 61.0088 27.5743 60.9558 27.5361C60.9035 27.498 60.8406 27.4758 60.767 27.4693C60.6884 27.4625 60.6178 27.4755 60.555 27.5085C60.4923 27.5408 60.4416 27.5863 60.403 27.645C60.3651 27.703 60.3426 27.7684 60.3356 27.8412L60.3158 28.0672C60.3075 28.162 60.3177 28.2449 60.3464 28.3159C60.3752 28.3861 60.4192 28.442 60.4783 28.4835C60.5374 28.5244 60.6088 28.5484 60.6922 28.5557C60.7481 28.5606 60.7994 28.5573 60.8461 28.5457C60.8928 28.5333 60.9341 28.5131 60.9701 28.4849C61.0061 28.4566 61.0345 28.4203 61.0555 28.3758L61.4107 28.4475C61.3798 28.5403 61.3294 28.6193 61.2595 28.6845C61.1904 28.749 61.105 28.7965 61.0033 28.8268C60.9016 28.8564 60.7874 28.8656 60.6608 28.8545ZM62.3158 28.9961C62.1878 28.9849 62.076 28.942 61.9806 28.8674C61.8852 28.7927 61.8136 28.6902 61.7658 28.5598C61.7181 28.4295 61.702 28.2748 61.7177 28.0958C61.7335 27.9146 61.7766 27.7644 61.8469 27.6451C61.918 27.5251 62.0073 27.4378 62.1148 27.383C62.2223 27.3275 62.3387 27.3053 62.4639 27.3162C62.5594 27.3246 62.6365 27.3477 62.6952 27.3856C62.754 27.4229 62.7994 27.4657 62.8316 27.5141C62.8637 27.5619 62.888 27.6064 62.9044 27.6478L62.9203 27.6492L62.9914 26.8362L63.3766 26.8699L63.1865 29.0434L62.8087 29.0104L62.8311 28.7536L62.8078 28.7515C62.7845 28.7894 62.7522 28.829 62.7108 28.8703C62.6694 28.9109 62.6166 28.944 62.5524 28.9698C62.4881 28.9955 62.4092 29.0043 62.3158 28.9961ZM62.4506 28.6903C62.532 28.6974 62.6032 28.6816 62.6644 28.6427C62.7256 28.6032 62.7745 28.5451 62.8112 28.4684C62.8478 28.3918 62.8708 28.3007 62.88 28.1953C62.8892 28.0899 62.8824 27.997 62.8595 27.9165C62.8373 27.8362 62.7994 27.7719 62.7459 27.7237C62.693 27.6756 62.6252 27.6479 62.5424 27.6407C62.4568 27.6332 62.3834 27.6493 62.3222 27.6888C62.261 27.7284 62.2125 27.7861 62.1766 27.8621C62.1407 27.9381 62.1183 28.0267 62.1095 28.1279C62.1006 28.2298 62.1071 28.322 62.1291 28.4045C62.1519 28.4863 62.19 28.5527 62.2432 28.6037C62.2973 28.6541 62.3664 28.683 62.4506 28.6903ZM63.8305 29.1233C63.7661 29.1177 63.7129 29.0902 63.6709 29.0409C63.6289 28.9916 63.611 28.9344 63.6174 28.8694C63.6223 28.8057 63.6497 28.7532 63.6997 28.7119C63.7496 28.6706 63.8068 28.6528 63.8712 28.6585C63.9334 28.6639 63.9856 28.6913 64.0276 28.7406C64.0703 28.79 64.0893 28.8465 64.0844 28.9103C64.0799 28.9534 64.0652 28.9916 64.0401 29.0251C64.0158 29.0586 63.985 29.0844 63.9478 29.1026C63.9113 29.12 63.8722 29.127 63.8305 29.1233ZM65.2196 27.3637L65.2485 27.0337L66.9826 27.1854L66.9538 27.5155L66.282 27.4567L66.1207 29.3001L65.7301 29.266L65.8914 27.4225L65.2196 27.3637ZM67.5775 28.4651L67.494 29.4203L67.1098 29.3867L67.3 27.2132L67.6757 27.246L67.6039 28.0664L67.623 28.0681C67.6692 27.9794 67.7347 27.9121 67.8193 27.866C67.9046 27.8193 68.0096 27.8014 68.1341 27.8123C68.2473 27.8222 68.3439 27.8545 68.424 27.9093C68.504 27.9641 68.563 28.0391 68.601 28.1344C68.6397 28.2298 68.6533 28.3432 68.6418 28.4748L68.551 29.5128L68.1668 29.4792L68.2524 28.5007C68.262 28.391 68.2412 28.3033 68.1899 28.2375C68.1394 28.171 68.0636 28.1334 67.9624 28.1245C67.8945 28.1186 67.8323 28.1281 67.776 28.1531C67.7204 28.1775 67.6749 28.2159 67.6397 28.2685C67.6051 28.321 67.5844 28.3866 67.5775 28.4651ZM69.4089 29.621C69.3056 29.6119 69.2141 29.5854 69.1346 29.5414C69.0558 29.4967 68.9955 29.4358 68.9538 29.3587C68.9127 29.2817 68.8969 29.1898 68.9062 29.0829C68.9143 28.991 68.9379 28.9164 68.9772 28.8592C69.0164 28.802 69.0669 28.758 69.1288 28.727C69.1907 28.6961 69.2592 28.6746 69.3344 28.6627C69.4104 28.6501 69.4884 28.643 69.5683 28.6414C69.6647 28.6399 69.743 28.6378 69.8031 28.6353C69.8633 28.632 69.9075 28.623 69.9359 28.6084C69.965 28.5931 69.9812 28.5671 69.9844 28.5303L69.985 28.5239C69.992 28.444 69.9737 28.38 69.9301 28.332C69.8866 28.2839 69.8202 28.256 69.7311 28.2482C69.637 28.24 69.5605 28.254 69.5018 28.2902C69.4437 28.3265 69.4027 28.3717 69.3787 28.4259L69.0244 28.3436C69.0614 28.247 69.1153 28.1683 69.1862 28.1075C69.2572 28.046 69.3412 28.0027 69.4382 27.9777C69.5353 27.952 69.6408 27.9441 69.7547 27.9541C69.8332 27.9609 69.9106 27.977 69.9868 28.0022C70.063 28.0274 70.1315 28.064 70.1921 28.1121C70.2529 28.1595 70.2995 28.221 70.3321 28.2965C70.3654 28.3722 70.3774 28.4641 70.3679 28.5724L70.2724 29.6634L69.9031 29.6311L69.9227 29.4071L69.91 29.406C69.8827 29.4493 69.846 29.4888 69.8001 29.5247C69.755 29.56 69.6995 29.5869 69.6337 29.6054C69.5687 29.6232 69.4938 29.6284 69.4089 29.621ZM69.5333 29.3474C69.6104 29.3541 69.6786 29.3448 69.7379 29.3193C69.7972 29.2931 69.8443 29.2559 69.8792 29.2076C69.9148 29.1594 69.9352 29.1052 69.9405 29.0451L69.9573 28.853C69.9444 28.8619 69.9231 28.8693 69.8933 28.8752C69.8643 28.8812 69.8318 28.8859 69.7958 28.8891C69.7599 28.8924 69.7244 28.895 69.6893 28.8969C69.6542 28.8988 69.6237 28.9005 69.598 28.9018C69.54 28.9045 69.4876 28.9128 69.4407 28.9265C69.3939 28.9402 69.356 28.9619 69.327 28.9914C69.2981 29.0203 69.2815 29.0594 69.2772 29.109C69.271 29.1797 69.2922 29.2354 69.3406 29.276C69.3891 29.3166 69.4534 29.3404 69.5333 29.3474ZM71.6154 28.1383L71.5894 28.4354L70.6523 28.3534L70.6783 28.0563L71.6154 28.1383ZM70.9438 27.686L71.328 27.7196L71.1941 29.2499C71.1896 29.3016 71.1939 29.3419 71.207 29.3709C71.2209 29.3992 71.2406 29.4194 71.2659 29.4316C71.2912 29.4438 71.3198 29.4513 71.3516 29.4541C71.3757 29.4562 71.3977 29.4563 71.4179 29.4545C71.4387 29.4528 71.4545 29.451 71.4654 29.4491L71.5039 29.7551C71.4827 29.7604 71.4527 29.7656 71.4137 29.7707C71.3755 29.7759 71.3291 29.7769 71.2745 29.7735C71.178 29.7679 71.0926 29.7458 71.0183 29.7072C70.944 29.6679 70.8872 29.6124 70.8478 29.5405C70.8092 29.4687 70.7947 29.3818 70.8043 29.28L70.9438 27.686ZM73.2436 29.9554C73.0809 29.9412 72.9443 29.8932 72.8338 29.8115C72.724 29.7299 72.6432 29.6234 72.5912 29.492C72.54 29.3599 72.5216 29.2114 72.5361 29.0465C72.5506 28.881 72.5952 28.7377 72.6699 28.6166C72.7448 28.4948 72.8433 28.4036 72.9655 28.343C73.0885 28.2818 73.2296 28.2581 73.3888 28.272C73.5211 28.2836 73.636 28.3183 73.7337 28.376C73.832 28.4331 73.9078 28.5085 73.9609 28.6023C74.0141 28.6953 74.0398 28.8009 74.038 28.9191L73.6708 28.887C73.6628 28.8072 73.6331 28.7386 73.5818 28.6814C73.5313 28.6235 73.4597 28.5905 73.367 28.5824C73.2884 28.5755 73.2176 28.5907 73.1544 28.628C73.0914 28.6645 73.0398 28.7206 72.9996 28.7962C72.9602 28.8719 72.9357 28.9646 72.9261 29.0742C72.9164 29.1853 72.9243 29.2823 72.9499 29.3651C72.9755 29.4471 73.0158 29.5123 73.0707 29.5606C73.1264 29.6083 73.1943 29.6356 73.2742 29.6426C73.3308 29.6476 73.3823 29.6414 73.4288 29.624C73.476 29.6061 73.5166 29.5779 73.5506 29.5395C73.5846 29.5012 73.6098 29.4531 73.6263 29.3954L73.9935 29.4275C73.9742 29.542 73.9313 29.6413 73.8648 29.7253C73.7983 29.8086 73.7123 29.8709 73.6067 29.9123C73.5012 29.953 73.3802 29.9674 73.2436 29.9554ZM74.728 29.0907L74.6444 30.0459L74.2602 30.0123L74.4504 27.8387L74.8261 27.8716L74.7543 28.692L74.7734 28.6937C74.8197 28.605 74.8851 28.5377 74.9697 28.4916C75.055 28.4449 75.16 28.427 75.2845 28.4379C75.3977 28.4478 75.4943 28.4801 75.5744 28.5349C75.6544 28.5897 75.7135 28.6647 75.7515 28.76C75.7902 28.8553 75.8038 28.9688 75.7923 29.1004L75.7014 30.1384L75.3173 30.1047L75.4029 29.1262C75.4125 29.0166 75.3916 28.9288 75.3403 28.863C75.2898 28.7966 75.214 28.7589 75.1128 28.7501C75.0449 28.7442 74.9827 28.7537 74.9264 28.7787C74.8708 28.8031 74.8253 28.8415 74.7901 28.894C74.7555 28.9466 74.7348 29.0122 74.728 29.0907ZM76.5593 30.2466C76.456 30.2375 76.3645 30.211 76.285 30.167C76.2062 30.1223 76.1459 30.0614 76.1042 29.9843C76.0632 29.9073 76.0473 29.8154 76.0567 29.7085C76.0647 29.6165 76.0883 29.542 76.1276 29.4848C76.1668 29.4276 76.2173 29.3836 76.2792 29.3526C76.3411 29.3217 76.4096 29.3002 76.4848 29.2883C76.5608 29.2757 76.6388 29.2686 76.7188 29.267C76.8151 29.2655 76.8934 29.2634 76.9535 29.2608C77.0137 29.2575 77.0579 29.2486 77.0863 29.234C77.1155 29.2187 77.1316 29.1926 77.1349 29.1559L77.1354 29.1495C77.1424 29.0695 77.1241 29.0056 77.0806 28.9575C77.037 28.9095 76.9706 28.8816 76.8815 28.8738C76.7874 28.8656 76.7109 28.8796 76.6522 28.9158C76.5941 28.9521 76.5531 28.9973 76.5291 29.0515L76.1748 28.9692C76.2118 28.8726 76.2657 28.7939 76.3366 28.7331C76.4076 28.6716 76.4916 28.6283 76.5886 28.6033C76.6857 28.5776 76.7912 28.5697 76.9051 28.5797C76.9836 28.5865 77.061 28.6026 77.1372 28.6278C77.2134 28.653 77.2819 28.6896 77.3426 28.7377C77.4033 28.7851 77.4499 28.8466 77.4825 28.9221C77.5159 28.9978 77.5278 29.0897 77.5183 29.198L77.4229 30.289L77.0535 30.2566L77.0731 30.0327L77.0604 30.0316C77.0331 30.0748 76.9965 30.1144 76.9505 30.1503C76.9054 30.1856 76.8499 30.2125 76.7841 30.2309C76.7191 30.2488 76.6442 30.254 76.5593 30.2466ZM76.6837 29.973C76.7609 29.9797 76.829 29.9704 76.8883 29.9449C76.9476 29.9187 76.9947 29.8815 77.0296 29.8332C77.0652 29.785 77.0856 29.7308 77.0909 29.6707L77.1077 29.4786C77.0948 29.4874 77.0735 29.4948 77.0437 29.5008C77.0147 29.5068 76.9822 29.5114 76.9463 29.5147C76.9103 29.518 76.8748 29.5206 76.8397 29.5225C76.8046 29.5244 76.7742 29.526 76.7484 29.5273C76.6904 29.5301 76.638 29.5384 76.5912 29.5521C76.5443 29.5658 76.5064 29.5875 76.4775 29.617C76.4486 29.6458 76.4319 29.685 76.4276 29.7346C76.4214 29.8053 76.4426 29.861 76.4911 29.9016C76.5396 29.9422 76.6038 29.966 76.6837 29.973ZM78.2769 29.4012L78.1933 30.3564L77.8092 30.3228L77.9518 28.6926L78.319 28.7247L78.2948 29.0017L78.3139 29.0034C78.3593 28.9154 78.4255 28.8481 78.5122 28.8015C78.5997 28.755 78.7043 28.7371 78.826 28.7477C78.9385 28.7576 79.0344 28.7902 79.1137 28.8456C79.1937 28.9011 79.2527 28.9765 79.2907 29.0718C79.3294 29.1671 79.3427 29.2799 79.3306 29.41L79.2398 30.4479L78.8556 30.4143L78.9412 29.4358C78.9507 29.3268 78.9299 29.2391 78.8787 29.1726C78.8282 29.1062 78.7534 29.0686 78.6543 29.0599C78.5871 29.0541 78.526 29.0637 78.4711 29.0888C78.4169 29.1133 78.3725 29.1518 78.338 29.2044C78.3041 29.2571 78.2838 29.3227 78.2769 29.4012ZM80.2828 31.1894C80.1448 31.1773 80.028 31.1482 79.9322 31.102C79.8364 31.0566 79.7611 31.0001 79.7064 30.9326C79.6517 30.865 79.616 30.7924 79.5993 30.7146L79.9526 30.6611C79.9654 30.6943 79.9853 30.7277 80.0123 30.7615C80.0392 30.7959 80.0769 30.8256 80.1253 30.8505C80.1744 30.8762 80.2375 30.8924 80.3146 30.8991C80.4236 30.9087 80.5161 30.89 80.5922 30.8432C80.6683 30.7971 80.7115 30.7139 80.7221 30.5936L80.7491 30.2848L80.73 30.2831C80.7067 30.321 80.6741 30.3592 80.6323 30.3976C80.5911 30.436 80.5382 30.4667 80.4734 30.4895C80.4094 30.5125 80.3307 30.5198 80.2373 30.5117C80.1121 30.5007 80.0011 30.4614 79.9043 30.3938C79.8084 30.3255 79.7354 30.23 79.6856 30.1073C79.6365 29.9839 79.6197 29.8335 79.6352 29.6559C79.6509 29.4769 79.6938 29.3284 79.764 29.2105C79.835 29.0919 79.9242 29.0053 80.0317 28.9505C80.1392 28.895 80.2556 28.8728 80.3808 28.8837C80.4763 28.8921 80.5534 28.9152 80.6121 28.9532C80.6716 28.9905 80.7178 29.0334 80.7506 29.0819C80.7835 29.1296 80.8078 29.1742 80.8234 29.2155L80.8446 29.2173L80.8682 28.9478L81.2471 28.9809L81.1021 30.6376C81.0899 30.777 81.0466 30.8894 80.9721 30.9748C80.8976 31.0603 80.8007 31.1206 80.6814 31.1558C80.5621 31.191 80.4293 31.2022 80.2828 31.1894ZM80.3709 30.2196C80.4522 30.2268 80.5233 30.213 80.5841 30.1784C80.6449 30.1438 80.6934 30.0906 80.7296 30.019C80.7658 29.9473 80.7884 29.8594 80.7975 29.7554C80.8065 29.6528 80.7995 29.5617 80.7765 29.4819C80.7543 29.4023 80.7164 29.3387 80.6628 29.2913C80.6099 29.2432 80.5421 29.2155 80.4594 29.2082C80.3737 29.2007 80.3003 29.2168 80.2391 29.2563C80.1779 29.2959 80.1294 29.3533 80.0936 29.4286C80.0578 29.5032 80.0356 29.5897 80.027 29.688C80.0183 29.7878 80.0252 29.8764 80.0476 29.9539C80.0708 30.0308 80.1093 30.0927 80.1629 30.1394C80.2174 30.1855 80.2867 30.2123 80.3709 30.2196ZM82.2171 30.7405C82.0536 30.7262 81.9155 30.6799 81.8025 30.6016C81.6904 30.5226 81.608 30.4177 81.5552 30.2869C81.5026 30.1554 81.4837 30.0044 81.4986 29.8339C81.5133 29.6662 81.558 29.5218 81.6328 29.4007C81.7083 29.279 81.8068 29.1878 81.9283 29.1271C82.0499 29.0658 82.1885 29.0419 82.3442 29.0555C82.4447 29.0643 82.538 29.0889 82.6243 29.1292C82.7114 29.1689 82.7863 29.2254 82.8491 29.2986C82.9125 29.3719 82.9595 29.4623 82.99 29.5697C83.0206 29.6765 83.0297 29.8013 83.0172 29.9443L83.0068 30.0621L81.6707 29.9452L81.6933 29.6862L82.6612 29.7709C82.667 29.6972 82.6568 29.6304 82.6307 29.5704C82.6046 29.5096 82.5651 29.4602 82.5121 29.422C82.4598 29.384 82.3969 29.3617 82.3233 29.3553C82.2448 29.3484 82.1741 29.3615 82.1113 29.3945C82.0486 29.4268 81.998 29.4722 81.9593 29.5309C81.9214 29.5889 81.899 29.6543 81.8919 29.7271L81.8721 29.9532C81.8638 30.048 81.874 30.1308 81.9028 30.2018C81.9315 30.2721 81.9755 30.3279 82.0346 30.3695C82.0938 30.4103 82.1651 30.4344 82.2486 30.4417C82.3045 30.4466 82.3557 30.4432 82.4024 30.4316C82.4491 30.4193 82.4904 30.399 82.5264 30.3708C82.5624 30.3426 82.5909 30.3062 82.6119 30.2617L82.9671 30.3334C82.9361 30.4262 82.8857 30.5053 82.8159 30.5704C82.7468 30.635 82.6613 30.6824 82.5596 30.7127C82.4579 30.7423 82.3437 30.7516 82.2171 30.7405ZM84.6631 29.714L84.3095 29.7215C84.3027 29.6853 84.2883 29.6505 84.2662 29.6172C84.2449 29.584 84.2145 29.556 84.1752 29.5333C84.1358 29.5106 84.0864 29.4967 84.027 29.4915C83.947 29.4845 83.8783 29.4959 83.8208 29.5258C83.764 29.5558 83.7335 29.5984 83.7294 29.6537C83.7246 29.701 83.7385 29.7411 83.7713 29.7739C83.8048 29.8068 83.8621 29.8364 83.9432 29.8627L84.216 29.9465C84.3674 29.9932 84.4774 30.056 84.5461 30.1347C84.6154 30.2135 84.6454 30.3113 84.6359 30.4281C84.6262 30.5306 84.5882 30.6186 84.5219 30.6919C84.4564 30.7646 84.3693 30.8183 84.2608 30.853C84.1522 30.8877 84.03 30.8991 83.8942 30.8872C83.6947 30.8698 83.5377 30.814 83.4233 30.7198C83.309 30.625 83.2467 30.5015 83.2365 30.3495L83.6143 30.3462C83.6248 30.4213 83.656 30.48 83.708 30.5223C83.7599 30.5646 83.83 30.5896 83.9185 30.5974C84.0097 30.6054 84.0846 30.593 84.1431 30.5604C84.2023 30.5277 84.2343 30.4839 84.2391 30.4287C84.2432 30.382 84.2285 30.3418 84.1951 30.3082C84.1624 30.2747 84.1092 30.2466 84.0356 30.2237L83.7627 30.141C83.6092 30.0948 83.4983 30.0298 83.43 29.9462C83.3619 29.8618 83.3333 29.7602 83.3444 29.6414C83.3525 29.5408 83.3874 29.4562 83.449 29.3874C83.5114 29.318 83.5939 29.2675 83.6964 29.2359C83.7998 29.2035 83.9166 29.1931 84.0468 29.2045C84.2378 29.2212 84.3846 29.275 84.4871 29.366C84.5904 29.457 84.649 29.573 84.6631 29.714ZM86.119 30.0873L86.0355 31.0425L85.6513 31.0089L85.7939 29.3787L86.1611 29.4108L86.1369 29.6878L86.156 29.6895C86.2015 29.6015 86.2676 29.5342 86.3544 29.4876C86.4418 29.4411 86.5464 29.4232 86.6681 29.4338C86.7806 29.4437 86.8765 29.4763 86.9558 29.5317C87.0358 29.5872 87.0948 29.6626 87.1328 29.7579C87.1715 29.8532 87.1848 29.966 87.1727 30.0961L87.0819 31.134L86.6977 31.1004L86.7833 30.1219C86.7928 30.0129 86.772 29.9252 86.7208 29.8587C86.6703 29.7923 86.5955 29.7547 86.4964 29.746C86.4292 29.7402 86.3681 29.7498 86.3132 29.7749C86.259 29.7994 86.2146 29.8379 86.1801 29.8905C86.1463 29.9432 86.1259 30.0088 86.119 30.0873ZM88.1807 31.2622C88.0215 31.2483 87.8866 31.2012 87.776 31.121C87.6654 31.0407 87.5834 30.9348 87.53 30.8032C87.4774 30.6717 87.4584 30.5217 87.4732 30.3534C87.4879 30.185 87.5326 30.0402 87.6074 29.9192C87.6829 29.7981 87.782 29.7077 87.9049 29.6479C88.0278 29.5881 88.1688 29.5651 88.328 29.579C88.4872 29.593 88.6221 29.6401 88.7327 29.7203C88.8433 29.8006 88.9249 29.9068 88.9775 30.039C89.0308 30.1713 89.0501 30.3216 89.0354 30.49C89.0206 30.6584 88.9756 30.8028 88.9002 30.9231C88.8255 31.0434 88.7267 31.1335 88.6038 31.1934C88.4809 31.2532 88.3399 31.2762 88.1807 31.2622ZM88.2098 30.9546C88.2961 30.9622 88.3703 30.9448 88.4325 30.9025C88.4947 30.8594 88.5435 30.7988 88.5789 30.7207C88.6149 30.6425 88.6373 30.5539 88.646 30.4549C88.6547 30.3551 88.6481 30.2637 88.6261 30.1805C88.6049 30.0966 88.5675 30.0281 88.5136 29.9749C88.4598 29.9217 88.3898 29.8914 88.3035 29.8838C88.215 29.8761 88.1393 29.8937 88.0764 29.9367C88.0142 29.9797 87.965 30.0406 87.9289 30.1195C87.8935 30.1976 87.8715 30.2866 87.8627 30.3864C87.8541 30.4854 87.8604 30.5765 87.8816 30.6597C87.9036 30.7428 87.9414 30.811 87.9952 30.8642C88.0498 30.9168 88.1213 30.9469 88.2098 30.9546ZM89.5804 31.3526L89.2624 29.6822L89.6541 29.7164L89.8403 30.8877L89.8552 30.889L90.2484 29.7684L90.6358 29.8023L90.8289 30.9678L90.8449 30.9692L91.2269 29.854L91.6196 29.8884L91.0153 31.4781L90.6152 31.4431L90.4059 30.3148L90.3836 30.3128L89.9816 31.3877L89.5804 31.3526ZM91.758 31.5666C91.6936 31.561 91.6404 31.5335 91.5984 31.4842C91.5564 31.4349 91.5385 31.3778 91.5449 31.3127C91.5498 31.249 91.5772 31.1965 91.6272 31.1552C91.6771 31.114 91.7343 31.0962 91.7987 31.1018C91.8609 31.1073 91.9131 31.1346 91.9551 31.1839C91.9978 31.2333 92.0168 31.2899 92.0119 31.3536C92.0074 31.3967 91.9927 31.435 91.9676 31.4684C91.9433 31.5019 91.9125 31.5278 91.8753 31.5459C91.8388 31.5634 91.7997 31.5703 91.758 31.5666ZM26.9162 35.9084L27.1064 33.7349L27.5001 33.7693L27.4196 34.6895L28.4268 34.7776L28.5073 33.8574L28.9021 33.892L28.7119 36.0655L28.3171 36.031L28.3979 35.1076L27.3908 35.0195L27.31 35.9428L26.9162 35.9084ZM29.8421 36.1965C29.6786 36.1822 29.5405 36.1359 29.4275 36.0575C29.3154 35.9786 29.2329 35.8737 29.1802 35.7429C29.1276 35.6114 29.1087 35.4604 29.1236 35.2898C29.1383 35.1222 29.183 34.9778 29.2577 34.8567C29.3333 34.735 29.4318 34.6438 29.5533 34.5831C29.6749 34.5218 29.8135 34.4979 29.9692 34.5115C30.0696 34.5203 30.163 34.5449 30.2493 34.5852C30.3364 34.6249 30.4113 34.6814 30.474 34.7546C30.5375 34.8279 30.5845 34.9182 30.615 35.0257C30.6456 35.1325 30.6546 35.2573 30.6421 35.4002L30.6318 35.518L29.2957 35.4011L29.3183 35.1422L30.2862 35.2269C30.2919 35.1532 30.2818 35.0864 30.2556 35.0263C30.2296 34.9656 30.1901 34.9162 30.1371 34.878C30.0848 34.8399 30.0219 34.8177 29.9483 34.8112C29.8698 34.8044 29.7991 34.8174 29.7363 34.8504C29.6736 34.8827 29.6229 34.9282 29.5843 34.9869C29.5464 35.0449 29.5239 35.1103 29.5169 35.1831L29.4971 35.4091C29.4888 35.5039 29.499 35.5868 29.5277 35.6578C29.5565 35.728 29.6005 35.7839 29.6596 35.8255C29.7187 35.8663 29.7901 35.8903 29.8736 35.8976C29.9295 35.9025 29.9807 35.8992 30.0274 35.8876C30.0741 35.8753 30.1154 35.855 30.1514 35.8268C30.1874 35.7985 30.2159 35.7622 30.2369 35.7177L30.592 35.7894C30.5611 35.8822 30.5107 35.9612 30.4408 36.0264C30.3717 36.0909 30.2863 36.1384 30.1846 36.1687C30.0829 36.1983 29.9687 36.2075 29.8421 36.1965ZM30.8947 36.2565L31.0374 34.6263L31.4099 34.6589L31.3861 34.9306L31.4031 34.9321C31.441 34.8406 31.4983 34.7725 31.5749 34.7279C31.6523 34.6826 31.7377 34.6641 31.8311 34.6723C31.8523 34.6741 31.8759 34.6772 31.9019 34.6817C31.9287 34.6854 31.9508 34.6899 31.9682 34.6949L31.9372 35.0483C31.9215 35.0413 31.8961 35.0341 31.8611 35.0267C31.8268 35.0187 31.7934 35.0133 31.7609 35.0105C31.6908 35.0043 31.6265 35.014 31.568 35.0396C31.5102 35.0645 31.4631 35.102 31.4266 35.1523C31.3901 35.2026 31.3688 35.2624 31.3628 35.3317L31.2789 36.2901L30.8947 36.2565ZM32.7314 36.4492C32.568 36.4349 32.4298 36.3886 32.3169 36.3103C32.2047 36.2313 32.1223 36.1265 32.0696 35.9957C32.0169 35.8641 31.998 35.7131 32.013 35.5426C32.0276 35.3749 32.0723 35.2306 32.1471 35.1095C32.2226 34.9878 32.3212 34.8966 32.4427 34.8359C32.5642 34.7745 32.7029 34.7507 32.8585 34.7643C32.959 34.7731 33.0524 34.7976 33.1387 34.838C33.2257 34.8777 33.3007 34.9341 33.3634 35.0074C33.4269 35.0806 33.4738 35.171 33.5044 35.2785C33.535 35.3853 33.544 35.5101 33.5315 35.653L33.5212 35.7708L32.185 35.6539L32.2077 35.395L33.1756 35.4797C33.1813 35.406 33.1711 35.3392 33.145 35.2791C33.1189 35.2184 33.0794 35.169 33.0264 35.1308C32.9742 35.0927 32.9112 35.0705 32.8376 35.064C32.7591 35.0572 32.6885 35.0702 32.6257 35.1032C32.563 35.1355 32.5123 35.181 32.4736 35.2396C32.4358 35.2976 32.4133 35.3631 32.4062 35.4359L32.3864 35.6619C32.3781 35.7567 32.3884 35.8396 32.4171 35.9106C32.4459 35.9808 32.4898 36.0367 32.5489 36.0782C32.6081 36.1191 32.6794 36.1431 32.7629 36.1504C32.8188 36.1553 32.8701 36.152 32.9167 36.1404C32.9634 36.128 33.0048 36.1078 33.0407 36.0796C33.0767 36.0513 33.1052 36.015 33.1262 35.9705L33.4814 36.0422C33.4505 36.135 33.4001 36.214 33.3302 36.2792C33.2611 36.3437 33.1757 36.3912 33.0739 36.4215C32.9722 36.4511 32.8581 36.4603 32.7314 36.4492ZM34.3001 34.3642L34.2811 34.5808C34.2757 34.643 34.258 34.7067 34.228 34.7718C34.1989 34.8363 34.1611 34.8971 34.1148 34.9544C34.0685 35.0109 34.0172 35.0585 33.9611 35.0971L33.7929 34.9658C33.837 34.9105 33.8765 34.8501 33.9114 34.7847C33.9464 34.7187 33.9677 34.6425 33.9753 34.5561L33.9944 34.3375L34.3001 34.3642ZM35.6035 35.46L35.2499 35.4676C35.2431 35.4313 35.2287 35.3966 35.2067 35.3633C35.1853 35.33 35.155 35.3021 35.1156 35.2794C35.0763 35.2567 35.0269 35.2427 34.9674 35.2375C34.8875 35.2305 34.8188 35.242 34.7612 35.2719C34.7044 35.3019 34.674 35.3445 34.6698 35.3997C34.665 35.4471 34.679 35.4871 34.7117 35.5199C34.7452 35.5528 34.8025 35.5824 34.8836 35.6088L35.1565 35.6925C35.3078 35.7393 35.4178 35.802 35.4865 35.8807C35.5559 35.9595 35.5858 36.0573 35.5763 36.1741C35.5666 36.2767 35.5287 36.3646 35.4624 36.4379C35.3968 36.5106 35.3098 36.5643 35.2012 36.599C35.0927 36.6337 34.9705 36.6451 34.8346 36.6333C34.6351 36.6158 34.4782 36.56 34.3638 36.4659C34.2494 36.371 34.1872 36.2476 34.1769 36.0955L34.5547 36.0922C34.5653 36.1673 34.5965 36.226 34.6484 36.2683C34.7003 36.3107 34.7705 36.3357 34.8589 36.3434C34.9502 36.3514 35.0251 36.3391 35.0835 36.3064C35.1427 36.2738 35.1747 36.2299 35.1795 36.1747C35.1836 36.128 35.1689 36.0879 35.1355 36.0543C35.1028 36.0208 35.0497 35.9926 34.9761 35.9698L34.7031 35.8871C34.5496 35.8408 34.4387 35.7759 34.3705 35.6922C34.3023 35.6078 34.2738 35.5062 34.2849 35.3874C34.293 35.2869 34.3278 35.2022 34.3894 35.1335C34.4518 35.0641 34.5343 35.0136 34.6369 34.9819C34.7402 34.9496 34.857 34.9391 34.9872 34.9505C35.1782 34.9672 35.325 35.0211 35.4276 35.112C35.5308 35.203 35.5895 35.319 35.6035 35.46ZM37.5483 35.196L37.5223 35.4931L36.5852 35.4111L36.6112 35.114L37.5483 35.196ZM36.8768 34.7437L37.2609 34.7773L37.1271 36.3077C37.1225 36.3593 37.1269 36.3996 37.14 36.4286C37.1539 36.4569 37.1735 36.4771 37.1989 36.4893C37.2242 36.5015 37.2527 36.509 37.2846 36.5118C37.3086 36.5139 37.3307 36.5141 37.3508 36.5123C37.3717 36.5105 37.3875 36.5087 37.3984 36.5068L37.4368 36.8128C37.4157 36.8181 37.3857 36.8233 37.3467 36.8284C37.3085 36.8336 37.262 36.8346 37.2074 36.8312C37.111 36.8256 37.0256 36.8035 36.9512 36.765C36.877 36.7257 36.8202 36.6701 36.7808 36.5982C36.7422 36.5264 36.7277 36.4396 36.7373 36.3377L36.8768 34.7437ZM38.4178 36.9467C38.2586 36.9328 38.1237 36.8857 38.0131 36.8055C37.9025 36.7252 37.8205 36.6193 37.7671 36.4877C37.7145 36.3562 37.6955 36.2063 37.7102 36.0379C37.725 35.8695 37.7697 35.7247 37.8445 35.6037C37.9199 35.4826 38.0191 35.3922 38.142 35.3324C38.2648 35.2726 38.4059 35.2496 38.5651 35.2635C38.7243 35.2775 38.8592 35.3246 38.9698 35.4048C39.0804 35.4851 39.162 35.5913 39.2146 35.7235C39.2679 35.8558 39.2872 36.0061 39.2724 36.1745C39.2577 36.3429 39.2126 36.4873 39.1372 36.6076C39.0625 36.728 38.9638 36.8181 38.8409 36.8779C38.718 36.9377 38.577 36.9607 38.4178 36.9467ZM38.4468 36.6392C38.5332 36.6467 38.6074 36.6293 38.6696 36.587C38.7318 36.544 38.7806 36.4833 38.8159 36.4052C38.852 36.327 38.8744 36.2385 38.883 36.1394C38.8918 36.0396 38.8852 35.9482 38.8632 35.865C38.842 35.7811 38.8045 35.7126 38.7507 35.6594C38.6969 35.6062 38.6269 35.5759 38.5405 35.5683C38.4521 35.5606 38.3764 35.5782 38.3135 35.6212C38.2512 35.6642 38.2021 35.7251 38.1659 35.804C38.1306 35.8821 38.1085 35.9711 38.0998 36.0709C38.0911 36.1699 38.0974 36.261 38.1187 36.3442C38.1406 36.4274 38.1785 36.4955 38.2323 36.5487C38.2869 36.6013 38.3584 36.6314 38.4468 36.6392ZM41.2257 35.5177L41.1997 35.8149L40.2626 35.7329L40.2886 35.4357L41.2257 35.5177ZM40.5541 35.0654L40.9383 35.099L40.8044 36.6294C40.7999 36.681 40.8042 36.7213 40.8174 36.7503C40.8313 36.7786 40.8509 36.7989 40.8762 36.8111C40.9015 36.8233 40.9301 36.8307 40.9619 36.8335C40.986 36.8356 41.0081 36.8358 41.0282 36.834C41.049 36.8322 41.0649 36.8304 41.0757 36.8285L41.1142 37.1345C41.0931 37.1398 41.063 37.145 41.0241 37.1502C40.9858 37.1554 40.9394 37.1563 40.8848 37.1529C40.7883 37.1474 40.7029 37.1253 40.6286 37.0867C40.5543 37.0474 40.4975 36.9918 40.4582 36.9199C40.4195 36.8481 40.405 36.7613 40.4147 36.6595L40.5541 35.0654ZM41.9072 36.2575L41.8236 37.2126L41.4394 37.179L41.6296 35.0055L42.0053 35.0384L41.9335 35.8587L41.9526 35.8604C41.9989 35.7718 42.0643 35.7044 42.1489 35.6584C42.2342 35.6116 42.3392 35.5937 42.4637 35.6046C42.5769 35.6145 42.6735 35.6469 42.7536 35.7016C42.8336 35.7564 42.8926 35.8314 42.9307 35.9267C42.9694 36.0221 42.983 36.1356 42.9715 36.2672L42.8806 37.3051L42.4965 37.2715L42.5821 36.293C42.5917 36.1833 42.5708 36.0956 42.5195 36.0298C42.469 35.9633 42.3932 35.9257 42.292 35.9168C42.2241 35.9109 42.1619 35.9204 42.1056 35.9454C42.05 35.9698 42.0045 36.0083 41.9693 36.0608C41.9347 36.1134 41.914 36.1789 41.9072 36.2575ZM43.9911 37.4343C43.8277 37.42 43.6895 37.3737 43.5766 37.2954C43.4645 37.2164 43.382 37.1116 43.3293 36.9808C43.2766 36.8492 43.2578 36.6982 43.2727 36.5277C43.2874 36.36 43.3321 36.2157 43.4068 36.0946C43.4824 35.9729 43.5809 35.8817 43.7024 35.821C43.824 35.7596 43.9626 35.7358 44.1182 35.7494C44.2187 35.7582 44.3121 35.7827 44.3984 35.8231C44.4855 35.8628 44.5604 35.9192 44.6231 35.9925C44.6866 36.0657 44.7336 36.1561 44.7641 36.2636C44.7947 36.3704 44.8037 36.4952 44.7912 36.6381L44.7809 36.7559L43.4447 36.639L43.4674 36.3801L44.4353 36.4647C44.441 36.3911 44.4308 36.3243 44.4047 36.2642C44.3787 36.2035 44.3391 36.154 44.2862 36.1159C44.2339 36.0778 44.1709 36.0556 44.0974 36.0491C44.0188 36.0423 43.9482 36.0553 43.8854 36.0883C43.8227 36.1206 43.772 36.1661 43.7334 36.2247C43.6955 36.2827 43.673 36.3482 43.6659 36.421L43.6462 36.647C43.6379 36.7418 43.6481 36.8247 43.6768 36.8957C43.7056 36.9659 43.7495 37.0218 43.8087 37.0633C43.8678 37.1042 43.9391 37.1282 44.0226 37.1355C44.0785 37.1404 44.1298 37.1371 44.1764 37.1255C44.2231 37.1131 44.2645 37.0929 44.3005 37.0647C44.3364 37.0364 44.3649 37.0001 44.3859 36.9556L44.7411 37.0273C44.7102 37.1201 44.6598 37.1991 44.5899 37.2643C44.5208 37.3288 44.4354 37.3763 44.3336 37.4066C44.232 37.4362 44.1178 37.4454 43.9911 37.4343ZM46.3875 37.6408C46.2595 37.6296 46.1477 37.5867 46.0523 37.512C45.9569 37.4374 45.8853 37.3348 45.8375 37.2045C45.7898 37.0741 45.7737 36.9194 45.7894 36.7404C45.8052 36.5593 45.8483 36.4091 45.9186 36.2897C45.9897 36.1698 46.079 36.0824 46.1865 36.0276C46.294 35.9722 46.4104 35.9499 46.5356 35.9609C46.6311 35.9692 46.7082 35.9924 46.7669 36.0303C46.8257 36.0675 46.8711 36.1104 46.9033 36.1588C46.9354 36.2065 46.9597 36.2511 46.9761 36.2924L46.992 36.2938L47.0631 35.4809L47.4483 35.5146L47.2582 37.6881L46.8804 37.655L46.9028 37.3982L46.8795 37.3962C46.8562 37.4341 46.8239 37.4736 46.7825 37.5149C46.7411 37.5555 46.6883 37.5887 46.6241 37.6144C46.5598 37.6402 46.4809 37.649 46.3875 37.6408ZM46.5223 37.335C46.6037 37.3421 46.6749 37.3262 46.7361 37.2874C46.7973 37.2478 46.8462 37.1897 46.8829 37.1131C46.9195 37.0364 46.9425 36.9454 46.9517 36.84C46.9609 36.7345 46.9541 36.6416 46.9312 36.5612C46.909 36.4808 46.8711 36.4166 46.8176 36.3684C46.7647 36.3203 46.6969 36.2926 46.6141 36.2854C46.5285 36.2779 46.4551 36.2939 46.3939 36.3335C46.3327 36.373 46.2842 36.4308 46.2483 36.5068C46.2124 36.5828 46.19 36.6714 46.1812 36.7726C46.1723 36.8744 46.1788 36.9666 46.2008 37.0491C46.2236 37.131 46.2617 37.1974 46.3149 37.2484C46.369 37.2987 46.4381 37.3276 46.5223 37.335ZM47.6676 37.7239L47.8102 36.0938L48.1944 36.1274L48.0518 37.7575L47.6676 37.7239ZM48.0236 35.8793C47.9627 35.874 47.9122 35.8492 47.8718 35.8051C47.8315 35.7602 47.8139 35.7091 47.8189 35.6518C47.824 35.5938 47.8502 35.5465 47.8976 35.51C47.9451 35.4728 47.9992 35.4569 48.0601 35.4622C48.1216 35.4676 48.1722 35.4927 48.2118 35.5375C48.2521 35.5817 48.2697 35.6328 48.2647 35.6908C48.2596 35.7481 48.2334 35.7954 48.186 35.8326C48.1393 35.8691 48.0851 35.8847 48.0236 35.8793ZM49.8402 36.7056L49.4866 36.7131C49.4798 36.6769 49.4653 36.6421 49.4433 36.6088C49.422 36.5756 49.3916 36.5476 49.3523 36.5249C49.3129 36.5022 49.2635 36.4883 49.2041 36.4831C49.1241 36.4761 49.0554 36.4875 48.9979 36.5174C48.9411 36.5474 48.9106 36.59 48.9065 36.6453C48.9016 36.6926 48.9156 36.7327 48.9484 36.7655C48.9818 36.7984 49.0391 36.828 49.1203 36.8543L49.3931 36.9381C49.5444 36.9848 49.6545 37.0476 49.7231 37.1263C49.7925 37.2051 49.8225 37.3029 49.813 37.4197C49.8033 37.5222 49.7653 37.6101 49.699 37.6835C49.6335 37.7562 49.5464 37.8099 49.4379 37.8446C49.3293 37.8793 49.2071 37.8907 49.0713 37.8788C48.8717 37.8613 48.7148 37.8055 48.6004 37.7114C48.4861 37.6166 48.4238 37.4931 48.4136 37.3411L48.7914 37.3378C48.8019 37.4129 48.8331 37.4715 48.885 37.5139C48.9369 37.5562 49.0071 37.5812 49.0955 37.589C49.1868 37.597 49.2617 37.5846 49.3202 37.5519C49.3793 37.5193 49.4113 37.4754 49.4162 37.4203C49.4202 37.3736 49.4056 37.3334 49.3722 37.2998C49.3394 37.2663 49.2863 37.2381 49.2127 37.2153L48.9398 37.1326C48.7863 37.0864 48.6754 37.0214 48.6071 36.9377C48.5389 36.8534 48.5104 36.7518 48.5215 36.633C48.5296 36.5324 48.5644 36.4478 48.6261 36.379C48.6885 36.3096 48.7709 36.2591 48.8735 36.2274C48.9769 36.1951 49.0936 36.1847 49.2238 36.1961C49.4149 36.2128 49.5617 36.2666 49.6642 36.3576C49.7675 36.4486 49.8261 36.5646 49.8402 36.7056ZM50.087 37.9356L50.2297 36.3054L50.6022 36.338L50.5784 36.6097L50.5954 36.6112C50.6333 36.5197 50.6906 36.4516 50.7672 36.407C50.8446 36.3617 50.93 36.3432 51.0234 36.3514C51.0447 36.3532 51.0683 36.3564 51.0943 36.3608C51.121 36.3645 51.1431 36.369 51.1605 36.374L51.1295 36.7275C51.1138 36.7204 51.0884 36.7132 51.0534 36.7058C51.0191 36.6978 50.9857 36.6924 50.9532 36.6896C50.8832 36.6834 50.8189 36.6931 50.7603 36.7187C50.7025 36.7436 50.6554 36.7812 50.6189 36.8314C50.5824 36.8817 50.5611 36.9415 50.5551 37.0109L50.4712 37.9692L50.087 37.9356ZM52.371 37.4446L52.4536 36.5L52.8378 36.5336L52.6952 38.1638L52.3226 38.1312L52.348 37.8414L52.331 37.84C52.2862 37.928 52.2192 37.9974 52.1299 38.048C52.0414 38.0987 51.9359 38.1187 51.8135 38.108C51.7067 38.0987 51.6143 38.0667 51.5364 38.0121C51.4592 37.9569 51.4016 37.8816 51.3636 37.7863C51.3257 37.6903 51.3124 37.5772 51.3238 37.4471L51.4146 36.4091L51.7988 36.4427L51.7132 37.4212C51.7041 37.5245 51.7253 37.6091 51.7765 37.6749C51.8278 37.7407 51.8994 37.7776 51.9914 37.7856C52.048 37.7906 52.1041 37.7816 52.1595 37.7587C52.215 37.7357 52.2621 37.6985 52.3008 37.647C52.3403 37.5948 52.3637 37.5273 52.371 37.4446ZM53.0367 38.8096L53.2328 36.5682L53.6107 36.6012L53.5871 36.8708L53.6094 36.8728C53.6326 36.8349 53.6643 36.7952 53.7043 36.7538C53.7443 36.7117 53.7965 36.6774 53.8608 36.6509C53.9252 36.6238 54.0052 36.6144 54.1007 36.6227C54.2266 36.6338 54.3374 36.6759 54.4329 36.7491C54.5292 36.8217 54.6016 36.9232 54.6501 37.0536C54.6994 37.1834 54.7161 37.3389 54.7002 37.52C54.6846 37.699 54.6419 37.8486 54.5722 37.9687C54.5025 38.0888 54.4142 38.1773 54.3073 38.2342C54.2003 38.2912 54.0828 38.314 53.9548 38.3028C53.8614 38.2947 53.7853 38.2723 53.7265 38.2358C53.6676 38.1993 53.6214 38.1575 53.5877 38.1103C53.5548 38.0625 53.5298 38.0179 53.5128 37.9765L53.4969 37.9751L53.4209 38.8432L53.0367 38.8096ZM53.5383 37.4162C53.5291 37.5216 53.5358 37.6153 53.5586 37.6971C53.5821 37.779 53.6202 37.8447 53.6729 37.8943C53.7264 37.9431 53.7938 37.9711 53.8752 37.9783C53.9601 37.9857 54.0332 37.9693 54.0944 37.929C54.1558 37.888 54.2044 37.8292 54.2403 37.7525C54.2771 37.6751 54.2999 37.5855 54.3088 37.4836C54.3176 37.3825 54.311 37.2913 54.2889 37.2103C54.2667 37.1292 54.2289 37.0639 54.1755 37.0143C54.1221 36.9647 54.0526 36.9361 53.967 36.9286C53.8849 36.9215 53.8134 36.937 53.7523 36.9751C53.6912 37.0132 53.6424 37.0699 53.6058 37.1452C53.57 37.2204 53.5475 37.3108 53.5383 37.4162ZM55.9147 36.8028L55.8887 37.1L54.9516 37.018L54.9776 36.7208L55.9147 36.8028ZM55.2431 36.3505L55.6273 36.3841L55.4934 37.9145C55.4889 37.9662 55.4932 38.0065 55.5064 38.0354C55.5203 38.0637 55.5399 38.084 55.5652 38.0962C55.5905 38.1084 55.6191 38.1159 55.6509 38.1187C55.675 38.1208 55.6971 38.1209 55.7172 38.1191C55.738 38.1174 55.7539 38.1155 55.7647 38.1136L55.8032 38.4196C55.7821 38.4249 55.752 38.4301 55.7131 38.4353C55.6748 38.4405 55.6284 38.4414 55.5738 38.4381C55.4773 38.4325 55.3919 38.4104 55.3176 38.3718C55.2433 38.3325 55.1865 38.2769 55.1472 38.205C55.1085 38.1332 55.094 38.0464 55.1037 37.9446L55.2431 36.3505ZM56.7842 38.5536C56.625 38.5397 56.4901 38.4926 56.3795 38.4123C56.2688 38.3321 56.1869 38.2261 56.1335 38.0946C56.0808 37.9631 56.0619 37.8131 56.0766 37.6447C56.0913 37.4763 56.1361 37.3316 56.2108 37.2105C56.2863 37.0895 56.3855 36.9991 56.5083 36.9392C56.6312 36.8794 56.7722 36.8565 56.9314 36.8704C57.0906 36.8843 57.2255 36.9314 57.3361 37.0117C57.4467 37.0919 57.5284 37.1982 57.581 37.3304C57.6343 37.4627 57.6535 37.613 57.6388 37.7814C57.6241 37.9498 57.579 38.0941 57.5036 38.2144C57.4289 38.3348 57.3301 38.4249 57.2073 38.4847C57.0844 38.5446 56.9434 38.5675 56.7842 38.5536ZM56.8132 38.246C56.8995 38.2536 56.9738 38.2362 57.0359 38.1938C57.0982 38.1508 57.147 38.0902 57.1823 38.012C57.2184 37.9339 57.2407 37.8453 57.2494 37.7463C57.2581 37.6465 57.2515 37.555 57.2296 37.4718C57.2084 37.388 57.1709 37.3195 57.1171 37.2663C57.0633 37.2131 56.9932 37.1827 56.9069 37.1752C56.8185 37.1674 56.7428 37.185 56.6798 37.228C56.6176 37.2711 56.5684 37.332 56.5323 37.4108C56.497 37.489 56.4749 37.578 56.4662 37.6777C56.4575 37.7768 56.4638 37.8679 56.485 37.951C56.507 38.0342 56.5449 38.1024 56.5987 38.1556C56.6533 38.2081 56.7248 38.2383 56.8132 38.246ZM57.8941 38.6186L58.0368 36.9885L58.4093 37.0211L58.3855 37.2928L58.4025 37.2942C58.4404 37.2027 58.4977 37.1347 58.5743 37.0901C58.6517 37.0448 58.7371 37.0262 58.8305 37.0344C58.8517 37.0363 58.8754 37.0394 58.9013 37.0438C58.9281 37.0476 58.9502 37.052 58.9676 37.0571L58.9366 37.4105C58.9209 37.4034 58.8955 37.3962 58.8605 37.3889C58.8262 37.3809 58.7928 37.3755 58.7603 37.3726C58.6902 37.3665 58.6259 37.3762 58.5674 37.4017C58.5096 37.4266 58.4625 37.4642 58.426 37.5145C58.3895 37.5647 58.3682 37.6245 58.3622 37.6939L58.2783 38.6522L57.8941 38.6186ZM60.4724 37.6358L60.1188 37.6433C60.112 37.6071 60.0976 37.5723 60.0755 37.539C60.0542 37.5058 60.0239 37.4778 59.9845 37.4551C59.9451 37.4324 59.8957 37.4185 59.8363 37.4133C59.7564 37.4063 59.6876 37.4177 59.6301 37.4476C59.5733 37.4776 59.5428 37.5202 59.5387 37.5755C59.5339 37.6228 59.5478 37.6629 59.5806 37.6957C59.6141 37.7286 59.6714 37.7582 59.7525 37.7845L60.0254 37.8683C60.1767 37.915 60.2867 37.9778 60.3554 38.0565C60.4248 38.1353 60.4547 38.2331 60.4452 38.3499C60.4355 38.4524 60.3975 38.5403 60.3312 38.6137C60.2657 38.6864 60.1786 38.7401 60.0701 38.7748C59.9615 38.8095 59.8393 38.8209 59.7035 38.809C59.504 38.7915 59.347 38.7357 59.2326 38.6416C59.1183 38.5468 59.056 38.4233 59.0458 38.2713L59.4236 38.268C59.4341 38.3431 59.4654 38.4017 59.5173 38.4441C59.5692 38.4864 59.6393 38.5114 59.7278 38.5192C59.8191 38.5272 59.8939 38.5148 59.9524 38.4821C60.0116 38.4495 60.0436 38.4056 60.0484 38.3505C60.0525 38.3038 60.0378 38.2636 60.0044 38.23C59.9717 38.1965 59.9185 38.1683 59.845 38.1455L59.572 38.0628C59.4185 38.0166 59.3076 37.9516 59.2394 37.8679C59.1712 37.7836 59.1426 37.682 59.1537 37.5632C59.1618 37.4626 59.1967 37.378 59.2583 37.3092C59.3207 37.2398 59.4032 37.1893 59.5058 37.1576C59.6091 37.1253 59.7259 37.1149 59.8561 37.1263C60.0471 37.143 60.1939 37.1968 60.2964 37.2878C60.3997 37.3788 60.4583 37.4948 60.4724 37.6358ZM61.1963 38.6081L61.1723 38.7236C61.1546 38.8119 61.129 38.9009 61.0955 38.9907C61.0626 39.0812 61.029 39.1642 60.9946 39.2396C60.9602 39.315 60.9325 39.3742 60.9116 39.4173L60.6527 39.3947C60.6664 39.3524 60.685 39.2948 60.7084 39.222C60.7326 39.1493 60.7569 39.0673 60.7813 38.976C60.8057 38.8847 60.8249 38.7916 60.8389 38.6966L60.8567 38.5784L61.1963 38.6081ZM63.2315 37.443L63.2055 37.7401L62.2684 37.6581L62.2944 37.361L63.2315 37.443ZM62.5599 36.9907L62.9441 37.0243L62.8102 38.5546C62.8057 38.6063 62.81 38.6466 62.8231 38.6756C62.8371 38.7039 62.8567 38.7241 62.882 38.7363C62.9073 38.7485 62.9359 38.756 62.9677 38.7588C62.9918 38.7609 63.0139 38.761 63.034 38.7592C63.0548 38.7575 63.0707 38.7557 63.0815 38.7538L63.12 39.0598C63.0988 39.0651 63.0688 39.0703 63.0299 39.0754C62.9916 39.0806 62.9452 39.0816 62.8906 39.0782C62.7941 39.0726 62.7087 39.0505 62.6344 39.0119C62.5601 38.9727 62.5033 38.9171 62.464 38.8452C62.4253 38.7734 62.4108 38.6865 62.4204 38.5847L62.5599 36.9907ZM63.913 38.1827L63.8294 39.1379L63.4452 39.1043L63.6354 36.9308L64.0111 36.9636L63.9393 37.784L63.9584 37.7857C64.0046 37.697 64.0701 37.6297 64.1547 37.5836C64.24 37.5369 64.345 37.519 64.4695 37.5299C64.5827 37.5398 64.6793 37.5721 64.7594 37.6269C64.8394 37.6817 64.8984 37.7567 64.9364 37.852C64.9751 37.9473 64.9887 38.0608 64.9772 38.1924L64.8864 39.2304L64.5022 39.1968L64.5878 38.2182C64.5974 38.1086 64.5766 38.0208 64.5253 37.955C64.4748 37.8886 64.399 37.851 64.2978 37.8421C64.2299 37.8362 64.1677 37.8457 64.1114 37.8707C64.0558 37.8951 64.0103 37.9335 63.9751 37.986C63.9405 38.0386 63.9198 38.1042 63.913 38.1827ZM65.9969 39.3596C65.8335 39.3453 65.6953 39.299 65.5824 39.2207C65.4702 39.1417 65.3878 39.0368 65.3351 38.906C65.2824 38.7745 65.2636 38.6235 65.2785 38.453C65.2931 38.2853 65.3379 38.1409 65.4126 38.0198C65.4881 37.8981 65.5867 37.8069 65.7082 37.7463C65.8298 37.6849 65.9684 37.661 66.124 37.6746C66.2245 37.6834 66.3179 37.708 66.4042 37.7483C66.4913 37.788 66.5662 37.8445 66.6289 37.9177C66.6924 37.991 66.7394 38.0814 66.7699 38.1888C66.8005 38.2956 66.8095 38.4205 66.797 38.5634L66.7867 38.6812L65.4505 38.5643L65.4732 38.3053L66.4411 38.39C66.4468 38.3164 66.4366 38.2495 66.4105 38.1895C66.3844 38.1287 66.3449 38.0793 66.2919 38.0412C66.2397 38.0031 66.1767 37.9808 66.1032 37.9744C66.0246 37.9675 65.954 37.9806 65.8912 38.0136C65.8285 38.0459 65.7778 38.0914 65.7392 38.15C65.7013 38.208 65.6788 38.2734 65.6717 38.3462L65.652 38.5723C65.6437 38.6671 65.6539 38.75 65.6826 38.8209C65.7114 38.8912 65.7553 38.9471 65.8144 38.9886C65.8736 39.0294 65.9449 39.0535 66.0284 39.0608C66.0843 39.0657 66.1356 39.0623 66.1822 39.0507C66.2289 39.0384 66.2703 39.0181 66.3063 38.9899C66.3422 38.9617 66.3707 38.9253 66.3917 38.8808L66.7469 38.9525C66.716 39.0454 66.6656 39.1244 66.5957 39.1896C66.5266 39.2541 66.4412 39.3015 66.3394 39.3318C66.2377 39.3614 66.1236 39.3707 65.9969 39.3596ZM67.7909 39.4845L67.9335 37.8543L68.3177 37.8879L68.1751 39.5181L67.7909 39.4845ZM68.1469 37.6399C68.0861 37.6345 68.0355 37.6098 67.9951 37.5656C67.9549 37.5208 67.9372 37.4697 67.9422 37.4124C67.9473 37.3543 67.9736 37.3071 68.021 37.2706C68.0684 37.2334 68.1226 37.2175 68.1834 37.2228C68.245 37.2282 68.2955 37.2533 68.3351 37.2981C68.3754 37.3423 68.3931 37.3933 68.388 37.4514C68.383 37.5087 68.3567 37.5559 68.3093 37.5931C68.2626 37.6297 68.2085 37.6453 68.1469 37.6399ZM69.0379 38.6311L68.9543 39.5863L68.5702 39.5526L68.7128 37.9225L69.08 37.9546L69.0557 38.2316L69.0748 38.2333C69.1203 38.1453 69.1865 38.078 69.2732 38.0314C69.3607 37.9849 69.4653 37.967 69.587 37.9776C69.6995 37.9874 69.7954 38.0201 69.8747 38.0755C69.9547 38.131 70.0137 38.2064 70.0517 38.3017C70.0904 38.397 70.1037 38.5097 70.0916 38.6399L70.0008 39.6778L69.6166 39.6442L69.7022 38.6657C69.7117 38.5567 69.6909 38.469 69.6397 38.4025C69.5892 38.336 69.5144 38.2985 69.4153 38.2898C69.3481 38.2839 69.287 38.2936 69.2321 38.3187C69.1779 38.3432 69.1335 38.3817 69.099 38.4343C69.0651 38.487 69.0448 38.5526 69.0379 38.6311ZM70.8591 38.7904L70.7755 39.7456L70.3913 39.712L70.5339 38.0818L70.9011 38.114L70.8769 38.391L70.896 38.3926C70.9415 38.3046 71.0076 38.2374 71.0944 38.1908C71.1819 38.1442 71.2865 38.1263 71.4082 38.1369C71.5207 38.1468 71.6166 38.1794 71.6958 38.2348C71.7758 38.2903 71.8348 38.3657 71.8728 38.461C71.9115 38.5563 71.9248 38.6691 71.9127 38.7992L71.8219 39.8371L71.4378 39.8035L71.5234 38.825C71.5329 38.7161 71.512 38.6283 71.4608 38.5618C71.4103 38.4954 71.3355 38.4578 71.2365 38.4492C71.1693 38.4433 71.1082 38.4529 71.0532 38.478C70.999 38.5025 70.9547 38.5411 70.9201 38.5937C70.8863 38.6463 70.8659 38.7119 70.8591 38.7904ZM72.9208 39.9654C72.7616 39.9514 72.6267 39.9043 72.5161 39.8241C72.4054 39.7438 72.3235 39.6379 72.2701 39.5063C72.2174 39.3748 72.1985 39.2249 72.2132 39.0565C72.2279 38.8881 72.2727 38.7434 72.3474 38.6223C72.4229 38.5013 72.5221 38.4108 72.6449 38.351C72.7678 38.2912 72.9088 38.2682 73.068 38.2822C73.2272 38.2961 73.3621 38.3432 73.4727 38.4234C73.5834 38.5037 73.665 38.6099 73.7176 38.7422C73.7709 38.8744 73.7901 39.0248 73.7754 39.1932C73.7607 39.3615 73.7156 39.5059 73.6402 39.6262C73.5655 39.7466 73.4667 39.8367 73.3439 39.8965C73.221 39.9563 73.08 39.9793 72.9208 39.9654ZM72.9498 39.6578C73.0361 39.6653 73.1104 39.6479 73.1725 39.6056C73.2348 39.5626 73.2836 39.502 73.3189 39.4238C73.355 39.3457 73.3773 39.2571 73.386 39.158C73.3947 39.0583 73.3881 38.9668 73.3662 38.8836C73.345 38.7997 73.3075 38.7312 73.2537 38.678C73.1999 38.6249 73.1298 38.5945 73.0435 38.5869C72.9551 38.5792 72.8794 38.5968 72.8164 38.6398C72.7542 38.6828 72.705 38.7438 72.6689 38.8226C72.6336 38.9008 72.6115 38.9897 72.6028 39.0895C72.5941 39.1885 72.6004 39.2796 72.6216 39.3628C72.6436 39.446 72.6815 39.5142 72.7353 39.5674C72.7899 39.6199 72.8614 39.65 72.9498 39.6578ZM75.574 38.5228L74.8508 40.1021L74.4263 40.065L73.9884 38.3841L74.3981 38.4199L74.6668 39.6636L74.6838 39.6651L75.1654 38.487L75.574 38.5228ZM76.1167 40.246C76.0134 40.237 75.922 40.2105 75.8424 40.1664C75.7637 40.1218 75.7034 40.0609 75.6617 39.9838C75.6206 39.9068 75.6048 39.8148 75.6141 39.708C75.6222 39.616 75.6458 39.5414 75.685 39.4843C75.7243 39.4271 75.7748 39.3831 75.8367 39.3521C75.8986 39.3212 75.9671 39.2997 76.0423 39.2878C76.1183 39.2751 76.1962 39.2681 76.2762 39.2665C76.3726 39.265 76.4509 39.2629 76.511 39.2603C76.5711 39.257 76.6154 39.2481 76.6438 39.2334C76.6729 39.2182 76.6891 39.1921 76.6923 39.1553L76.6929 39.149C76.6999 39.069 76.6816 39.005 76.638 38.957C76.5945 38.909 76.5281 38.8811 76.439 38.8733C76.3449 38.8651 76.2684 38.8791 76.2096 38.9153C76.1516 38.9515 76.1105 38.9968 76.0865 39.051L75.7323 38.9687C75.7693 38.8721 75.8232 38.7934 75.8941 38.7326C75.9651 38.6711 76.0491 38.6278 76.1461 38.6028C76.2432 38.5771 76.3486 38.5692 76.4626 38.5791C76.5411 38.586 76.6185 38.602 76.6947 38.6273C76.7709 38.6525 76.8393 38.6891 76.9 38.7372C76.9608 38.7846 77.0074 38.846 77.04 38.9216C77.0733 38.9972 77.0852 39.0892 77.0758 39.1974L76.9803 40.2884L76.611 40.2561L76.6306 40.0322L76.6178 40.0311C76.5905 40.0743 76.5539 40.1139 76.508 40.1498C76.4629 40.1851 76.4074 40.2119 76.3416 40.2304C76.2766 40.2483 76.2016 40.2535 76.1167 40.246ZM76.2412 39.9725C76.3183 39.9792 76.3865 39.9699 76.4458 39.9444C76.5051 39.9182 76.5522 39.881 76.5871 39.8327C76.6227 39.7845 76.6431 39.7303 76.6484 39.6702L76.6652 39.4781C76.6523 39.4869 76.6309 39.4943 76.6012 39.5003C76.5722 39.5063 76.5397 39.5109 76.5037 39.5142C76.4678 39.5175 76.4323 39.5201 76.3972 39.522C76.3621 39.5239 76.3316 39.5255 76.3059 39.5268C76.2479 39.5296 76.1955 39.5378 76.1486 39.5516C76.1018 39.5653 76.0639 39.5869 76.0349 39.6165C76.006 39.6453 75.9894 39.6845 75.9851 39.734C75.9789 39.8048 76 39.8605 76.0485 39.9011C76.097 39.9417 76.1612 39.9655 76.2412 39.9725ZM78.3233 38.7633L78.2973 39.0605L77.3601 38.9785L77.3861 38.6813L78.3233 38.7633ZM77.6517 38.311L78.0359 38.3446L77.902 39.875C77.8974 39.9267 77.9018 39.967 77.9149 39.9959C77.9288 40.0242 77.9485 40.0445 77.9738 40.0567C77.9991 40.0689 78.0276 40.0764 78.0595 40.0791C78.0835 40.0812 78.1056 40.0814 78.1258 40.0796C78.1466 40.0779 78.1624 40.076 78.1733 40.0741L78.2117 40.3801C78.1906 40.3854 78.1606 40.3906 78.1216 40.3958C78.0834 40.401 78.037 40.4019 77.9823 40.3986C77.8859 40.393 77.8005 40.3709 77.7261 40.3323C77.6519 40.293 77.5951 40.2374 77.5557 40.1655C77.5171 40.0937 77.5026 40.0069 77.5122 39.9051L77.6517 38.311ZM79.1927 40.5141C79.0335 40.5002 78.8986 40.4531 78.788 40.3728C78.6774 40.2925 78.5954 40.1866 78.542 40.0551C78.4894 39.9235 78.4704 39.7736 78.4851 39.6052C78.4999 39.4368 78.5446 39.2921 78.6194 39.171C78.6948 39.05 78.794 38.9596 78.9169 38.8997C79.0397 38.8399 79.1808 38.817 79.34 38.8309C79.4992 38.8448 79.6341 38.8919 79.7447 38.9722C79.8553 39.0524 79.9369 39.1587 79.9895 39.2909C80.0428 39.4232 80.0621 39.5735 80.0474 39.7419C80.0326 39.9103 79.9876 40.0546 79.9121 40.1749C79.8375 40.2953 79.7387 40.3854 79.6158 40.4452C79.4929 40.5051 79.3519 40.528 79.1927 40.5141ZM79.2218 40.2065C79.3081 40.214 79.3823 40.1967 79.4445 40.1543C79.5067 40.1113 79.5555 40.0507 79.5909 39.9725C79.6269 39.8944 79.6493 39.8058 79.658 39.7067C79.6667 39.607 79.6601 39.5155 79.6381 39.4323C79.6169 39.3485 79.5794 39.28 79.5256 39.2268C79.4718 39.1736 79.4018 39.1432 79.3154 39.1357C79.227 39.1279 79.1513 39.1455 79.0884 39.1885C79.0262 39.2315 78.977 39.2925 78.9409 39.3713C78.9055 39.4495 78.8835 39.5385 78.8747 39.6382C78.8661 39.7373 78.8723 39.8284 78.8936 39.9115C78.9155 39.9947 78.9534 40.0629 79.0072 40.1161C79.0618 40.1686 79.1333 40.1988 79.2218 40.2065ZM80.3027 40.5791L80.4453 38.949L80.8178 38.9816L80.794 39.2533L80.811 39.2547C80.849 39.1632 80.9063 39.0952 80.9829 39.0505C81.0603 39.0053 81.1457 38.9867 81.2391 38.9949C81.2603 38.9967 81.2839 38.9999 81.3099 39.0043C81.3367 39.0081 81.3587 39.0125 81.3761 39.0176L81.3452 39.371C81.3294 39.3639 81.304 39.3567 81.269 39.3493C81.2348 39.3414 81.2014 39.3359 81.1688 39.3331C81.0988 39.327 81.0345 39.3367 80.9759 39.3622C80.9181 39.3871 80.871 39.4247 80.8345 39.475C80.7981 39.5252 80.7768 39.585 80.7707 39.6544L80.6869 40.6127L80.3027 40.5791ZM82.8809 39.5962L82.5274 39.6038C82.5206 39.5676 82.5061 39.5328 82.4841 39.4995C82.4628 39.4663 82.4324 39.4383 82.393 39.4156C82.3537 39.3929 82.3043 39.379 82.2448 39.3738C82.1649 39.3668 82.0962 39.3782 82.0387 39.4081C81.9818 39.4381 81.9514 39.4807 81.9473 39.5359C81.9424 39.5833 81.9564 39.6234 81.9891 39.6562C82.0226 39.689 82.0799 39.7187 82.161 39.745L82.4339 39.8288C82.5852 39.8755 82.6952 39.9383 82.7639 40.017C82.8333 40.0958 82.8632 40.1936 82.8537 40.3104C82.8441 40.4129 82.8061 40.5008 82.7398 40.5742C82.6742 40.6469 82.5872 40.7006 82.4786 40.7353C82.3701 40.77 82.2479 40.7814 82.112 40.7695C81.9125 40.752 81.7556 40.6962 81.6412 40.6021C81.5268 40.5073 81.4646 40.3838 81.4543 40.2318L81.8321 40.2285C81.8427 40.3035 81.8739 40.3622 81.9258 40.4046C81.9777 40.4469 82.0479 40.4719 82.1363 40.4797C82.2276 40.4877 82.3025 40.4753 82.3609 40.4426C82.4201 40.41 82.4521 40.3661 82.4569 40.3109C82.461 40.2642 82.4464 40.2241 82.4129 40.1905C82.3802 40.157 82.3271 40.1288 82.2535 40.106L81.9806 40.0233C81.827 39.9771 81.7162 39.9121 81.6479 39.8284C81.5797 39.7441 81.5512 39.6425 81.5623 39.5237C81.5704 39.4231 81.6052 39.3385 81.6668 39.2697C81.7292 39.2003 81.8117 39.1498 81.9143 39.1181C82.0177 39.0858 82.1344 39.0754 82.2646 39.0868C82.4556 39.1035 82.6024 39.1573 82.705 39.2483C82.8082 39.3393 82.8669 39.4553 82.8809 39.5962ZM83.3625 40.8703C83.2981 40.8647 83.2449 40.8372 83.2028 40.7879C83.1608 40.7386 83.143 40.6815 83.1494 40.6164C83.1543 40.5527 83.1817 40.5002 83.2316 40.4589C83.2816 40.4177 83.3387 40.3999 83.4031 40.4055C83.4654 40.4109 83.5175 40.4383 83.5596 40.4876C83.6023 40.537 83.6212 40.5935 83.6164 40.6573C83.6119 40.7004 83.5971 40.7387 83.5721 40.7721C83.5478 40.8056 83.517 40.8315 83.4798 40.8496C83.4433 40.8671 83.4042 40.874 83.3625 40.8703ZM84.7516 39.1108L84.7804 38.7807L86.5146 38.9324L86.4857 39.2625L85.8139 39.2037L85.6526 41.0472L85.2621 41.013L85.4234 39.1695L84.7516 39.1108ZM87.1095 40.2122L87.0259 41.1673L86.6417 41.1337L86.8319 38.9602L87.2076 38.9931L87.1358 39.8134L87.1549 39.8151C87.2012 39.7265 87.2666 39.6591 87.3512 39.613C87.4366 39.5663 87.5415 39.5484 87.666 39.5593C87.7792 39.5692 87.8759 39.6016 87.9559 39.6563C88.036 39.7111 88.095 39.7861 88.133 39.8814C88.1717 39.9768 88.1853 40.0903 88.1738 40.2219L88.083 41.2598L87.6988 41.2262L87.7844 40.2477C87.794 40.138 87.7731 40.0503 87.7219 39.9845C87.6714 39.918 87.5955 39.8804 87.4943 39.8715C87.4264 39.8656 87.3643 39.8751 87.3079 39.9001C87.2523 39.9245 87.2069 39.963 87.1716 40.0155C87.1371 40.0681 87.1164 40.1336 87.1095 40.2122ZM89.1935 41.389C89.03 41.3747 88.8919 41.3284 88.7789 41.2501C88.6668 41.1711 88.5844 41.0663 88.5316 40.9355C88.479 40.8039 88.4601 40.6529 88.475 40.4824C88.4897 40.3147 88.5344 40.1704 88.6092 40.0493C88.6847 39.9276 88.7832 39.8364 88.9047 39.7757C89.0263 39.7143 89.1649 39.6905 89.3206 39.7041C89.421 39.7129 89.5144 39.7374 89.6007 39.7778C89.6878 39.8175 89.7627 39.8739 89.8255 39.9472C89.8889 40.0204 89.9359 40.1108 89.9664 40.2183C89.997 40.325 90.0061 40.4499 89.9935 40.5928L89.9832 40.7106L88.6471 40.5937L88.6697 40.3348L89.6376 40.4194C89.6434 40.3458 89.6332 40.279 89.607 40.2189C89.581 40.1582 89.5415 40.1087 89.4885 40.0706C89.4362 40.0325 89.3733 40.0103 89.2997 40.0038C89.2212 39.9969 89.1505 40.01 89.0877 40.043C89.025 40.0753 88.9743 40.1208 88.9357 40.1794C88.8978 40.2374 88.8754 40.3028 88.8683 40.3757L88.8485 40.6017C88.8402 40.6965 88.8504 40.7794 88.8791 40.8504C88.9079 40.9206 88.9519 40.9765 89.011 41.018C89.0702 41.0588 89.1415 41.0829 89.225 41.0902C89.2809 41.0951 89.3321 41.0918 89.3788 41.0801C89.4255 41.0678 89.4668 41.0476 89.5028 41.0193C89.5388 40.9911 89.5673 40.9548 89.5883 40.9103L89.9435 40.982C89.9125 41.0748 89.8621 41.1538 89.7923 41.219C89.7232 41.2835 89.6377 41.3309 89.536 41.3613C89.4343 41.3909 89.3201 41.4001 89.1935 41.389ZM91.6957 41.608C91.5365 41.594 91.4016 41.5469 91.291 41.4667C91.1804 41.3864 91.0984 41.2805 91.045 41.1489C90.9924 41.0174 90.9734 40.8675 90.9882 40.6991C91.0029 40.5307 91.0476 40.386 91.1224 40.2649C91.1979 40.1439 91.297 40.0534 91.4199 39.9936C91.5428 39.9338 91.6838 39.9108 91.843 39.9248C92.0022 39.9387 92.1371 39.9858 92.2477 40.066C92.3583 40.1463 92.4399 40.2525 92.4925 40.3847C92.5458 40.517 92.5651 40.6674 92.5504 40.8358C92.5356 41.0041 92.4906 41.1485 92.4152 41.2688C92.3405 41.3892 92.2417 41.4793 92.1188 41.5391C91.996 41.5989 91.8549 41.6219 91.6957 41.608ZM91.7248 41.3004C91.8111 41.3079 91.8853 41.2905 91.9475 41.2482C92.0097 41.2052 92.0585 41.1446 92.0939 41.0664C92.1299 40.9883 92.1523 40.8997 92.161 40.8006C92.1697 40.7009 92.1631 40.6094 92.1411 40.5262C92.12 40.4423 92.0825 40.3738 92.0287 40.3206C91.9748 40.2675 91.9048 40.2371 91.8185 40.2295C91.73 40.2218 91.6543 40.2394 91.5914 40.2824C91.5292 40.3254 91.48 40.3864 91.4439 40.4652C91.4085 40.5434 91.3865 40.6323 91.3777 40.7321C91.3691 40.8311 91.3754 40.9222 91.3966 41.0054C91.4186 41.0886 91.4564 41.1568 91.5103 41.2099C91.5648 41.2625 91.6363 41.2926 91.7248 41.3004ZM93.2735 40.7514L93.1899 41.7066L92.8057 41.673L92.9483 40.0428L93.3155 40.075L93.2913 40.352L93.3104 40.3536C93.3559 40.2656 93.422 40.1984 93.5088 40.1518C93.5963 40.1052 93.7009 40.0873 93.8226 40.0979C93.9351 40.1078 94.0309 40.1404 94.1102 40.1958C94.1902 40.2513 94.2492 40.3267 94.2872 40.422C94.3259 40.5173 94.3392 40.6301 94.3271 40.7602L94.2363 41.7981L93.8521 41.7645L93.9377 40.786C93.9473 40.6771 93.9264 40.5893 93.8752 40.5228C93.8247 40.4564 93.7499 40.4188 93.6509 40.4102C93.5837 40.4043 93.5226 40.4139 93.4676 40.439C93.4134 40.4635 93.3691 40.5021 93.3345 40.5547C93.3007 40.6073 93.2803 40.6729 93.2735 40.7514ZM95.3458 41.9273C95.1823 41.913 95.0441 41.8667 94.9312 41.7884C94.8191 41.7094 94.7366 41.6045 94.6839 41.4737C94.6313 41.3422 94.6124 41.1912 94.6273 41.0207C94.642 40.853 94.6867 40.7086 94.7614 40.5875C94.837 40.4658 94.9355 40.3746 95.057 40.314C95.1786 40.2526 95.3172 40.2287 95.4729 40.2423C95.5733 40.2511 95.6667 40.2757 95.753 40.316C95.8401 40.3557 95.915 40.4122 95.9777 40.4854C96.0412 40.5587 96.0882 40.6491 96.1187 40.7565C96.1493 40.8633 96.1583 40.9881 96.1458 41.1311L96.1355 41.2489L94.7994 41.132L94.822 40.873L95.7899 40.9577C95.7956 40.8841 95.7854 40.8172 95.7593 40.7572C95.7333 40.6964 95.6938 40.647 95.6408 40.6089C95.5885 40.5708 95.5256 40.5485 95.452 40.5421C95.3734 40.5352 95.3028 40.5483 95.24 40.5813C95.1773 40.6136 95.1266 40.659 95.088 40.7177C95.0501 40.7757 95.0276 40.8411 95.0206 40.9139L95.0008 41.14C94.9925 41.2348 95.0027 41.3177 95.0314 41.3886C95.0602 41.4589 95.1042 41.5148 95.1633 41.5563C95.2224 41.5971 95.2938 41.6212 95.3772 41.6285C95.4331 41.6334 95.4844 41.63 95.5311 41.6184C95.5778 41.6061 95.6191 41.5858 95.6551 41.5576C95.6911 41.5294 95.7195 41.493 95.7406 41.4485L96.0957 41.5202C96.0648 41.6131 96.0144 41.6921 95.9445 41.7572C95.8754 41.8218 95.79 41.8692 95.6883 41.8995C95.5866 41.9291 95.4724 41.9384 95.3458 41.9273ZM97.7917 40.9008L97.4382 40.9083C97.4314 40.8721 97.4169 40.8373 97.3949 40.804C97.3736 40.7708 97.3432 40.7428 97.3039 40.7201C97.2645 40.6974 97.2151 40.6835 97.1557 40.6783C97.0757 40.6713 97.007 40.6828 96.9495 40.7127C96.8927 40.7426 96.8622 40.7852 96.8581 40.8405C96.8532 40.8878 96.8672 40.9279 96.9 40.9607C96.9334 40.9936 96.9907 41.0232 97.0719 41.0495L97.3447 41.1333C97.496 41.18 97.606 41.2428 97.6747 41.3215C97.7441 41.4003 97.7741 41.4981 97.7646 41.6149C97.7549 41.7174 97.7169 41.8054 97.6506 41.8787C97.585 41.9514 97.498 42.0051 97.3895 42.0398C97.2809 42.0745 97.1587 42.0859 97.0229 42.074C96.8233 42.0566 96.6664 42.0008 96.552 41.9066C96.4377 41.8118 96.3754 41.6884 96.3652 41.5363L96.743 41.533C96.7535 41.6081 96.7847 41.6668 96.8366 41.7091C96.8885 41.7514 96.9587 41.7765 97.0471 41.7842C97.1384 41.7922 97.2133 41.7798 97.2718 41.7472C97.3309 41.7146 97.3629 41.6707 97.3678 41.6155C97.3718 41.5688 97.3572 41.5286 97.3238 41.4951C97.291 41.4615 97.2379 41.4334 97.1643 41.4105L96.8914 41.3278C96.7379 41.2816 96.627 41.2166 96.5587 41.133C96.4905 41.0486 96.462 40.947 96.4731 40.8282C96.4812 40.7277 96.516 40.643 96.5777 40.5743C96.6401 40.5049 96.7225 40.4543 96.8251 40.4227C96.9285 40.3904 97.0452 40.3799 97.1754 40.3913C97.3665 40.408 97.5132 40.4618 97.6158 40.5528C97.7191 40.6438 97.7777 40.7598 97.7917 40.9008ZM99.1164 42.2251L98.7984 40.5547L99.19 40.5889L99.3763 41.7602L99.3911 41.7615L99.7843 40.6409L100.172 40.6748L100.365 41.8403L100.381 41.8417L100.763 40.7265L101.156 40.7609L100.551 42.3506L100.151 42.3156L99.9419 41.1873L99.9196 41.1853L99.5175 42.2602L99.1164 42.2251ZM101.749 41.4929L101.665 42.4481L101.281 42.4145L101.471 40.241L101.847 40.2738L101.775 41.0942L101.794 41.0959C101.841 41.0073 101.906 40.9399 101.991 40.8938C102.076 40.8471 102.181 40.8292 102.305 40.8401C102.419 40.85 102.515 40.8823 102.595 40.9371C102.675 40.9919 102.734 41.0669 102.772 41.1622C102.811 41.2576 102.825 41.371 102.813 41.5026L102.722 42.5406L102.338 42.507L102.424 41.5285C102.433 41.4188 102.413 41.3311 102.361 41.2653C102.311 41.1988 102.235 41.1612 102.134 41.1523C102.066 41.1464 102.004 41.1559 101.947 41.1809C101.892 41.2053 101.846 41.2437 101.811 41.2963C101.776 41.3488 101.756 41.4144 101.749 41.4929ZM103.822 42.6689C103.663 42.655 103.528 42.6079 103.418 42.5276C103.307 42.4474 103.225 42.3414 103.172 42.2099C103.119 42.0784 103.1 41.9284 103.115 41.76C103.129 41.5916 103.174 41.4469 103.249 41.3258C103.324 41.2048 103.424 41.1144 103.546 41.0545C103.669 40.9947 103.81 40.9718 103.97 40.9857C104.129 40.9996 104.264 41.0467 104.374 41.127C104.485 41.2072 104.566 41.3135 104.619 41.4457C104.672 41.578 104.692 41.7283 104.677 41.8967C104.662 42.0651 104.617 42.2094 104.542 42.3297C104.467 42.4501 104.368 42.5402 104.245 42.6C104.122 42.6599 103.981 42.6828 103.822 42.6689ZM103.851 42.3613C103.938 42.3689 104.012 42.3515 104.074 42.3091C104.136 42.2661 104.185 42.2055 104.22 42.1273C104.256 42.0492 104.279 41.9606 104.288 41.8616C104.296 41.7618 104.29 41.6703 104.268 41.5871C104.246 41.5033 104.209 41.4348 104.155 41.3816C104.101 41.3284 104.031 41.298 103.945 41.2905C103.857 41.2827 103.781 41.3003 103.718 41.3433C103.656 41.3864 103.607 41.4473 103.57 41.5261C103.535 41.6043 103.513 41.6933 103.504 41.793C103.496 41.8921 103.502 41.9832 103.523 42.0663C103.545 42.1495 103.583 42.2177 103.637 42.2709C103.691 42.3234 103.763 42.3536 103.851 42.3613ZM27.0659 40.9695C26.9378 40.9583 26.8261 40.9153 26.7307 40.8407C26.6353 40.766 26.5637 40.6635 26.5159 40.5332C26.4681 40.4028 26.4521 40.2481 26.4677 40.0691C26.4836 39.888 26.5267 39.7377 26.597 39.6184C26.6681 39.4984 26.7574 39.4111 26.8648 39.3563C26.9723 39.3008 27.0887 39.2786 27.2139 39.2895C27.3095 39.2979 27.3866 39.321 27.4453 39.359C27.504 39.3962 27.5495 39.439 27.5816 39.4875C27.6138 39.5352 27.6381 39.5797 27.6544 39.6211L27.6703 39.6225L27.7415 38.8095L28.1267 38.8432L27.9365 41.0168L27.5587 40.9837L27.5812 40.7269L27.5578 40.7248C27.5346 40.7627 27.5022 40.8023 27.4608 40.8436C27.4195 40.8842 27.3667 40.9174 27.3024 40.9431C27.2381 40.9689 27.1593 40.9776 27.0659 40.9695ZM27.2007 40.6636C27.282 40.6708 27.3533 40.6549 27.4144 40.616C27.4756 40.5765 27.5246 40.5184 27.5612 40.4417C27.5979 40.3651 27.6208 40.2741 27.63 40.1686C27.6393 40.0632 27.6324 39.9703 27.6095 39.8899C27.5873 39.8095 27.5494 39.7452 27.4959 39.6971C27.4431 39.649 27.3753 39.6213 27.2925 39.614C27.2069 39.6065 27.1335 39.6226 27.0723 39.6621C27.0111 39.7017 26.9625 39.7595 26.9266 39.8355C26.8908 39.9115 26.8684 40.0001 26.8595 40.1012C26.8506 40.2031 26.8572 40.2953 26.8792 40.3778C26.902 40.4596 26.94 40.5261 26.9933 40.5771C27.0473 40.6274 27.1165 40.6563 27.2007 40.6636ZM29.0648 41.1476C28.9014 41.1333 28.7632 41.087 28.6503 41.0086C28.5381 40.9297 28.4557 40.8248 28.403 40.694C28.3503 40.5625 28.3314 40.4115 28.3464 40.2409C28.361 40.0733 28.4057 39.9289 28.4805 39.8078C28.556 39.6861 28.6546 39.5949 28.7761 39.5342C28.8976 39.4729 29.0363 39.449 29.1919 39.4626C29.2924 39.4714 29.3858 39.496 29.4721 39.5363C29.5591 39.576 29.6341 39.6325 29.6968 39.7057C29.7603 39.779 29.8072 39.8693 29.8378 39.9768C29.8684 40.0836 29.8774 40.2084 29.8649 40.3513L29.8546 40.4691L28.5184 40.3522L28.5411 40.0933L29.509 40.178C29.5147 40.1043 29.5045 40.0375 29.4784 39.9774C29.4523 39.9167 29.4128 39.8673 29.3598 39.8291C29.3076 39.791 29.2446 39.7688 29.171 39.7623C29.0925 39.7555 29.0219 39.7685 28.9591 39.8015C28.8964 39.8338 28.8457 39.8793 28.807 39.938C28.7692 39.996 28.7467 40.0614 28.7396 40.1342L28.7198 40.3602C28.7115 40.455 28.7218 40.5379 28.7505 40.6089C28.7793 40.6791 28.8232 40.735 28.8823 40.7765C28.9415 40.8174 29.0128 40.8414 29.0963 40.8487C29.1522 40.8536 29.2035 40.8503 29.2501 40.8387C29.2968 40.8264 29.3382 40.8061 29.3741 40.7779C29.4101 40.7496 29.4386 40.7133 29.4596 40.6688L29.8148 40.7405C29.7839 40.8333 29.7335 40.9123 29.6636 40.9775C29.5945 41.042 29.5091 41.0895 29.4073 41.1198C29.3056 41.1494 29.1915 41.1586 29.0648 41.1476ZM30.1175 41.2076L30.2601 39.5774L30.6273 39.6096L30.6031 39.8866L30.6222 39.8882C30.6643 39.7978 30.7269 39.7299 30.81 39.6844C30.8932 39.6382 30.9893 39.6198 31.0983 39.6294C31.2086 39.639 31.2993 39.6741 31.3703 39.7345C31.4421 39.7942 31.4895 39.8714 31.5126 39.9661L31.5296 39.9676C31.5736 39.8802 31.6407 39.8134 31.7311 39.7671C31.8221 39.7202 31.9268 39.7019 32.0449 39.7122C32.1949 39.7253 32.3132 39.7834 32.3997 39.8865C32.4862 39.9896 32.5215 40.1321 32.5056 40.3139L32.4099 41.4081L32.0246 41.3744L32.1151 40.3397C32.124 40.2385 32.1036 40.1622 32.0539 40.1108C32.0043 40.0587 31.9405 40.0292 31.8627 40.0224C31.77 40.0143 31.695 40.037 31.6375 40.0904C31.5809 40.1432 31.5485 40.2156 31.5405 40.3076L31.4515 41.3243L31.0748 41.2913L31.1667 40.2407C31.1741 40.1565 31.1545 40.087 31.1079 40.0323C31.0621 39.9777 30.9985 39.9468 30.9171 39.9397C30.8619 39.9349 30.8105 39.9446 30.7627 39.969C30.715 39.9926 30.6755 40.0287 30.6441 40.0773C30.6129 40.1252 30.5943 40.1827 30.5884 40.2499L30.5017 41.2412L30.1175 41.2076ZM33.2658 41.5162C33.1625 41.5071 33.0711 41.4806 32.9915 41.4366C32.9128 41.3919 32.8525 41.331 32.8108 41.2539C32.7697 41.1769 32.7539 41.085 32.7632 40.9781C32.7713 40.8862 32.7949 40.8116 32.8341 40.7544C32.8734 40.6972 32.9239 40.6532 32.9858 40.6222C33.0477 40.5913 33.1162 40.5698 33.1914 40.5579C33.2674 40.5453 33.3453 40.5382 33.4253 40.5366C33.5217 40.5351 33.6 40.533 33.6601 40.5304C33.7202 40.5272 33.7645 40.5182 33.7929 40.5036C33.822 40.4883 33.8382 40.4623 33.8414 40.4255L33.842 40.4191C33.849 40.3391 33.8307 40.2752 33.7871 40.2272C33.7436 40.1791 33.6772 40.1512 33.5881 40.1434C33.4939 40.1352 33.4175 40.1492 33.3587 40.1854C33.3007 40.2217 33.2596 40.2669 33.2356 40.3211L32.8814 40.2388C32.9183 40.1422 32.9723 40.0635 33.0432 40.0027C33.1142 39.9412 33.1982 39.8979 33.2952 39.8729C33.3922 39.8472 33.4977 39.8393 33.6116 39.8493C33.6902 39.8561 33.7676 39.8722 33.8438 39.8974C33.92 39.9226 33.9884 39.9592 34.0491 40.0073C34.1098 40.0547 34.1565 40.1162 34.1891 40.1917C34.2224 40.2674 34.2343 40.3593 34.2249 40.4676L34.1294 41.5586L33.7601 41.5263L33.7797 41.3023L33.7669 41.3012C33.7396 41.3445 33.703 41.384 33.6571 41.4199C33.612 41.4552 33.5565 41.4821 33.4907 41.5006C33.4257 41.5184 33.3507 41.5236 33.2658 41.5162ZM33.3903 41.2426C33.4674 41.2493 33.5356 41.24 33.5949 41.2145C33.6542 41.1883 33.7013 41.1511 33.7362 41.1028C33.7718 41.0546 33.7922 41.0004 33.7975 40.9403L33.8143 40.7482C33.8014 40.757 33.78 40.7644 33.7503 40.7704C33.7212 40.7764 33.6888 40.7811 33.6528 40.7843C33.6169 40.7876 33.5814 40.7902 33.5463 40.7921C33.5112 40.794 33.4807 40.7957 33.4549 40.797C33.397 40.7997 33.3445 40.808 33.2977 40.8217C33.2509 40.8354 33.213 40.8571 33.184 40.8866C33.1551 40.9155 33.1385 40.9546 33.1342 41.0042C33.128 41.0749 33.1491 41.1306 33.1976 41.1712C33.2461 41.2118 33.3103 41.2356 33.3903 41.2426ZM34.9835 40.6708L34.8999 41.626L34.5157 41.5924L34.6583 39.9622L35.0255 39.9944L35.0013 40.2714L35.0204 40.273C35.0659 40.185 35.132 40.1177 35.2188 40.0712C35.3063 40.0246 35.4109 40.0067 35.5326 40.0173C35.6451 40.0272 35.741 40.0598 35.8202 40.1152C35.9002 40.1707 35.9592 40.2461 35.9972 40.3414C36.0359 40.4367 36.0492 40.5495 36.0371 40.6796L35.9463 41.7175L35.5622 41.6839L35.6478 40.7054C35.6573 40.5965 35.6365 40.5087 35.5852 40.4422C35.5347 40.3758 35.4599 40.3382 35.3609 40.3295C35.2937 40.3237 35.2326 40.3333 35.1776 40.3584C35.1234 40.3829 35.0791 40.4215 35.0445 40.474C35.0107 40.5267 34.9903 40.5923 34.9835 40.6708ZM36.9393 41.8333C36.8113 41.8221 36.6995 41.7791 36.6041 41.7045C36.5087 41.6298 36.4371 41.5273 36.3893 41.397C36.3415 41.2666 36.3255 41.1119 36.3412 40.9329C36.357 40.7518 36.4001 40.6016 36.4704 40.4822C36.5415 40.3623 36.6308 40.2749 36.7382 40.2201C36.8458 40.1647 36.9621 40.1424 37.0874 40.1534C37.1829 40.1617 37.26 40.1849 37.3187 40.2228C37.3775 40.26 37.4229 40.3028 37.455 40.3513C37.4872 40.399 37.5115 40.4436 37.5278 40.4849L37.5437 40.4863L37.6149 39.6734L38.0001 39.7071L37.81 41.8806L37.4321 41.8475L37.4546 41.5907L37.4313 41.5886C37.408 41.6265 37.3756 41.6661 37.3342 41.7074C37.2929 41.748 37.2401 41.7812 37.1758 41.8069C37.1115 41.8327 37.0327 41.8415 36.9393 41.8333ZM37.0741 41.5275C37.1555 41.5346 37.2267 41.5187 37.2879 41.4799C37.3491 41.4403 37.398 41.3822 37.4346 41.3056C37.4713 41.2289 37.4942 41.1379 37.5034 41.0325C37.5127 40.927 37.5058 40.8341 37.4829 40.7537C37.4607 40.6733 37.4229 40.609 37.3693 40.5609C37.3165 40.5128 37.2487 40.4851 37.1659 40.4778C37.0803 40.4704 37.0069 40.4864 36.9457 40.5259C36.8845 40.5655 36.8359 40.6233 36.8001 40.6993C36.7642 40.7753 36.7418 40.8639 36.733 40.965C36.724 41.0669 36.7306 41.1591 36.7526 41.2416C36.7754 41.3234 36.8134 41.3899 36.8667 41.4409C36.9208 41.4912 36.9899 41.5201 37.0741 41.5275ZM40.354 40.8947L40.0004 40.9023C39.9936 40.866 39.9792 40.8313 39.9571 40.798C39.9358 40.7647 39.9055 40.7368 39.8661 40.7141C39.8267 40.6914 39.7773 40.6774 39.7179 40.6722C39.6379 40.6652 39.5692 40.6767 39.5117 40.7066C39.4549 40.7366 39.4244 40.7792 39.4203 40.8344C39.4155 40.8818 39.4294 40.9218 39.4622 40.9546C39.4957 40.9875 39.553 41.0171 39.6341 41.0435L39.9069 41.1272C40.0583 41.174 40.1683 41.2367 40.237 41.3155C40.3064 41.3942 40.3363 41.492 40.3268 41.6088C40.3171 41.7114 40.2791 41.7993 40.2128 41.8726C40.1473 41.9453 40.0602 41.999 39.9517 42.0337C39.8431 42.0684 39.7209 42.0798 39.5851 42.068C39.3856 42.0505 39.2286 41.9947 39.1142 41.9006C38.9999 41.8057 38.9376 41.6823 38.9274 41.5303L39.3052 41.527C39.3157 41.602 39.347 41.6607 39.3989 41.703C39.4508 41.7454 39.5209 41.7704 39.6094 41.7781C39.7007 41.7861 39.7755 41.7738 39.834 41.7411C39.8932 41.7085 39.9252 41.6646 39.93 41.6094C39.9341 41.5627 39.9194 41.5226 39.886 41.489C39.8533 41.4555 39.8001 41.4273 39.7266 41.4045L39.4536 41.3218C39.3001 41.2755 39.1892 41.2106 39.121 41.1269C39.0528 41.0425 39.0242 40.9409 39.0353 40.8221C39.0434 40.7216 39.0783 40.637 39.1399 40.5682C39.2023 40.4988 39.2848 40.4483 39.3874 40.4166C39.4907 40.3843 39.6075 40.3738 39.7377 40.3852C39.9287 40.4019 40.0755 40.4558 40.178 40.5467C40.2813 40.6378 40.3399 40.7538 40.354 40.8947ZM40.5474 42.7361L40.7435 40.4946L41.1213 40.5277L41.0977 40.7972L41.12 40.7992C41.1433 40.7613 41.1749 40.7216 41.2149 40.6802C41.255 40.6381 41.3071 40.6038 41.3715 40.5774C41.4359 40.5502 41.5158 40.5408 41.6114 40.5492C41.7373 40.5602 41.848 40.6023 41.9436 40.6755C42.0399 40.7481 42.1123 40.8496 42.1608 40.9801C42.21 41.1099 42.2267 41.2653 42.2109 41.4464C42.1952 41.6254 42.1525 41.775 42.0829 41.8951C42.0132 42.0152 41.9249 42.1037 41.8179 42.1606C41.711 42.2176 41.5935 42.2405 41.4654 42.2293C41.372 42.2211 41.2959 42.1988 41.2371 42.1622C41.1783 42.1257 41.132 42.0839 41.0984 42.0367C41.0655 41.9889 41.0405 41.9443 41.0235 41.9029L41.0075 41.9015L40.9316 42.7697L40.5474 42.7361ZM41.0489 41.3426C41.0397 41.4481 41.0465 41.5417 41.0693 41.6235C41.0928 41.7054 41.1309 41.7712 41.1836 41.8207C41.237 41.8696 41.3045 41.8976 41.3858 41.9047C41.4707 41.9121 41.5438 41.8957 41.6051 41.8554C41.6664 41.8145 41.7151 41.7556 41.751 41.6789C41.7877 41.6016 41.8105 41.5119 41.8194 41.4101C41.8283 41.3089 41.8216 41.2178 41.7995 41.1367C41.7774 41.0556 41.7396 40.9903 41.6862 40.9407C41.6328 40.8911 41.5633 40.8626 41.4777 40.8551C41.3956 40.8479 41.324 40.8634 41.2629 40.9015C41.2018 40.9397 41.153 40.9964 41.1165 41.0716C41.0807 41.1469 41.0582 41.2372 41.0489 41.3426ZM43.1876 42.3831C43.0242 42.3688 42.886 42.3225 42.7731 42.2442C42.6609 42.1652 42.5785 42.0604 42.5258 41.9296C42.4731 41.798 42.4543 41.647 42.4692 41.4765C42.4838 41.3088 42.5286 41.1645 42.6033 41.0434C42.6788 40.9217 42.7774 40.8305 42.8989 40.7698C43.0205 40.7084 43.1591 40.6846 43.3147 40.6982C43.4152 40.707 43.5086 40.7315 43.5949 40.7719C43.682 40.8116 43.7569 40.868 43.8196 40.9413C43.8831 41.0145 43.9301 41.1049 43.9606 41.2124C43.9912 41.3192 44.0002 41.444 43.9877 41.5869L43.9774 41.7047L42.6412 41.5878L42.6639 41.3289L43.6318 41.4135C43.6375 41.3399 43.6273 41.2731 43.6012 41.213C43.5751 41.1523 43.5356 41.1029 43.4826 41.0647C43.4304 41.0266 43.3674 41.0044 43.2939 40.9979C43.2153 40.9911 43.1447 41.0041 43.0819 41.0371C43.0192 41.0694 42.9685 41.1149 42.9299 41.1735C42.892 41.2315 42.8695 41.297 42.8624 41.3698L42.8427 41.5958C42.8344 41.6906 42.8446 41.7735 42.8733 41.8445C42.9021 41.9147 42.946 41.9706 43.0051 42.0121C43.0643 42.053 43.1356 42.077 43.2191 42.0843C43.275 42.0892 43.3263 42.0859 43.3729 42.0743C43.4196 42.0619 43.461 42.0417 43.497 42.0135C43.5329 41.9852 43.5614 41.9489 43.5824 41.9044L43.9376 41.9761C43.9067 42.0689 43.8563 42.1479 43.7864 42.2131C43.7173 42.2776 43.6319 42.3251 43.5301 42.3554C43.4284 42.385 43.3143 42.3942 43.1876 42.3831ZM44.9592 42.5381C44.7957 42.5238 44.6576 42.4775 44.5446 42.3992C44.4325 42.3202 44.3501 42.2154 44.2973 42.0845C44.2447 41.953 44.2258 41.802 44.2407 41.6315C44.2554 41.4638 44.3001 41.3195 44.3749 41.1984C44.4504 41.0767 44.5489 40.9855 44.6704 40.9248C44.792 40.8634 44.9306 40.8396 45.0863 40.8532C45.1868 40.862 45.2801 40.8865 45.3664 40.9269C45.4535 40.9666 45.5284 41.023 45.5912 41.0963C45.6546 41.1695 45.7016 41.2599 45.7321 41.3674C45.7627 41.4741 45.7718 41.599 45.7593 41.7419L45.7489 41.8597L44.4128 41.7428L44.4354 41.4839L45.4033 41.5685C45.4091 41.4949 45.3989 41.4281 45.3728 41.368C45.3467 41.3073 45.3072 41.2578 45.2542 41.2197C45.2019 41.1816 45.139 41.1594 45.0654 41.1529C44.9869 41.146 44.9162 41.1591 44.8534 41.1921C44.7907 41.2244 44.7401 41.2699 44.7014 41.3285C44.6635 41.3865 44.6411 41.4519 44.634 41.5248L44.6142 41.7508C44.6059 41.8456 44.6161 41.9285 44.6449 41.9995C44.6736 42.0697 44.7176 42.1256 44.7767 42.1671C44.8359 42.2079 44.9072 42.232 44.9907 42.2393C45.0466 42.2442 45.0978 42.2409 45.1445 42.2292C45.1912 42.2169 45.2325 42.1967 45.2685 42.1684C45.3045 42.1402 45.333 42.1039 45.354 42.0594L45.7092 42.1311C45.6782 42.2239 45.6278 42.3029 45.558 42.3681C45.4889 42.4326 45.4034 42.48 45.3017 42.5104C45.2 42.54 45.0858 42.5492 44.9592 42.5381ZM46.6143 42.6797C46.4862 42.6685 46.3745 42.6256 46.2791 42.5509C46.1836 42.4763 46.112 42.3738 46.0643 42.2434C46.0165 42.113 46.0005 41.9584 46.0161 41.7794C46.032 41.5982 46.075 41.448 46.1454 41.3287C46.2165 41.2087 46.3057 41.1213 46.4132 41.0666C46.5207 41.0111 46.6371 40.9888 46.7623 40.9998C46.8578 41.0082 46.9349 41.0313 46.9937 41.0692C47.0524 41.1065 47.0979 41.1493 47.13 41.1977C47.1622 41.2455 47.1864 41.29 47.2028 41.3314L47.2187 41.3328L47.2898 40.5198L47.6751 40.5535L47.4849 42.727L47.1071 42.694L47.1296 42.4371L47.1062 42.4351C47.0829 42.473 47.0506 42.5126 47.0092 42.5539C46.9679 42.5945 46.9151 42.6276 46.8508 42.6534C46.7865 42.6791 46.7077 42.6879 46.6143 42.6797ZM46.749 42.3739C46.8304 42.381 46.9017 42.3652 46.9628 42.3263C47.024 42.2867 47.0729 42.2286 47.1096 42.152C47.1462 42.0754 47.1692 41.9843 47.1784 41.8789C47.1876 41.7735 47.1808 41.6806 47.1579 41.6001C47.1357 41.5198 47.0978 41.4555 47.0443 41.4073C46.9915 41.3592 46.9237 41.3315 46.8409 41.3243C46.7553 41.3168 46.6819 41.3328 46.6206 41.3724C46.5594 41.412 46.5109 41.4697 46.475 41.5457C46.4391 41.6217 46.4168 41.7103 46.4079 41.8115C46.399 41.9134 46.4055 42.0056 46.4276 42.0881C46.4503 42.1699 46.4884 42.2363 46.5417 42.2873C46.5957 42.3377 46.6648 42.3665 46.749 42.3739ZM48.3714 42.5051L48.3473 42.6207C48.3296 42.709 48.304 42.798 48.2705 42.8877C48.2376 42.9782 48.204 43.0612 48.1696 43.1366C48.1352 43.212 48.1076 43.2713 48.0867 43.3144L47.8277 43.2917C47.8414 43.2494 47.86 43.1919 47.8835 43.1191C47.9076 43.0463 47.9319 42.9643 47.9563 42.8731C47.9807 42.7818 47.9999 42.6887 48.0139 42.5936L48.0317 42.4754L48.3714 42.5051ZM50.1582 42.993C49.9954 42.9788 49.8588 42.9308 49.7483 42.8491C49.6386 42.7675 49.5577 42.661 49.5057 42.5295C49.4546 42.3974 49.4362 42.249 49.4506 42.0841C49.4651 41.9185 49.5097 41.7752 49.5845 41.6542C49.6593 41.5324 49.7578 41.4412 49.88 41.3806C50.003 41.3193 50.1441 41.2957 50.3033 41.3096C50.4356 41.3212 50.5506 41.3558 50.6482 41.4136C50.7466 41.4707 50.8223 41.5461 50.8754 41.6398C50.9286 41.7329 50.9543 41.8385 50.9525 41.9567L50.5853 41.9246C50.5773 41.8448 50.5477 41.7762 50.4963 41.719C50.4458 41.6611 50.3742 41.6281 50.2815 41.62C50.203 41.6131 50.1321 41.6283 50.069 41.6655C50.0059 41.7021 49.9543 41.7582 49.9142 41.8338C49.8747 41.9095 49.8502 42.0022 49.8406 42.1118C49.8309 42.2229 49.8388 42.3198 49.8644 42.4026C49.89 42.4847 49.9303 42.5499 49.9852 42.5982C50.041 42.6459 50.1088 42.6732 50.1887 42.6802C50.2453 42.6851 50.2969 42.679 50.3433 42.6616C50.3905 42.6437 50.4311 42.6155 50.4651 42.5771C50.4991 42.5387 50.5244 42.4907 50.5408 42.4329L50.908 42.4651C50.8887 42.5796 50.8458 42.6789 50.7793 42.7629C50.7128 42.8462 50.6268 42.9085 50.5213 42.9499C50.4157 42.9906 50.2947 43.0049 50.1582 42.993ZM51.883 43.1439C51.7238 43.13 51.5889 43.0829 51.4783 43.0026C51.3677 42.9224 51.2857 42.8164 51.2323 42.6849C51.1797 42.5534 51.1607 42.4034 51.1755 42.235C51.1902 42.0666 51.2349 41.9219 51.3097 41.8008C51.3852 41.6798 51.4843 41.5894 51.6072 41.5295C51.7301 41.4697 51.8711 41.4468 52.0303 41.4607C52.1895 41.4746 52.3244 41.5217 52.435 41.602C52.5456 41.6822 52.6272 41.7885 52.6798 41.9207C52.7331 42.053 52.7524 42.2033 52.7377 42.3717C52.7229 42.5401 52.6779 42.6844 52.6025 42.8047C52.5278 42.9251 52.429 43.0152 52.3061 43.075C52.1832 43.1349 52.0422 43.1578 51.883 43.1439ZM51.9121 42.8363C51.9984 42.8439 52.0726 42.8265 52.1348 42.7841C52.197 42.7411 52.2458 42.6805 52.2812 42.6023C52.3172 42.5242 52.3396 42.4356 52.3483 42.3366C52.357 42.2368 52.3504 42.1453 52.3284 42.0621C52.3072 41.9783 52.2698 41.9098 52.2159 41.8566C52.1621 41.8034 52.0921 41.773 52.0058 41.7655C51.9173 41.7577 51.8416 41.7753 51.7787 41.8183C51.7165 41.8614 51.6673 41.9223 51.6312 42.0011C51.5958 42.0793 51.5738 42.1683 51.565 42.268C51.5564 42.3671 51.5627 42.4582 51.5839 42.5413C51.6059 42.6245 51.6437 42.6927 51.6975 42.7459C51.7521 42.7984 51.8236 42.8286 51.9121 42.8363ZM53.4607 42.2874L53.3772 43.2425L52.993 43.2089L53.1356 41.5788L53.5028 41.6109L53.4786 41.8879L53.4977 41.8896C53.5432 41.8016 53.6093 41.7343 53.6961 41.6877C53.7836 41.6412 53.8882 41.6232 54.0098 41.6339C54.1223 41.6437 54.2182 41.6764 54.2975 41.7318C54.3775 41.7872 54.4365 41.8626 54.4745 41.9579C54.5132 42.0533 54.5265 42.166 54.5144 42.2961L54.4236 43.3341L54.0394 43.3005L54.125 42.322C54.1346 42.213 54.1137 42.1253 54.0625 42.0588C54.012 41.9923 53.9372 41.9548 53.8382 41.9461C53.7709 41.9402 53.7099 41.9498 53.6549 41.975C53.6007 41.9995 53.5564 42.038 53.5218 42.0906C53.488 42.1432 53.4676 42.2088 53.4607 42.2874ZM55.7708 41.8093L55.7448 42.1065L54.8077 42.0245L54.8337 41.7273L55.7708 41.8093ZM55.0992 41.357L55.4834 41.3906L55.3495 42.921C55.345 42.9727 55.3493 43.013 55.3624 43.0419C55.3764 43.0702 55.396 43.0905 55.4213 43.1027C55.4466 43.1149 55.4752 43.1224 55.507 43.1252C55.5311 43.1273 55.5532 43.1274 55.5733 43.1256C55.5941 43.1239 55.61 43.122 55.6208 43.1201L55.6593 43.4261C55.6381 43.4314 55.6081 43.4366 55.5691 43.4418C55.5309 43.447 55.4845 43.4479 55.4299 43.4446C55.3334 43.439 55.248 43.4169 55.1737 43.3783C55.0994 43.339 55.0426 43.2834 55.0033 43.2116C54.9646 43.1397 54.9501 43.0529 54.9597 42.9511L55.0992 41.357ZM55.9495 43.4676L56.0921 41.8374L56.4646 41.87L56.4408 42.1417L56.4578 42.1432C56.4958 42.0517 56.5531 41.9836 56.6297 41.939C56.7071 41.8937 56.7925 41.8752 56.8859 41.8834C56.9071 41.8852 56.9307 41.8884 56.9567 41.8928C56.9834 41.8965 57.0055 41.901 57.0229 41.906L56.992 42.2595C56.9762 42.2524 56.9508 42.2452 56.9158 42.2378C56.8816 42.2298 56.8482 42.2244 56.8156 42.2216C56.7456 42.2154 56.6813 42.2251 56.6227 42.2507C56.5649 42.2756 56.5178 42.3131 56.4813 42.3634C56.4448 42.4137 56.4236 42.4735 56.4175 42.5428L56.3337 43.5012L55.9495 43.4676ZM57.7756 43.6594C57.6164 43.6455 57.4815 43.5984 57.3708 43.5181C57.2602 43.4379 57.1782 43.332 57.1249 43.2004C57.0722 43.0689 57.0532 42.9189 57.068 42.7505C57.0827 42.5822 57.1275 42.4374 57.2022 42.3163C57.2777 42.1953 57.3768 42.1049 57.4997 42.0451C57.6226 41.9852 57.7636 41.9623 57.9228 41.9762C58.082 41.9901 58.2169 42.0372 58.3275 42.1175C58.4381 42.1978 58.5197 42.304 58.5723 42.4362C58.6256 42.5685 58.6449 42.7188 58.6302 42.8872C58.6155 43.0556 58.5704 43.2 58.495 43.3203C58.4203 43.4406 58.3215 43.5307 58.1986 43.5906C58.0758 43.6504 57.9347 43.6734 57.7756 43.6594ZM57.8046 43.3518C57.8909 43.3594 57.9652 43.342 58.0273 43.2997C58.0896 43.2566 58.1383 43.196 58.1737 43.1178C58.2098 43.0397 58.2321 42.9511 58.2408 42.8521C58.2495 42.7523 58.2429 42.6608 58.221 42.5776C58.1998 42.4938 58.1623 42.4253 58.1085 42.3721C58.0547 42.3189 57.9846 42.2885 57.8983 42.281C57.8098 42.2733 57.7342 42.2909 57.6712 42.3339C57.609 42.3769 57.5598 42.4378 57.5237 42.5166C57.4883 42.5948 57.4663 42.6838 57.4576 42.7836C57.4489 42.8826 57.4552 42.9737 57.4764 43.0568C57.4984 43.14 57.5363 43.2082 57.5901 43.2614C57.6447 43.314 57.7162 43.3441 57.8046 43.3518ZM59.4599 41.5845L59.2697 43.7581L58.8855 43.7245L59.0757 41.5509L59.4599 41.5845ZM60.1418 43.5349L60.1178 43.6505C60.1001 43.7387 60.0745 43.8278 60.041 43.9175C60.0081 44.008 59.9745 44.091 59.9401 44.1664C59.9057 44.2418 59.878 44.3011 59.8571 44.3442L59.5982 44.3215C59.6119 44.2792 59.6304 44.2217 59.6539 44.1489C59.6781 44.0761 59.7024 43.9941 59.7268 43.9029C59.7512 43.8116 59.7704 43.7184 59.7844 43.6234L59.8022 43.5052L60.1418 43.5349ZM61.6866 44.0027C61.5833 43.9936 61.4918 43.9671 61.4123 43.9231C61.3335 43.8784 61.2732 43.8175 61.2315 43.7404C61.1905 43.6634 61.1746 43.5715 61.184 43.4646C61.192 43.3726 61.2156 43.2981 61.2549 43.2409C61.2941 43.1837 61.3446 43.1397 61.4065 43.1087C61.4684 43.0778 61.5369 43.0563 61.6121 43.0444C61.6881 43.0318 61.7661 43.0247 61.8461 43.0231C61.9424 43.0216 62.0207 43.0195 62.0808 43.0169C62.141 43.0136 62.1852 43.0047 62.2136 42.9901C62.2428 42.9748 62.2589 42.9487 62.2622 42.912L62.2627 42.9056C62.2697 42.8256 62.2514 42.7617 62.2079 42.7136C62.1643 42.6656 62.0979 42.6377 62.0088 42.6299C61.9147 42.6217 61.8382 42.6357 61.7795 42.6719C61.7214 42.7082 61.6804 42.7534 61.6564 42.8076L61.3021 42.7253C61.3391 42.6287 61.393 42.55 61.4639 42.4892C61.5349 42.4277 61.6189 42.3844 61.7159 42.3594C61.813 42.3337 61.9185 42.3258 62.0324 42.3358C62.1109 42.3426 62.1883 42.3587 62.2645 42.3839C62.3407 42.4091 62.4092 42.4457 62.4698 42.4938C62.5306 42.5412 62.5772 42.6027 62.6098 42.6782C62.6432 42.7539 62.6551 42.8458 62.6456 42.9541L62.5501 44.0451L62.1808 44.0128L62.2004 43.7888L62.1877 43.7877C62.1604 43.8309 62.1238 43.8705 62.0778 43.9064C62.0327 43.9417 61.9772 43.9686 61.9114 43.987C61.8464 44.0049 61.7715 44.0101 61.6866 44.0027ZM61.811 43.7291C61.8881 43.7358 61.9563 43.7265 62.0156 43.701C62.0749 43.6748 62.122 43.6376 62.1569 43.5893C62.1925 43.5411 62.2129 43.4869 62.2182 43.4268L62.235 43.2347C62.2221 43.2435 62.2008 43.2509 62.171 43.2569C62.142 43.2629 62.1095 43.2675 62.0736 43.2708C62.0376 43.2741 62.0021 43.2767 61.967 43.2786C61.9319 43.2805 61.9015 43.2821 61.8757 43.2835C61.8177 43.2862 61.7653 43.2945 61.7184 43.3082C61.6716 43.3219 61.6337 43.3436 61.6048 43.3731C61.5759 43.4019 61.5592 43.4411 61.5549 43.4907C61.5487 43.5614 61.5699 43.6171 61.6184 43.6577C61.6669 43.6983 61.7311 43.7221 61.811 43.7291ZM63.4042 43.1573L63.3206 44.1125L62.9365 44.0789L63.0791 42.4487L63.4463 42.4809L63.422 42.7578L63.4411 42.7595C63.4866 42.6715 63.5528 42.6042 63.6395 42.5576C63.727 42.5111 63.8316 42.4932 63.9533 42.5038C64.0658 42.5137 64.1617 42.5463 64.241 42.6017C64.321 42.6572 64.38 42.7326 64.418 42.8279C64.4567 42.9232 64.47 43.036 64.4579 43.1661L64.3671 44.204L63.9829 44.1704L64.0685 43.1919C64.078 43.0829 64.0572 42.9952 64.006 42.9287C63.9555 42.8623 63.8807 42.8247 63.7816 42.816C63.7144 42.8102 63.6533 42.8198 63.5984 42.8449C63.5442 42.8694 63.4998 42.908 63.4653 42.9605C63.4314 43.0132 63.4111 43.0788 63.4042 43.1573ZM65.3601 44.3198C65.232 44.3086 65.1202 44.2656 65.0248 44.191C64.9294 44.1163 64.8578 44.0138 64.81 43.8835C64.7623 43.7531 64.7462 43.5984 64.7619 43.4194C64.7777 43.2383 64.8208 43.088 64.8911 42.9687C64.9622 42.8488 65.0515 42.7614 65.159 42.7066C65.2665 42.6511 65.3829 42.6289 65.5081 42.6398C65.6036 42.6482 65.6807 42.6713 65.7394 42.7093C65.7982 42.7465 65.8436 42.7893 65.8758 42.8378C65.908 42.8855 65.9322 42.93 65.9486 42.9714L65.9645 42.9728L66.0356 42.1598L66.4208 42.1936L66.2307 44.3671L65.8529 44.334L65.8753 44.0772L65.852 44.0751C65.8287 44.113 65.7964 44.1526 65.755 44.1939C65.7136 44.2345 65.6608 44.2677 65.5966 44.2934C65.5323 44.3192 65.4534 44.3279 65.3601 44.3198ZM65.4948 44.0139C65.5762 44.0211 65.6474 44.0052 65.7086 43.9663C65.7698 43.9268 65.8187 43.8687 65.8554 43.792C65.892 43.7154 65.915 43.6244 65.9242 43.5189C65.9334 43.4135 65.9266 43.3206 65.9037 43.2402C65.8815 43.1598 65.8436 43.0955 65.7901 43.0474C65.7372 42.9993 65.6694 42.9716 65.5866 42.9643C65.501 42.9568 65.4276 42.9729 65.3664 43.0124C65.3052 43.052 65.2567 43.1098 65.2208 43.1858C65.1849 43.2618 65.1625 43.3504 65.1537 43.4515C65.1448 43.5534 65.1513 43.6456 65.1733 43.7281C65.1961 43.8099 65.2342 43.8764 65.2874 43.9274C65.3415 43.9777 65.4106 44.0066 65.4948 44.0139ZM67.8476 44.5417C67.7443 44.5326 67.6529 44.5061 67.5733 44.4621C67.4945 44.4174 67.4343 44.3565 67.3925 44.2794C67.3515 44.2024 67.3357 44.1105 67.345 44.0036C67.353 43.9117 67.3767 43.8371 67.4159 43.7799C67.4551 43.7228 67.5057 43.6787 67.5676 43.6478C67.6294 43.6168 67.698 43.5954 67.7732 43.5834C67.8491 43.5708 67.9271 43.5637 68.0071 43.5622C68.1035 43.5606 68.1817 43.5585 68.2418 43.556C68.302 43.5527 68.3463 43.5437 68.3747 43.5291C68.4038 43.5138 68.42 43.4878 68.4232 43.451L68.4237 43.4446C68.4307 43.3647 68.4125 43.3007 68.3689 43.2527C68.3253 43.2047 68.259 43.1767 68.1698 43.1689C68.0757 43.1607 67.9993 43.1747 67.9405 43.2109C67.8824 43.2472 67.8414 43.2924 67.8174 43.3466L67.4632 43.2643C67.5001 43.1677 67.5541 43.0891 67.625 43.0282C67.6959 42.9667 67.7799 42.9234 67.8769 42.8984C67.974 42.8727 68.0795 42.8648 68.1934 42.8748C68.272 42.8817 68.3493 42.8977 68.4255 42.9229C68.5018 42.9481 68.5702 42.9847 68.6309 43.0328C68.6916 43.0802 68.7383 43.1417 68.7709 43.2173C68.8042 43.2929 68.8161 43.3848 68.8066 43.4931L68.7112 44.5841L68.3419 44.5518L68.3614 44.3278L68.3487 44.3267C68.3214 44.37 68.2848 44.4095 68.2389 44.4454C68.1937 44.4807 68.1383 44.5076 68.0725 44.5261C68.0075 44.5439 67.9325 44.5491 67.8476 44.5417ZM67.9721 44.2681C68.0492 44.2749 68.1174 44.2655 68.1766 44.24C68.236 44.2138 68.2831 44.1766 68.3179 44.1283C68.3535 44.0801 68.374 44.0259 68.3792 43.9658L68.396 43.7737C68.3831 43.7826 68.3618 43.79 68.3321 43.7959C68.303 43.8019 68.2705 43.8066 68.2346 43.8098C68.1987 43.8131 68.1631 43.8157 68.128 43.8176C68.0929 43.8195 68.0625 43.8212 68.0367 43.8225C67.9787 43.8252 67.9263 43.8335 67.8795 43.8472C67.8327 43.8609 67.7948 43.8826 67.7658 43.9121C67.7369 43.941 67.7203 43.9802 67.7159 44.0297C67.7098 44.1004 67.7309 44.1561 67.7794 44.1967C67.8279 44.2373 67.8921 44.2611 67.9721 44.2681ZM71.2321 43.5962L70.8786 43.6038C70.8717 43.5675 70.8573 43.5328 70.8353 43.4995C70.814 43.4662 70.7836 43.4383 70.7442 43.4156C70.7049 43.3929 70.6555 43.3789 70.596 43.3737C70.5161 43.3667 70.4474 43.3782 70.3898 43.4081C70.333 43.4381 70.3026 43.4807 70.2985 43.5359C70.2936 43.5832 70.3076 43.6233 70.3403 43.6561C70.3738 43.689 70.4311 43.7186 70.5122 43.745L70.7851 43.8287C70.9364 43.8755 71.0464 43.9382 71.1151 44.0169C71.1845 44.0957 71.2144 44.1935 71.2049 44.3103C71.1953 44.4129 71.1573 44.5008 71.091 44.5741C71.0254 44.6468 70.9384 44.7005 70.8298 44.7352C70.7213 44.7699 70.5991 44.7813 70.4632 44.7695C70.2637 44.752 70.1068 44.6962 69.9924 44.6021C69.878 44.5072 69.8158 44.3838 69.8055 44.2317L70.1833 44.2284C70.1939 44.3035 70.2251 44.3622 70.277 44.4045C70.3289 44.4469 70.3991 44.4719 70.4875 44.4796C70.5788 44.4876 70.6537 44.4753 70.7121 44.4426C70.7713 44.41 70.8033 44.3661 70.8081 44.3109C70.8122 44.2642 70.7976 44.2241 70.7641 44.1905C70.7314 44.157 70.6783 44.1288 70.6047 44.106L70.3317 44.0233C70.1782 43.977 70.0673 43.9121 69.9991 43.8284C69.9309 43.744 69.9024 43.6424 69.9135 43.5236C69.9216 43.4231 69.9564 43.3384 70.018 43.2697C70.0804 43.2003 70.1629 43.1498 70.2655 43.1181C70.3689 43.0858 70.4856 43.0753 70.6158 43.0867C70.8068 43.1034 70.9536 43.1573 71.0562 43.2482C71.1594 43.3392 71.2181 43.4552 71.2321 43.5962ZM71.479 44.8262L71.6216 43.1961L71.9888 43.2282L71.9646 43.5052L71.9837 43.5069C72.0258 43.4165 72.0885 43.3485 72.1716 43.303C72.2548 43.2568 72.3508 43.2385 72.4598 43.248C72.5702 43.2577 72.6609 43.2927 72.7319 43.3531C72.8036 43.4129 72.851 43.4901 72.8741 43.5848L72.8911 43.5863C72.9351 43.4989 73.0023 43.432 73.0926 43.3858C73.1837 43.3388 73.2883 43.3205 73.4065 43.3309C73.5565 43.344 73.6747 43.4021 73.7612 43.5052C73.8477 43.6083 73.883 43.7508 73.8671 43.9326L73.7714 45.0268L73.3862 44.9931L73.4767 43.9583C73.4855 43.8572 73.4651 43.7809 73.4154 43.7295C73.3658 43.6774 73.3021 43.6479 73.2243 43.6411C73.1316 43.633 73.0565 43.6556 72.9991 43.7091C72.9424 43.7619 72.9101 43.8343 72.902 43.9262L72.8131 44.943L72.4363 44.91L72.5282 43.8593C72.5356 43.7751 72.516 43.7057 72.4695 43.651C72.4236 43.5964 72.36 43.5655 72.2786 43.5584C72.2235 43.5535 72.172 43.5633 72.1242 43.5876C72.0765 43.6113 72.037 43.6474 72.0057 43.696C71.9744 43.7438 71.9558 43.8014 71.9499 43.8686L71.8632 44.8599L71.479 44.8262ZM74.6274 45.1348C74.5241 45.1258 74.4326 45.0993 74.3531 45.0552C74.2743 45.0105 74.214 44.9497 74.1723 44.8726C74.1313 44.7956 74.1154 44.7036 74.1248 44.5968C74.1328 44.5048 74.1564 44.4302 74.1957 44.3731C74.2349 44.3159 74.2854 44.2719 74.3473 44.2409C74.4092 44.21 74.4777 44.1885 74.5529 44.1765C74.6289 44.1639 74.7069 44.1569 74.7869 44.1553C74.8832 44.1538 74.9615 44.1517 75.0216 44.1491C75.0818 44.1458 75.126 44.1369 75.1544 44.1222C75.1836 44.107 75.1997 44.0809 75.203 44.0441L75.2035 44.0378C75.2105 43.9578 75.1922 43.8938 75.1487 43.8458C75.1051 43.7978 75.0387 43.7699 74.9496 43.7621C74.8555 43.7539 74.779 43.7679 74.7203 43.8041C74.6622 43.8403 74.6212 43.8856 74.5972 43.9398L74.2429 43.8575C74.2799 43.7609 74.3338 43.6822 74.4047 43.6214C74.4757 43.5599 74.5597 43.5166 74.6567 43.4916C74.7538 43.4659 74.8593 43.458 74.9732 43.4679C75.0517 43.4748 75.1291 43.4908 75.2053 43.516C75.2815 43.5413 75.35 43.5779 75.4106 43.626C75.4714 43.6734 75.518 43.7348 75.5506 43.8104C75.584 43.886 75.5959 43.978 75.5864 44.0862L75.491 45.1772L75.1216 45.1449L75.1412 44.921L75.1285 44.9199C75.1012 44.9631 75.0646 45.0027 75.0186 45.0386C74.9735 45.0739 74.918 45.1007 74.8522 45.1192C74.7872 45.1371 74.7123 45.1423 74.6274 45.1348ZM74.7518 44.8613C74.8289 44.868 74.8971 44.8586 74.9564 44.8332C75.0157 44.807 75.0628 44.7698 75.0977 44.7215C75.1333 44.6733 75.1537 44.6191 75.159 44.5589L75.1758 44.3669C75.1629 44.3757 75.1416 44.3831 75.1118 44.3891C75.0828 44.3951 75.0503 44.3997 75.0144 44.403C74.9784 44.4063 74.9429 44.4089 74.9078 44.4108C74.8727 44.4127 74.8423 44.4143 74.8165 44.4156C74.7585 44.4184 74.7061 44.4266 74.6593 44.4404C74.6124 44.4541 74.5745 44.4757 74.5456 44.5053C74.5167 44.5341 74.5 44.5733 74.4957 44.6228C74.4895 44.6936 74.5107 44.7493 74.5592 44.7899C74.6077 44.8305 74.6719 44.8543 74.7518 44.8613ZM75.8773 45.211L76.0199 43.5809L76.3924 43.6135L76.3686 43.8852L76.3856 43.8867C76.4235 43.7952 76.4808 43.7271 76.5575 43.6825C76.6349 43.6372 76.7202 43.6186 76.8136 43.6268C76.8349 43.6287 76.8585 43.6318 76.8845 43.6362C76.9112 43.64 76.9333 43.6444 76.9507 43.6495L76.9198 44.0029C76.904 43.9958 76.8786 43.9886 76.8436 43.9813C76.8094 43.9733 76.776 43.9679 76.7434 43.965C76.6734 43.9589 76.6091 43.9686 76.5505 43.9941C76.4927 44.019 76.4456 44.0566 76.4091 44.1069C76.3726 44.1572 76.3514 44.217 76.3453 44.2863L76.2614 45.2446L75.8773 45.211ZM78.1064 43.7634L78.0804 44.0606L77.1433 43.9786L77.1693 43.6815L78.1064 43.7634ZM77.4348 43.3111L77.819 43.3448L77.6851 44.8751C77.6806 44.9268 77.6849 44.9671 77.698 44.996C77.7119 45.0243 77.7316 45.0446 77.7569 45.0568C77.7822 45.069 77.8108 45.0765 77.8426 45.0793C77.8667 45.0814 77.8887 45.0815 77.9089 45.0797C77.9297 45.078 77.9455 45.0762 77.9564 45.0743L77.9949 45.3803C77.9737 45.3855 77.9437 45.3908 77.9047 45.3959C77.8665 45.4011 77.8201 45.402 77.7655 45.3987C77.669 45.3931 77.5836 45.371 77.5093 45.3324C77.435 45.2931 77.3782 45.2375 77.3388 45.1657C77.3002 45.0938 77.2857 45.007 77.2953 44.9052L77.4348 43.3111ZM78.9864 45.5151C78.823 45.5008 78.6848 45.4545 78.5719 45.3762C78.4597 45.2972 78.3773 45.1924 78.3246 45.0615C78.2719 44.93 78.2531 44.779 78.268 44.6085C78.2826 44.4408 78.3274 44.2964 78.4021 44.1754C78.4776 44.0537 78.5762 43.9625 78.6977 43.9018C78.8193 43.8404 78.9579 43.8166 79.1135 43.8302C79.214 43.839 79.3074 43.8635 79.3937 43.9039C79.4808 43.9436 79.5557 44 79.6184 44.0733C79.6819 44.1465 79.7289 44.2369 79.7594 44.3444C79.79 44.4511 79.799 44.576 79.7865 44.7189L79.7762 44.8367L78.44 44.7198L78.4627 44.4609L79.4306 44.5455C79.4363 44.4719 79.4261 44.4051 79.4 44.345C79.3739 44.2843 79.3344 44.2348 79.2814 44.1967C79.2292 44.1586 79.1662 44.1364 79.0927 44.1299C79.0141 44.123 78.9435 44.1361 78.8807 44.1691C78.818 44.2014 78.7673 44.2469 78.7287 44.3055C78.6908 44.3635 78.6683 44.4289 78.6612 44.5018L78.6415 44.7278C78.6332 44.8226 78.6434 44.9055 78.6721 44.9765C78.7009 45.0467 78.7448 45.1026 78.8039 45.1441C78.8631 45.1849 78.9344 45.209 79.0179 45.2163C79.0738 45.2212 79.1251 45.2178 79.1717 45.2062C79.2184 45.1939 79.2598 45.1737 79.2958 45.1454C79.3317 45.1172 79.3602 45.0809 79.3812 45.0364L79.7364 45.1081C79.7055 45.2009 79.6551 45.2799 79.5852 45.3451C79.5161 45.4096 79.4307 45.457 79.3289 45.4874C79.2272 45.517 79.1131 45.5262 78.9864 45.5151ZM80.0391 45.5751L80.1817 43.945L80.5542 43.9776L80.5305 44.2493L80.5474 44.2508C80.5854 44.1593 80.6427 44.0912 80.7193 44.0466C80.7967 44.0013 80.8821 43.9828 80.9755 43.9909C80.9967 43.9928 81.0203 43.9959 81.0463 44.0003C81.0731 44.0041 81.0951 44.0085 81.1125 44.0136L81.0816 44.367C81.0658 44.3599 81.0404 44.3527 81.0054 44.3454C80.9712 44.3374 80.9378 44.332 80.9052 44.3291C80.8352 44.323 80.7709 44.3327 80.7123 44.3582C80.6546 44.3831 80.6074 44.4207 80.5709 44.471C80.5345 44.5213 80.5132 44.5811 80.5071 44.6504L80.4233 45.6088L80.0391 45.5751ZM82.3018 45.7731L81.9838 44.1027L82.3754 44.1369L82.5617 45.3082L82.5765 45.3095L82.9697 44.1889L83.3571 44.2228L83.5503 45.3883L83.5662 45.3897L83.9482 44.2745L84.3409 44.3089L83.7366 45.8986L83.3365 45.8636L83.1272 44.7353L83.105 44.7333L82.7029 45.8082L82.3018 45.7731ZM84.9327 46.0364C84.8294 46.0274 84.738 46.0009 84.6584 45.9568C84.5796 45.9122 84.5194 45.8513 84.4776 45.7742C84.4366 45.6972 84.4208 45.6052 84.4301 45.4984C84.4382 45.4064 84.4618 45.3318 84.501 45.2747C84.5403 45.2175 84.5908 45.1735 84.6527 45.1425C84.7146 45.1116 84.7831 45.0901 84.8583 45.0782C84.9343 45.0655 85.0122 45.0585 85.0922 45.0569C85.1886 45.0554 85.2668 45.0533 85.327 45.0507C85.3871 45.0474 85.4314 45.0385 85.4598 45.0238C85.4889 45.0086 85.5051 44.9825 85.5083 44.9457L85.5089 44.9394C85.5159 44.8594 85.4976 44.7954 85.454 44.7474C85.4105 44.6994 85.3441 44.6715 85.2549 44.6637C85.1608 44.6555 85.0844 44.6695 85.0256 44.7057C84.9676 44.7419 84.9265 44.7872 84.9025 44.8414L84.5483 44.7591C84.5852 44.6625 84.6392 44.5838 84.7101 44.523C84.7811 44.4615 84.8651 44.4182 84.9621 44.3932C85.0591 44.3675 85.1646 44.3596 85.2785 44.3695C85.3571 44.3764 85.4345 44.3924 85.5107 44.4177C85.5869 44.4429 85.6553 44.4795 85.716 44.5276C85.7767 44.575 85.8234 44.6364 85.856 44.712C85.8893 44.7876 85.9012 44.8796 85.8918 44.9878L85.7963 46.0788L85.427 46.0465L85.4466 45.8226L85.4338 45.8215C85.4065 45.8647 85.3699 45.9043 85.324 45.9402C85.2788 45.9755 85.2234 46.0023 85.1576 46.0208C85.0926 46.0387 85.0176 46.0439 84.9327 46.0364ZM85.0572 45.7629C85.1343 45.7696 85.2025 45.7602 85.2618 45.7348C85.3211 45.7086 85.3682 45.6714 85.4031 45.6231C85.4387 45.5749 85.4591 45.5207 85.4643 45.4606L85.4812 45.2685C85.4683 45.2773 85.4469 45.2847 85.4172 45.2907C85.3881 45.2967 85.3557 45.3013 85.3197 45.3046C85.2838 45.3079 85.2483 45.3105 85.2132 45.3124C85.1781 45.3143 85.1476 45.3159 85.1218 45.3172C85.0639 45.32 85.0114 45.3282 84.9646 45.342C84.9178 45.3557 84.8799 45.3773 84.8509 45.4069C84.822 45.4357 84.8054 45.4749 84.8011 45.5244C84.7949 45.5952 84.816 45.6509 84.8645 45.6915C84.913 45.7321 84.9772 45.7559 85.0572 45.7629ZM86.3096 46.7397C86.2572 46.7351 86.2091 46.7267 86.1653 46.7143C86.1221 46.7026 86.0879 46.6904 86.0626 46.6775L86.178 46.386C86.2324 46.4072 86.2816 46.4193 86.3256 46.4224C86.3695 46.4256 86.4092 46.4151 86.4449 46.3912C86.4811 46.368 86.5136 46.3266 86.5423 46.2671L86.5829 46.1819L86.1374 44.4661L86.5449 44.5017L86.8129 45.7657L86.8299 45.7672L87.3144 44.569L87.723 44.6048L86.9104 46.3752C86.8724 46.4589 86.8256 46.5293 86.77 46.5864C86.7143 46.6443 86.6486 46.6863 86.5729 46.7125C86.4978 46.7394 86.41 46.7485 86.3096 46.7397ZM89.5441 44.7641L89.5181 45.0613L88.581 44.9793L88.607 44.6821L89.5441 44.7641ZM88.8725 44.3118L89.2567 44.3454L89.1228 45.8758C89.1183 45.9275 89.1226 45.9678 89.1358 45.9967C89.1497 46.025 89.1693 46.0453 89.1946 46.0575C89.2199 46.0697 89.2485 46.0772 89.2804 46.0799C89.3044 46.082 89.3265 46.0822 89.3466 46.0804C89.3674 46.0786 89.3833 46.0768 89.3942 46.0749L89.4326 46.3809C89.4115 46.3862 89.3814 46.3914 89.3425 46.3966C89.3042 46.4018 89.2578 46.4027 89.2032 46.3994C89.1067 46.3938 89.0213 46.3717 88.947 46.3331C88.8727 46.2938 88.8159 46.2382 88.7766 46.1663C88.738 46.0945 88.7235 46.0077 88.7331 45.9059L88.8725 44.3118ZM90.4136 46.5149C90.2544 46.501 90.1195 46.4539 90.0089 46.3736C89.8983 46.2933 89.8163 46.1874 89.7629 46.0559C89.7102 45.9243 89.6913 45.7744 89.706 45.606C89.7207 45.4376 89.7655 45.2929 89.8402 45.1718C89.9157 45.0508 90.0149 44.9604 90.1377 44.9005C90.2606 44.8407 90.4016 44.8178 90.5608 44.8317C90.72 44.8456 90.8549 44.8927 90.9655 44.973C91.0762 45.0532 91.1578 45.1595 91.2104 45.2917C91.2637 45.424 91.283 45.5743 91.2682 45.7427C91.2535 45.9111 91.2084 46.0554 91.133 46.1757C91.0583 46.2961 90.9595 46.3862 90.8367 46.446C90.7138 46.5059 90.5728 46.5288 90.4136 46.5149ZM90.4426 46.2073C90.5289 46.2148 90.6032 46.1975 90.6653 46.1551C90.7276 46.1121 90.7764 46.0515 90.8117 45.9733C90.8478 45.8952 90.8702 45.8066 90.8788 45.7075C90.8875 45.6078 90.8809 45.5163 90.859 45.4331C90.8378 45.3493 90.8003 45.2808 90.7465 45.2276C90.6927 45.1744 90.6226 45.144 90.5363 45.1365C90.4479 45.1287 90.3722 45.1463 90.3092 45.1893C90.247 45.2323 90.1978 45.2933 90.1617 45.3721C90.1264 45.4503 90.1043 45.5393 90.0956 45.639C90.0869 45.7381 90.0932 45.8292 90.1145 45.9123C90.1364 45.9955 90.1743 46.0637 90.2281 46.1169C90.2827 46.1694 90.3542 46.1996 90.4426 46.2073ZM92.9731 46.7388C92.8104 46.7246 92.6738 46.6766 92.5633 46.5949C92.4535 46.5133 92.3727 46.4068 92.3207 46.2754C92.2695 46.1433 92.2511 45.9948 92.2656 45.8299C92.28 45.6644 92.3247 45.5211 92.3994 45.4C92.4742 45.2782 92.5728 45.187 92.695 45.1264C92.818 45.0652 92.9591 45.0415 93.1183 45.0554C93.2506 45.067 93.3655 45.1017 93.4632 45.1594C93.5615 45.2165 93.6373 45.2919 93.6904 45.3857C93.7436 45.4787 93.7693 45.5843 93.7675 45.7025L93.4003 45.6704C93.3923 45.5906 93.3626 45.522 93.3113 45.4648C93.2608 45.4069 93.1892 45.3739 93.0965 45.3658C93.0179 45.3589 92.9471 45.3741 92.8839 45.4114C92.8209 45.4479 92.7693 45.504 92.7291 45.5796C92.6897 45.6553 92.6652 45.748 92.6556 45.8576C92.6459 45.9687 92.6538 46.0657 92.6794 46.1485C92.705 46.2306 92.7453 46.2957 92.8002 46.344C92.8559 46.3917 92.9238 46.419 93.0037 46.426C93.0603 46.431 93.1118 46.4248 93.1583 46.4075C93.2055 46.3895 93.2461 46.3613 93.2801 46.3229C93.3141 46.2846 93.3393 46.2365 93.3558 46.1788L93.723 46.2109C93.7037 46.3254 93.6608 46.4247 93.5943 46.5087C93.5278 46.592 93.4418 46.6543 93.3362 46.6957C93.2307 46.7364 93.1097 46.7508 92.9731 46.7388ZM94.698 46.8897C94.5388 46.8758 94.4039 46.8287 94.2933 46.7484C94.1827 46.6682 94.1007 46.5623 94.0473 46.4307C93.9947 46.2992 93.9757 46.1492 93.9904 45.9808C94.0052 45.8124 94.0499 45.6677 94.1247 45.5466C94.2001 45.4256 94.2993 45.3352 94.4222 45.2754C94.545 45.2155 94.6861 45.1926 94.8452 45.2065C95.0044 45.2204 95.1393 45.2675 95.25 45.3478C95.3606 45.4281 95.4422 45.5343 95.4948 45.6665C95.5481 45.7988 95.5674 45.9491 95.5526 46.1175C95.5379 46.2859 95.4928 46.4303 95.4174 46.5506C95.3427 46.6709 95.244 46.761 95.1211 46.8209C94.9982 46.8807 94.8572 46.9036 94.698 46.8897ZM94.727 46.5821C94.8134 46.5897 94.8876 46.5723 94.9498 46.53C95.012 46.4869 95.0608 46.4263 95.0961 46.3481C95.1322 46.27 95.1546 46.1814 95.1632 46.0824C95.172 45.9826 95.1654 45.8911 95.1434 45.8079C95.1222 45.7241 95.0847 45.6556 95.0309 45.6024C94.9771 45.5492 94.907 45.5188 94.8207 45.5113C94.7323 45.5036 94.6566 45.5212 94.5937 45.5641C94.5314 45.6072 94.4823 45.6681 94.4461 45.7469C94.4108 45.8251 94.3887 45.9141 94.38 46.0139C94.3713 46.1129 94.3776 46.204 94.3989 46.2871C94.4208 46.3703 94.4587 46.4385 94.5125 46.4917C94.5671 46.5443 94.6386 46.5744 94.727 46.5821ZM95.808 46.9547L95.9506 45.3246L96.3178 45.3567L96.2936 45.6337L96.3127 45.6354C96.3548 45.545 96.4174 45.477 96.5005 45.4315C96.5837 45.3853 96.6798 45.367 96.7887 45.3765C96.8991 45.3862 96.9898 45.4212 97.0608 45.4816C97.1326 45.5414 97.18 45.6186 97.2031 45.7133L97.2201 45.7148C97.2641 45.6274 97.3312 45.5605 97.4215 45.5143C97.5126 45.4673 97.6172 45.449 97.7354 45.4594C97.8854 45.4725 98.0036 45.5306 98.0902 45.6337C98.1767 45.7368 98.212 45.8793 98.1961 46.0611L98.1003 47.1553L97.7151 47.1216L97.8056 46.0868C97.8145 45.9857 97.7941 45.9094 97.7444 45.858C97.6947 45.8059 97.631 45.7764 97.5532 45.7696C97.4605 45.7615 97.3854 45.7842 97.328 45.8376C97.2714 45.8904 97.239 45.9628 97.231 46.0547L97.142 47.0715L96.7652 47.0385L96.8572 45.9878C96.8645 45.9036 96.8449 45.8342 96.7984 45.7795C96.7526 45.7249 96.689 45.694 96.6076 45.6869C96.5524 45.682 96.5009 45.6918 96.4532 45.7161C96.4055 45.7398 96.366 45.7759 96.3346 45.8245C96.3033 45.8724 96.2848 45.9299 96.2789 45.9971L96.1921 46.9884L95.808 46.9547ZM98.4901 47.1894L98.6327 45.5593L98.9999 45.5914L98.9757 45.8684L98.9948 45.8701C99.0369 45.7796 99.0995 45.7117 99.1827 45.6662C99.2658 45.62 99.3619 45.6017 99.4709 45.6112C99.5812 45.6209 99.6719 45.6559 99.7429 45.7163C99.8147 45.776 99.8621 45.8533 99.8852 45.948L99.9022 45.9494C99.9462 45.862 100.013 45.7952 100.104 45.7489C100.195 45.702 100.299 45.6837 100.418 45.694C100.568 45.7072 100.686 45.7653 100.772 45.8684C100.859 45.9715 100.894 46.1139 100.878 46.2958L100.782 47.39L100.397 47.3563L100.488 46.3215C100.497 46.2203 100.476 46.144 100.427 46.0926C100.377 46.0405 100.313 46.0111 100.235 46.0043C100.143 45.9961 100.068 46.0188 100.01 46.0722C99.9535 46.125 99.9211 46.1974 99.9131 46.2894L99.8241 47.3061L99.4474 47.2732L99.5393 46.2225C99.5467 46.1383 99.5271 46.0688 99.4805 46.0141C99.4347 45.9595 99.3711 45.9286 99.2897 45.9215C99.2345 45.9167 99.1831 45.9265 99.1353 45.9508C99.0876 45.9744 99.0481 46.0105 99.0167 46.0591C98.9855 46.107 98.9669 46.1646 98.961 46.2318L98.8743 47.223L98.4901 47.1894ZM102.271 46.8294L102.354 45.8848L102.738 45.9184L102.595 47.5486L102.223 47.516L102.248 47.2262L102.231 47.2248C102.187 47.3128 102.119 47.3822 102.03 47.4328C101.942 47.4835 101.836 47.5035 101.714 47.4928C101.607 47.4835 101.515 47.4515 101.437 47.3969C101.359 47.3417 101.302 47.2664 101.264 47.1711C101.226 47.0751 101.213 46.962 101.224 46.8319L101.315 45.7939L101.699 45.8275L101.613 46.806C101.604 46.9093 101.626 46.9939 101.677 47.0597C101.728 47.1255 101.8 47.1624 101.892 47.1705C101.948 47.1754 102.004 47.1664 102.06 47.1435C102.115 47.1205 102.162 47.0833 102.201 47.0318C102.241 46.9796 102.264 46.9121 102.271 46.8294ZM103.458 46.6616L103.375 47.6167L102.99 47.5831L103.133 45.953L103.5 45.9851L103.476 46.2621L103.495 46.2638C103.541 46.1758 103.607 46.1085 103.694 46.0619C103.781 46.0154 103.886 45.9974 104.007 46.0081C104.12 46.0179 104.216 46.0506 104.295 46.106C104.375 46.1615 104.434 46.2368 104.472 46.3321C104.511 46.4275 104.524 46.5402 104.512 46.6704L104.421 47.7083L104.037 47.6747L104.123 46.6962C104.132 46.5872 104.111 46.4995 104.06 46.433C104.009 46.3665 103.935 46.329 103.836 46.3203C103.768 46.3144 103.707 46.3241 103.652 46.3492C103.598 46.3737 103.554 46.4122 103.519 46.4648C103.485 46.5175 103.465 46.5831 103.458 46.6616ZM104.812 47.7425L104.954 46.1123L105.338 46.1459L105.196 47.7761L104.812 47.7425ZM105.168 45.8979C105.107 45.8925 105.056 45.8678 105.016 45.8236C104.976 45.7788 104.958 45.7277 104.963 45.6704C104.968 45.6123 104.994 45.5651 105.042 45.5286C105.089 45.4914 105.143 45.4755 105.204 45.4808C105.266 45.4862 105.316 45.5113 105.356 45.5561C105.396 45.6002 105.414 45.6513 105.409 45.7094C105.404 45.7667 105.377 45.8139 105.33 45.8511C105.283 45.8877 105.229 45.9033 105.168 45.8979ZM106.299 47.9047C106.136 47.8905 106 47.8425 105.889 47.7608C105.78 47.6792 105.699 47.5727 105.647 47.4412C105.596 47.3091 105.577 47.1607 105.592 46.9958C105.606 46.8303 105.651 46.6869 105.725 46.5659C105.8 46.4441 105.899 46.3529 106.021 46.2923C106.144 46.231 106.285 46.2074 106.444 46.2213C106.577 46.2329 106.692 46.2675 106.789 46.3253C106.888 46.3824 106.963 46.4578 107.016 46.5515C107.07 46.6446 107.095 46.7502 107.094 46.8684L106.726 46.8363C106.718 46.7565 106.689 46.6879 106.637 46.6307C106.587 46.5728 106.515 46.5398 106.423 46.5317C106.344 46.5248 106.273 46.54 106.21 46.5772C106.147 46.6138 106.095 46.6699 106.055 46.7455C106.016 46.8212 105.991 46.9139 105.982 47.0235C105.972 47.1346 105.98 47.2315 106.005 47.3143C106.031 47.3964 106.071 47.4616 106.126 47.5099C106.182 47.5576 106.25 47.5849 106.33 47.5919C106.386 47.5968 106.438 47.5907 106.484 47.5733C106.532 47.5554 106.572 47.5272 106.606 47.4888C106.64 47.4504 106.665 47.4024 106.682 47.3446L107.049 47.3768C107.03 47.4913 106.987 47.5906 106.92 47.6746C106.854 47.7579 106.768 47.8202 106.662 47.8616C106.557 47.9023 106.436 47.9166 106.299 47.9047ZM107.782 48.0355C107.679 48.0265 107.587 47.9999 107.508 47.9559C107.429 47.9112 107.369 47.8503 107.327 47.7732C107.286 47.6962 107.27 47.6043 107.279 47.4974C107.287 47.4055 107.311 47.3309 107.35 47.2737C107.389 47.2166 107.44 47.1725 107.502 47.1416C107.564 47.1106 107.632 47.0892 107.708 47.0772C107.783 47.0646 107.861 47.0575 107.941 47.056C108.038 47.0544 108.116 47.0523 108.176 47.0498C108.236 47.0465 108.281 47.0375 108.309 47.0229C108.338 47.0076 108.354 46.9816 108.358 46.9448L108.358 46.9384C108.365 46.8585 108.347 46.7945 108.303 46.7465C108.26 46.6985 108.193 46.6705 108.104 46.6628C108.01 46.6545 107.934 46.6685 107.875 46.7047C107.817 46.741 107.776 46.7862 107.752 46.8405L107.398 46.7581C107.434 46.6616 107.488 46.5829 107.559 46.522C107.63 46.4605 107.714 46.4173 107.811 46.3922C107.908 46.3665 108.014 46.3586 108.128 46.3686C108.206 46.3755 108.284 46.3915 108.36 46.4167C108.436 46.4419 108.505 46.4786 108.565 46.5266C108.626 46.574 108.673 46.6355 108.705 46.7111C108.739 46.7867 108.75 46.8786 108.741 46.9869L108.646 48.0779L108.276 48.0456L108.296 47.8216L108.283 47.8205C108.256 47.8638 108.219 47.9033 108.173 47.9393C108.128 47.9745 108.073 48.0014 108.007 48.0199C107.942 48.0377 107.867 48.0429 107.782 48.0355ZM107.906 47.7619C107.984 47.7687 108.052 47.7593 108.111 47.7338C108.17 47.7076 108.217 47.6704 108.252 47.6221C108.288 47.5739 108.308 47.5197 108.314 47.4596L108.33 47.2675C108.318 47.2764 108.296 47.2838 108.266 47.2897C108.237 47.2957 108.205 47.3004 108.169 47.3036C108.133 47.3069 108.098 47.3095 108.062 47.3114C108.027 47.3134 107.997 47.315 107.971 47.3163C107.913 47.319 107.861 47.3273 107.814 47.341C107.767 47.3547 107.729 47.3764 107.7 47.4059C107.671 47.4348 107.655 47.474 107.65 47.5235C107.644 47.5942 107.665 47.6499 107.714 47.6905C107.762 47.7311 107.826 47.7549 107.906 47.7619ZM109.988 46.5528L109.962 46.8499L109.025 46.7679L109.051 46.4708L109.988 46.5528ZM109.317 46.1005L109.701 46.1341L109.567 47.6645C109.563 47.7161 109.567 47.7564 109.58 47.7854C109.594 47.8137 109.614 47.8339 109.639 47.8461C109.664 47.8583 109.693 47.8658 109.725 47.8686C109.749 47.8707 109.771 47.8708 109.791 47.869C109.812 47.8673 109.828 47.8655 109.839 47.8636L109.877 48.1696C109.856 48.1749 109.826 48.1801 109.787 48.1852C109.749 48.1904 109.702 48.1914 109.648 48.188C109.551 48.1824 109.466 48.1603 109.391 48.1218C109.317 48.0825 109.26 48.0269 109.221 47.955C109.182 47.8832 109.168 47.7963 109.177 47.6945L109.317 46.1005ZM110.869 48.3045C110.705 48.2902 110.567 48.2438 110.454 48.1655C110.342 48.0866 110.259 47.9817 110.207 47.8509C110.154 47.7194 110.135 47.5684 110.15 47.3978C110.165 47.2302 110.209 47.0858 110.284 46.9647C110.36 46.843 110.458 46.7518 110.58 46.6911C110.701 46.6298 110.84 46.6059 110.996 46.6195C111.096 46.6283 111.19 46.6529 111.276 46.6932C111.363 46.7329 111.438 46.7894 111.501 46.8626C111.564 46.9359 111.611 47.0262 111.642 47.1337C111.672 47.2405 111.681 47.3653 111.669 47.5082L111.658 47.626L110.322 47.5091L110.345 47.2502L111.313 47.3349C111.318 47.2612 111.308 47.1944 111.282 47.1343C111.256 47.0736 111.217 47.0242 111.164 46.986C111.111 46.9479 111.048 46.9257 110.975 46.9192C110.896 46.9124 110.826 46.9254 110.763 46.9584C110.7 46.9907 110.649 47.0362 110.611 47.0949C110.573 47.1529 110.55 47.2183 110.543 47.2911L110.524 47.5171C110.515 47.6119 110.525 47.6948 110.554 47.7658C110.583 47.836 110.627 47.8919 110.686 47.9334C110.745 47.9743 110.817 47.9983 110.9 48.0056C110.956 48.0105 111.007 48.0072 111.054 47.9956C111.101 47.9833 111.142 47.963 111.178 47.9348C111.214 47.9065 111.242 47.8702 111.263 47.8257L111.619 47.8974C111.588 47.9902 111.537 48.0692 111.467 48.1344C111.398 48.1989 111.313 48.2464 111.211 48.2767C111.109 48.3063 110.995 48.3155 110.869 48.3045ZM112.156 48.4085C112.091 48.4029 112.038 48.3754 111.996 48.3261C111.954 48.2768 111.936 48.2196 111.943 48.1546C111.948 48.0909 111.975 48.0384 112.025 47.9971C112.075 47.9559 112.132 47.9381 112.197 47.9437C112.259 47.9491 112.311 47.9765 112.353 48.0258C112.396 48.0752 112.415 48.1317 112.41 48.1955C112.405 48.2386 112.391 48.2768 112.365 48.3103C112.341 48.3438 112.31 48.3696 112.273 48.3878C112.237 48.4053 112.198 48.4122 112.156 48.4085ZM25.6505 48.6648L26.0952 48.7037L26.5427 49.7118L26.564 49.7136L27.1798 48.7986L27.6245 48.8375L26.7146 50.131L26.6437 50.9419L26.251 50.9075L26.3219 50.0967L25.6505 48.6648ZM28.1009 51.1014C27.9417 51.0875 27.8068 51.0404 27.6962 50.9601C27.5856 50.8799 27.5036 50.774 27.4503 50.6424C27.3976 50.5109 27.3786 50.3609 27.3934 50.1926C27.4081 50.0242 27.4528 49.8794 27.5276 49.7584C27.6031 49.6373 27.7022 49.5469 27.8251 49.4871C27.948 49.4273 28.089 49.4043 28.2482 49.4182C28.4074 49.4322 28.5423 49.4792 28.6529 49.5595C28.7635 49.6398 28.8451 49.746 28.8977 49.8782C28.951 50.0105 28.9703 50.1608 28.9556 50.3292C28.9408 50.4976 28.8958 50.642 28.8204 50.7623C28.7457 50.8826 28.6469 50.9727 28.524 51.0326C28.4012 51.0924 28.2601 51.1154 28.1009 51.1014ZM28.13 50.7938C28.2163 50.8014 28.2905 50.784 28.3527 50.7417C28.4149 50.6986 28.4637 50.638 28.4991 50.5598C28.5351 50.4817 28.5575 50.3931 28.5662 50.2941C28.5749 50.1943 28.5683 50.1028 28.5463 50.0197C28.5252 49.9358 28.4877 49.8673 28.4339 49.8141C28.38 49.7609 28.31 49.7306 28.2237 49.723C28.1352 49.7153 28.0595 49.7329 27.9966 49.7759C27.9344 49.8189 27.8852 49.8798 27.8491 49.9587C27.8137 50.0368 27.7917 50.1258 27.7829 50.2256C27.7743 50.3246 27.7806 50.4157 27.8018 50.4988C27.8238 50.582 27.8616 50.6502 27.9155 50.7034C27.97 50.756 28.0415 50.7861 28.13 50.7938ZM30.3099 50.5718L30.3925 49.6272L30.7767 49.6608L30.6341 51.291L30.2616 51.2584L30.2869 50.9686L30.2699 50.9672C30.2252 51.0552 30.1581 51.1246 30.0689 51.1752C29.9803 51.2259 29.8748 51.2459 29.7524 51.2352C29.6456 51.2259 29.5532 51.1939 29.4753 51.1393C29.3981 51.0841 29.3405 51.0088 29.3025 50.9135C29.2646 50.8175 29.2513 50.7044 29.2627 50.5743L29.3535 49.5363L29.7377 49.5699L29.6521 50.5484C29.6431 50.6517 29.6642 50.7363 29.7155 50.8021C29.7667 50.8679 29.8384 50.9048 29.9303 50.9129C29.987 50.9178 30.043 50.9088 30.0985 50.8859C30.1539 50.8629 30.2011 50.8257 30.2398 50.7742C30.2793 50.722 30.3026 50.6545 30.3099 50.5718ZM32.3729 51.472C32.2448 51.4608 32.1331 51.4178 32.0377 51.3432C31.9422 51.2685 31.8707 51.166 31.8229 51.0357C31.7751 50.9053 31.7591 50.7506 31.7747 50.5716C31.7906 50.3905 31.8337 50.2402 31.904 50.1209C31.9751 50.0009 32.0644 49.9136 32.1718 49.8588C32.2793 49.8033 32.3957 49.7811 32.5209 49.792C32.6165 49.8004 32.6936 49.8235 32.7523 49.8615C32.811 49.8987 32.8565 49.9415 32.8886 49.99C32.9208 50.0377 32.9451 50.0822 32.9614 50.1236L32.9773 50.125L33.0484 49.312L33.4337 49.3457L33.2435 51.5193L32.8657 51.4862L32.8882 51.2294L32.8648 51.2273C32.8416 51.2652 32.8092 51.3048 32.7678 51.3461C32.7265 51.3867 32.6737 51.4199 32.6094 51.4456C32.5451 51.4714 32.4663 51.4801 32.3729 51.472ZM32.5077 51.1661C32.589 51.1733 32.6603 51.1574 32.7214 51.1185C32.7826 51.079 32.8316 51.0209 32.8682 50.9442C32.9049 50.8676 32.9278 50.7766 32.937 50.6711C32.9462 50.5657 32.9394 50.4728 32.9165 50.3924C32.8943 50.312 32.8564 50.2477 32.8029 50.1996C32.7501 50.1514 32.6823 50.1238 32.5995 50.1165C32.5139 50.109 32.4405 50.1251 32.3793 50.1646C32.318 50.2042 32.2695 50.262 32.2336 50.338C32.1977 50.414 32.1754 50.5026 32.1665 50.6037C32.1576 50.7056 32.1642 50.7978 32.1862 50.8803C32.209 50.9621 32.247 51.0286 32.3003 51.0796C32.3543 51.1299 32.4235 51.1588 32.5077 51.1661ZM34.3612 51.6491C34.202 51.6352 34.0671 51.5881 33.9565 51.5079C33.8459 51.4276 33.7639 51.3217 33.7105 51.1901C33.6579 51.0586 33.6389 50.9086 33.6536 50.7403C33.6684 50.5719 33.7131 50.4271 33.7879 50.3061C33.8633 50.185 33.9625 50.0946 34.0854 50.0348C34.2082 49.975 34.3493 49.952 34.5085 49.9659C34.6677 49.9799 34.8026 50.0269 34.9132 50.1072C35.0238 50.1875 35.1054 50.2937 35.158 50.4259C35.2113 50.5582 35.2306 50.7085 35.2158 50.8769C35.2011 51.0453 35.156 51.1897 35.0806 51.31C35.0059 51.4303 34.9072 51.5204 34.7843 51.5803C34.6614 51.6401 34.5204 51.6631 34.3612 51.6491ZM34.3902 51.3415C34.4766 51.3491 34.5508 51.3317 34.613 51.2894C34.6752 51.2463 34.724 51.1857 34.7593 51.1076C34.7954 51.0294 34.8178 50.9408 34.8264 50.8418C34.8352 50.742 34.8286 50.6506 34.8066 50.5674C34.7854 50.4835 34.7479 50.415 34.6941 50.3618C34.6403 50.3086 34.5703 50.2783 34.4839 50.2707C34.3955 50.263 34.3198 50.2806 34.2569 50.3236C34.1946 50.3666 34.1455 50.4275 34.1093 50.5064C34.074 50.5845 34.0519 50.6735 34.0432 50.7733C34.0345 50.8723 34.0408 50.9634 34.0621 51.0465C34.084 51.1297 34.1219 51.1979 34.1757 51.2511C34.2303 51.3037 34.3018 51.3338 34.3902 51.3415ZM35.9389 50.7926L35.8554 51.7478L35.4712 51.7142L35.6138 50.084L35.981 50.1161L35.9568 50.3931L35.9759 50.3948C36.0213 50.3068 36.0875 50.2395 36.1743 50.1929C36.2617 50.1464 36.3663 50.1285 36.488 50.1391C36.6005 50.149 36.6964 50.1816 36.7757 50.237C36.8557 50.2925 36.9147 50.3679 36.9527 50.4632C36.9914 50.5585 37.0047 50.6713 36.9926 50.8014L36.9018 51.8393L36.5176 51.8057L36.6032 50.8272C36.6127 50.7182 36.5919 50.6305 36.5407 50.564C36.4902 50.4976 36.4154 50.46 36.3163 50.4513C36.2491 50.4455 36.188 50.4551 36.1331 50.4802C36.0789 50.5047 36.0345 50.5432 36 50.5958C35.9661 50.6485 35.9458 50.7141 35.9389 50.7926ZM37.8083 49.7285L37.7894 49.945C37.7839 50.0072 37.7662 50.0709 37.7363 50.136C37.7071 50.2005 37.6694 50.2614 37.623 50.3186C37.5767 50.3752 37.5255 50.4227 37.4694 50.4613L37.3012 50.33C37.3452 50.2747 37.3847 50.2144 37.4197 50.149C37.4547 50.0829 37.476 50.0067 37.4835 49.9204L37.5027 49.7017L37.8083 49.7285ZM38.9407 50.3751L38.9147 50.6722L37.9775 50.5903L38.0035 50.2931L38.9407 50.3751ZM38.2691 49.9228L38.6533 49.9564L38.5194 51.4868C38.5148 51.5384 38.5192 51.5787 38.5323 51.6077C38.5462 51.636 38.5659 51.6562 38.5912 51.6684C38.6165 51.6806 38.6451 51.6881 38.6769 51.6909C38.7009 51.693 38.723 51.6932 38.7432 51.6914C38.764 51.6896 38.7798 51.6878 38.7907 51.6859L38.8291 51.9919C38.808 51.9972 38.778 52.0024 38.739 52.0075C38.7008 52.0128 38.6544 52.0137 38.5998 52.0103C38.5033 52.0047 38.4179 51.9827 38.3435 51.9441C38.2693 51.9048 38.2125 51.8492 38.1731 51.7773C38.1345 51.7055 38.12 51.6187 38.1296 51.5168L38.2691 49.9228ZM40.0033 50.4681L40.3875 50.5017L40.2367 52.2252C40.2264 52.3426 40.1956 52.4376 40.1444 52.5101C40.0931 52.5826 40.0237 52.634 39.9363 52.6641C39.8488 52.6942 39.7449 52.704 39.6246 52.6935C39.6105 52.6923 39.5974 52.6908 39.5855 52.689C39.5734 52.688 39.5604 52.6865 39.5463 52.6845L39.5737 52.3714C39.5842 52.3731 39.5937 52.3743 39.6022 52.375C39.6107 52.3765 39.6195 52.3776 39.6287 52.3784C39.7023 52.3848 39.7565 52.3714 39.7915 52.3381C39.8265 52.3055 39.8469 52.2549 39.8529 52.1863L40.0033 50.4681ZM40.2145 50.2534C40.153 50.248 40.102 50.2232 40.0617 50.1791C40.0221 50.1343 40.0049 50.0832 40.0099 50.0259C40.0149 49.9679 40.0408 49.9206 40.0875 49.884C40.135 49.8468 40.1895 49.8309 40.251 49.8363C40.3119 49.8416 40.3621 49.8667 40.4017 49.9115C40.442 49.9557 40.4596 50.0068 40.4546 50.0648C40.4495 50.1221 40.4233 50.1694 40.3758 50.2066C40.3292 50.2431 40.2754 50.2587 40.2145 50.2534ZM41.7389 51.5717L41.8215 50.6271L42.2057 50.6607L42.0631 52.2909L41.6906 52.2583L41.7159 51.9686L41.6989 51.9671C41.6542 52.0551 41.5871 52.1245 41.4979 52.1751C41.4093 52.2258 41.3038 52.2458 41.1814 52.2351C41.0746 52.2258 40.9822 52.1938 40.9043 52.1392C40.8271 52.084 40.7695 52.0087 40.7315 51.9134C40.6936 51.8174 40.6803 51.7044 40.6917 51.5742L40.7825 50.5362L41.1667 50.5698L41.0811 51.5483C41.0721 51.6516 41.0932 51.7362 41.1445 51.802C41.1957 51.8678 41.2674 51.9047 41.3593 51.9128C41.4159 51.9177 41.472 51.9087 41.5275 51.8858C41.5829 51.8628 41.63 51.8256 41.6688 51.7741C41.7083 51.7219 41.7316 51.6545 41.7389 51.5717ZM43.8515 51.2389L43.4979 51.2465C43.4911 51.2102 43.4767 51.1755 43.4546 51.1422C43.4333 51.1089 43.403 51.081 43.3636 51.0583C43.3242 51.0356 43.2748 51.0216 43.2154 51.0164C43.1354 51.0094 43.0667 51.0209 43.0092 51.0508C42.9524 51.0808 42.9219 51.1234 42.9178 51.1786C42.913 51.226 42.9269 51.266 42.9597 51.2988C42.9932 51.3317 43.0505 51.3613 43.1316 51.3877L43.4044 51.4714C43.5558 51.5182 43.6658 51.5809 43.7345 51.6596C43.8039 51.7384 43.8338 51.8362 43.8243 51.953C43.8146 52.0556 43.7766 52.1435 43.7103 52.2168C43.6448 52.2895 43.5577 52.3432 43.4492 52.3779C43.3406 52.4126 43.2184 52.424 43.0826 52.4122C42.8831 52.3947 42.7261 52.3389 42.6117 52.2448C42.4974 52.1499 42.4351 52.0265 42.4249 51.8744L42.8027 51.8711C42.8132 51.9462 42.8444 52.0049 42.8964 52.0472C42.9483 52.0896 43.0184 52.1146 43.1069 52.1223C43.1981 52.1303 43.273 52.118 43.3315 52.0853C43.3907 52.0527 43.4227 52.0088 43.4275 51.9536C43.4316 51.9069 43.4169 51.8668 43.3835 51.8332C43.3508 51.7997 43.2976 51.7715 43.2241 51.7487L42.9511 51.666C42.7976 51.6197 42.6867 51.5548 42.6185 51.4711C42.5503 51.3867 42.5217 51.2851 42.5328 51.1663C42.5409 51.0658 42.5758 50.9811 42.6374 50.9124C42.6998 50.843 42.7823 50.7925 42.8849 50.7608C42.9882 50.7285 43.105 50.718 43.2352 50.7294C43.4262 50.7461 43.573 50.8 43.6755 50.8909C43.7788 50.9819 43.8374 51.0979 43.8515 51.2389ZM45.055 50.91L45.029 51.2072L44.0919 51.1252L44.1179 50.828L45.055 50.91ZM44.3834 50.4577L44.7676 50.4913L44.6337 52.0217C44.6292 52.0734 44.6335 52.1137 44.6467 52.1426C44.6606 52.1709 44.6802 52.1912 44.7055 52.2034C44.7308 52.2156 44.7594 52.2231 44.7912 52.2258C44.8153 52.2279 44.8374 52.2281 44.8575 52.2263C44.8783 52.2246 44.8942 52.2227 44.905 52.2208L44.9435 52.5268C44.9224 52.5321 44.8923 52.5373 44.8534 52.5425C44.8151 52.5477 44.7687 52.5486 44.7141 52.5453C44.6176 52.5397 44.5322 52.5176 44.4579 52.479C44.3836 52.4397 44.3268 52.3841 44.2875 52.3122C44.2488 52.2404 44.2343 52.1536 44.244 52.0518L44.3834 50.4577ZM46.6833 52.7272C46.5205 52.7129 46.3839 52.665 46.2734 52.5833C46.1637 52.5017 46.0828 52.3952 46.0308 52.2637C45.9797 52.1316 45.9613 51.9831 45.9757 51.8183C45.9902 51.6527 46.0348 51.5094 46.1096 51.3883C46.1844 51.2666 46.2829 51.1754 46.4051 51.1148C46.5281 51.0535 46.6692 51.0299 46.8284 51.0438C46.9607 51.0554 47.0757 51.09 47.1733 51.1477C47.2717 51.2048 47.3474 51.2803 47.4005 51.374C47.4537 51.4671 47.4794 51.5727 47.4776 51.6909L47.1104 51.6588C47.1024 51.5789 47.0728 51.5104 47.0214 51.4531C46.9709 51.3953 46.8993 51.3623 46.8066 51.3541C46.7281 51.3473 46.6572 51.3625 46.5941 51.3997C46.531 51.4363 46.4794 51.4923 46.4393 51.568C46.3999 51.6437 46.3753 51.7363 46.3658 51.846C46.356 51.9571 46.3639 52.054 46.3895 52.1368C46.4151 52.2189 46.4554 52.2841 46.5103 52.3324C46.5661 52.3801 46.6339 52.4074 46.7138 52.4144C46.7704 52.4193 46.822 52.4131 46.8684 52.3958C46.9156 52.3778 46.9562 52.3497 46.9902 52.3113C47.0242 52.2729 47.0495 52.2249 47.0659 52.1671L47.4331 52.1993C47.4138 52.3138 47.3709 52.413 47.3044 52.4971C47.2379 52.5804 47.1519 52.6427 47.0464 52.6841C46.9409 52.7248 46.8198 52.7391 46.6833 52.7272ZM48.1676 51.8625L48.084 52.8176L47.6999 52.784L47.89 50.6105L48.2657 50.6434L48.1939 51.4638L48.213 51.4654C48.2593 51.3768 48.3247 51.3094 48.4093 51.2634C48.4947 51.2167 48.5996 51.1987 48.7241 51.2096C48.8373 51.2195 48.934 51.2519 49.014 51.3067C49.0941 51.3614 49.1531 51.4365 49.1911 51.5317C49.2298 51.6271 49.2434 51.7406 49.2319 51.8722L49.1411 52.9101L48.7569 52.8765L48.8425 51.898C48.8521 51.7883 48.8313 51.7006 48.78 51.6348C48.7295 51.5684 48.6536 51.5307 48.5524 51.5219C48.4845 51.5159 48.4224 51.5255 48.366 51.5505C48.3104 51.5748 48.265 51.6133 48.2297 51.6658C48.1952 51.7184 48.1745 51.7839 48.1676 51.8625ZM50.2516 53.0394C50.0881 53.0251 49.95 52.9787 49.837 52.9004C49.7249 52.8215 49.6425 52.7166 49.5897 52.5858C49.5371 52.4543 49.5182 52.3033 49.5331 52.1327C49.5478 51.9651 49.5925 51.8207 49.6673 51.6996C49.7428 51.5779 49.8413 51.4867 49.9628 51.426C50.0844 51.3647 50.223 51.3408 50.3787 51.3544C50.4791 51.3632 50.5725 51.3878 50.6588 51.4281C50.7459 51.4678 50.8208 51.5243 50.8836 51.5975C50.947 51.6708 50.994 51.7611 51.0245 51.8686C51.0551 51.9754 51.0642 52.1002 51.0517 52.2431L51.0413 52.3609L49.7052 52.244L49.7278 51.9851L50.6957 52.0698C50.7015 51.9961 50.6913 51.9293 50.6652 51.8692C50.6391 51.8085 50.5996 51.7591 50.5466 51.7209C50.4943 51.6828 50.4314 51.6606 50.3578 51.6541C50.2793 51.6473 50.2086 51.6603 50.1458 51.6933C50.0831 51.7256 50.0324 51.7711 49.9938 51.8298C49.9559 51.8878 49.9335 51.9532 49.9264 52.026L49.9066 52.252C49.8983 52.3468 49.9085 52.4297 49.9372 52.5007C49.966 52.5709 50.01 52.6268 50.0691 52.6683C50.1283 52.7092 50.1996 52.7332 50.2831 52.7405C50.339 52.7454 50.3902 52.7421 50.4369 52.7305C50.4836 52.7182 50.5249 52.6979 50.5609 52.6697C50.5969 52.6414 50.6254 52.6051 50.6464 52.5606L51.0016 52.6323C50.9706 52.7251 50.9202 52.8041 50.8504 52.8693C50.7813 52.9338 50.6958 52.9813 50.5941 53.0116C50.4924 53.0412 50.3782 53.0504 50.2516 53.0394ZM52.0125 53.1934C51.8498 53.1792 51.7132 53.1312 51.6027 53.0496C51.4929 52.9679 51.412 52.8614 51.3601 52.73C51.3089 52.5979 51.2905 52.4494 51.305 52.2845C51.3194 52.119 51.3641 51.9757 51.4388 51.8546C51.5136 51.7328 51.6122 51.6416 51.7344 51.581C51.8574 51.5198 51.9985 51.4961 52.1577 51.51C52.29 51.5216 52.4049 51.5563 52.5025 51.614C52.6009 51.6711 52.6767 51.7465 52.7298 51.8403C52.7829 51.9333 52.8086 52.039 52.8069 52.1571L52.4397 52.125C52.4317 52.0452 52.402 51.9766 52.3507 51.9194C52.3002 51.8615 52.2285 51.8285 52.1359 51.8204C52.0573 51.8135 51.9865 51.8287 51.9233 51.866C51.8602 51.9025 51.8086 51.9586 51.7685 52.0342C51.7291 52.1099 51.7046 52.2026 51.695 52.3123C51.6853 52.4233 51.6932 52.5203 51.7188 52.6031C51.7444 52.6852 51.7846 52.7504 51.8396 52.7987C51.8953 52.8463 51.9631 52.8736 52.0431 52.8806C52.0997 52.8856 52.1512 52.8794 52.1976 52.8621C52.2448 52.8441 52.2855 52.8159 52.3195 52.7775C52.3535 52.7392 52.3787 52.6911 52.3952 52.6334L52.7624 52.6655C52.7431 52.78 52.7002 52.8793 52.6337 52.9633C52.5672 53.0466 52.4812 53.1089 52.3756 53.1503C52.2701 53.191 52.1491 53.2054 52.0125 53.1934ZM53.4241 52.7694L53.4636 52.3055L53.5252 52.3109L54.1683 51.7073L54.6172 51.7466L53.8264 52.4859L53.7468 52.4789L53.4241 52.7694ZM53.0291 53.2503L53.2193 51.0768L53.6034 51.1104L53.4133 53.2839L53.0291 53.2503ZM54.0522 53.3398L53.5864 52.5515L53.8691 52.3035L54.5117 53.38L54.0522 53.3398ZM56.1908 53.559C56.0274 53.5447 55.8892 53.4984 55.7763 53.42C55.6641 53.3411 55.5817 53.2362 55.529 53.1054C55.4763 52.9739 55.4574 52.8229 55.4723 52.6524C55.487 52.4847 55.5317 52.3403 55.6065 52.2192C55.682 52.0975 55.7805 52.0063 55.9021 51.9456C56.0236 51.8843 56.1623 51.8604 56.3179 51.874C56.4184 51.8828 56.5118 51.9074 56.5981 51.9477C56.6851 51.9874 56.76 52.0439 56.8228 52.1171C56.8862 52.1904 56.9332 52.2807 56.9638 52.3882C56.9943 52.495 57.0034 52.6198 56.9909 52.7627L56.9806 52.8806L55.6444 52.7637L55.6671 52.5047L56.635 52.5894C56.6407 52.5157 56.6305 52.4489 56.6044 52.3889C56.5783 52.3281 56.5388 52.2787 56.4858 52.2405C56.4335 52.2025 56.3706 52.1802 56.297 52.1738C56.2185 52.1669 56.1478 52.18 56.0851 52.213C56.0224 52.2453 55.9717 52.2907 55.933 52.3494C55.8952 52.4074 55.8727 52.4728 55.8656 52.5456L55.8458 52.7716C55.8375 52.8665 55.8478 52.9493 55.8765 53.0203C55.9053 53.0905 55.9492 53.1464 56.0083 53.188C56.0675 53.2288 56.1388 53.2529 56.2223 53.2602C56.2782 53.265 56.3295 53.2617 56.3761 53.2501C56.4228 53.2378 56.4642 53.2175 56.5001 53.1893C56.5361 53.1611 56.5646 53.1247 56.5856 53.0802L56.9408 53.1519C56.9099 53.2447 56.8595 53.3237 56.7896 53.3889C56.7205 53.4535 56.6351 53.5009 56.5333 53.5312C56.4316 53.5608 56.3175 53.5701 56.1908 53.559ZM57.2435 53.619L57.3861 51.9889L57.7533 52.021L57.7291 52.298L57.7482 52.2996C57.7903 52.2092 57.8529 52.1413 57.936 52.0958C58.0192 52.0496 58.1153 52.0313 58.2242 52.0408C58.3346 52.0504 58.4253 52.0855 58.4963 52.1459C58.5681 52.2056 58.6155 52.2828 58.6386 52.3775L58.6556 52.379C58.6996 52.2916 58.7667 52.2248 58.857 52.1785C58.9481 52.1316 59.0528 52.1133 59.1709 52.1236C59.3209 52.1367 59.4392 52.1949 59.5257 52.298C59.6122 52.4011 59.6475 52.5435 59.6316 52.7254L59.5359 53.8195L59.1506 53.7858L59.2411 52.7511C59.25 52.6499 59.2296 52.5736 59.1799 52.5222C59.1303 52.4701 59.0665 52.4407 58.9887 52.4338C58.896 52.4257 58.821 52.4484 58.7635 52.5018C58.7069 52.5546 58.6745 52.627 58.6665 52.719L58.5775 53.7357L58.2008 53.7027L58.2927 52.6521C58.3 52.5679 58.2805 52.4984 58.2339 52.4437C58.1881 52.3891 58.1245 52.3582 58.0431 52.3511C57.9879 52.3463 57.9364 52.356 57.8887 52.3804C57.841 52.404 57.8015 52.4401 57.7701 52.4887C57.7388 52.5366 57.7203 52.5941 57.7144 52.6614L57.6277 53.6526L57.2435 53.619ZM60.3918 53.9276C60.2885 53.9185 60.1971 53.892 60.1175 53.848C60.0387 53.8033 59.9785 53.7424 59.9367 53.6653C59.8957 53.5883 59.8799 53.4964 59.8892 53.3895C59.8973 53.2976 59.9209 53.223 59.9601 53.1658C59.9993 53.1087 60.0499 53.0646 60.1118 53.0337C60.1737 53.0027 60.2422 52.9813 60.3174 52.9693C60.3933 52.9567 60.4713 52.9496 60.5513 52.9481C60.6477 52.9465 60.7259 52.9444 60.7861 52.9419C60.8462 52.9386 60.8905 52.9296 60.9189 52.915C60.948 52.8997 60.9642 52.8737 60.9674 52.8369L60.968 52.8305C60.975 52.7506 60.9567 52.6866 60.9131 52.6386C60.8695 52.5906 60.8032 52.5626 60.714 52.5548C60.6199 52.5466 60.5435 52.5606 60.4847 52.5968C60.4267 52.6331 60.3856 52.6783 60.3616 52.7326L60.0074 52.6502C60.0443 52.5536 60.0983 52.475 60.1692 52.4141C60.2402 52.3526 60.3241 52.3093 60.4212 52.2843C60.5182 52.2586 60.6237 52.2507 60.7376 52.2607C60.8162 52.2676 60.8935 52.2836 60.9698 52.3088C61.046 52.334 61.1144 52.3706 61.1751 52.4187C61.2358 52.4661 61.2825 52.5276 61.3151 52.6032C61.3484 52.6788 61.3603 52.7707 61.3509 52.879L61.2554 53.97L60.8861 53.9377L60.9057 53.7137L60.8929 53.7126C60.8656 53.7559 60.829 53.7954 60.7831 53.8313C60.7379 53.8666 60.6825 53.8935 60.6167 53.912C60.5517 53.9298 60.4767 53.935 60.3918 53.9276ZM60.5163 53.654C60.5934 53.6608 60.6616 53.6514 60.7209 53.6259C60.7802 53.5997 60.8273 53.5625 60.8622 53.5142C60.8978 53.466 60.9182 53.4118 60.9234 53.3517L60.9402 53.1596C60.9274 53.1685 60.906 53.1759 60.8763 53.1818C60.8472 53.1878 60.8147 53.1925 60.7788 53.1957C60.7429 53.199 60.7074 53.2016 60.6723 53.2035C60.6372 53.2055 60.6067 53.2071 60.5809 53.2084C60.5229 53.2111 60.4705 53.2194 60.4237 53.2331C60.3769 53.2468 60.339 53.2685 60.31 53.298C60.2811 53.3269 60.2645 53.3661 60.2602 53.4156C60.254 53.4863 60.2751 53.542 60.3236 53.5826C60.3721 53.6232 60.4363 53.647 60.5163 53.654ZM61.6417 54.0038L61.7843 52.3736L62.1685 52.4073L62.0259 54.0374L61.6417 54.0038ZM61.9977 52.1592C61.9369 52.1539 61.8863 52.1291 61.8459 52.085C61.8057 52.0401 61.788 51.989 61.7931 51.9317C61.7981 51.8737 61.8244 51.8264 61.8718 51.7899C61.9192 51.7527 61.9734 51.7368 62.0342 51.7421C62.0958 51.7475 62.1463 51.7726 62.1859 51.8174C62.2262 51.8616 62.2439 51.9127 62.2388 51.9707C62.2338 52.028 62.2075 52.0752 62.1601 52.1124C62.1134 52.149 62.0593 52.1646 61.9977 52.1592ZM62.9953 51.9321L62.8051 54.1056L62.421 54.072L62.6111 51.8984L62.9953 51.9321ZM64.5935 53.0536L64.24 53.0612C64.2332 53.0249 64.2187 52.9902 64.1967 52.9569C64.1754 52.9236 64.145 52.8957 64.1056 52.873C64.0663 52.8503 64.0169 52.8363 63.9575 52.8311C63.8775 52.8241 63.8088 52.8356 63.7513 52.8655C63.6945 52.8954 63.664 52.9381 63.6599 52.9933C63.655 53.0406 63.669 53.0807 63.7017 53.1135C63.7352 53.1464 63.7925 53.176 63.8736 53.2024L64.1465 53.2861C64.2978 53.3329 64.4078 53.3956 64.4765 53.4743C64.5459 53.5531 64.5759 53.6509 64.5663 53.7677C64.5567 53.8703 64.5187 53.9582 64.4524 54.0315C64.3868 54.1042 64.2998 54.1579 64.1912 54.1926C64.0827 54.2273 63.9605 54.2387 63.8246 54.2268C63.6251 54.2094 63.4682 54.1536 63.3538 54.0595C63.2394 53.9646 63.1772 53.8412 63.1669 53.6891L63.5447 53.6858C63.5553 53.7609 63.5865 53.8196 63.6384 53.8619C63.6903 53.9043 63.7605 53.9293 63.8489 53.937C63.9402 53.945 64.0151 53.9327 64.0735 53.9C64.1327 53.8674 64.1647 53.8235 64.1695 53.7683C64.1736 53.7216 64.159 53.6815 64.1255 53.6479C64.0928 53.6144 64.0397 53.5862 63.9661 53.5634L63.6932 53.4807C63.5396 53.4344 63.4288 53.3695 63.3605 53.2858C63.2923 53.2014 63.2638 53.0998 63.2749 52.981C63.283 52.8805 63.3178 52.7958 63.3794 52.7271C63.4418 52.6577 63.5243 52.6072 63.6269 52.5755C63.7303 52.5432 63.847 52.5327 63.9772 52.5441C64.1682 52.5608 64.315 52.6147 64.4176 52.7056C64.5208 52.7966 64.5795 52.9126 64.5935 53.0536ZM67.7247 53.4644L67.697 53.7807L64.7084 53.5192L64.7361 53.203L67.7247 53.4644ZM68.0143 55.1773C67.962 55.1727 67.9139 55.1642 67.87 55.1518C67.8269 55.1402 67.7926 55.128 67.7674 55.1151L67.8827 54.8236C67.9372 54.8447 67.9864 54.8569 68.0303 54.86C68.0742 54.8631 68.114 54.8527 68.1496 54.8287C68.1859 54.8055 68.2184 54.7642 68.2471 54.7047L68.2877 54.6195L67.8422 52.9036L68.2497 52.9393L68.5177 54.2033L68.5347 54.2047L69.0191 53.0066L69.4277 53.0424L68.6151 54.8128C68.5772 54.8964 68.5304 54.9669 68.4747 55.024C68.4191 55.0819 68.3534 55.1239 68.2776 55.1501C68.2026 55.177 68.1148 55.1861 68.0143 55.1773ZM70.2038 54.7849C70.0446 54.771 69.9097 54.7239 69.7991 54.6437C69.6885 54.5634 69.6065 54.4575 69.5531 54.3259C69.5004 54.1944 69.4815 54.0445 69.4962 53.8761C69.5109 53.7077 69.5557 53.5629 69.6304 53.4419C69.7059 53.3209 69.8051 53.2304 69.9279 53.1706C70.0508 53.1108 70.1918 53.0878 70.351 53.1017C70.5102 53.1157 70.6451 53.1628 70.7557 53.243C70.8664 53.3233 70.948 53.4295 71.0006 53.5617C71.0539 53.694 71.0732 53.8444 71.0584 54.0127C71.0437 54.1811 70.9986 54.3255 70.9232 54.4458C70.8485 54.5662 70.7497 54.6563 70.6269 54.7161C70.504 54.7759 70.363 54.7989 70.2038 54.7849ZM70.2328 54.4774C70.3191 54.4849 70.3934 54.4675 70.4555 54.4252C70.5178 54.3822 70.5666 54.3216 70.6019 54.2434C70.638 54.1653 70.6604 54.0767 70.669 53.9776C70.6777 53.8779 70.6711 53.7864 70.6492 53.7032C70.628 53.6193 70.5905 53.5508 70.5367 53.4976C70.4829 53.4444 70.4128 53.4141 70.3265 53.4065C70.2381 53.3988 70.1624 53.4164 70.0995 53.4594C70.0372 53.5024 69.988 53.5633 69.9519 53.6422C69.9166 53.7204 69.8945 53.8093 69.8858 53.9091C69.8771 54.0081 69.8834 54.0992 69.9047 54.1824C69.9266 54.2656 69.9645 54.3338 70.0183 54.3869C70.0729 54.4395 70.1444 54.4696 70.2328 54.4774ZM72.4127 54.2553L72.4954 53.3107L72.8796 53.3444L72.7369 54.9745L72.3644 54.9419L72.3898 54.6522L72.3728 54.6507C72.328 54.7387 72.261 54.8081 72.1717 54.8587C72.0832 54.9094 71.9777 54.9295 71.8553 54.9187C71.7484 54.9094 71.6561 54.8774 71.5781 54.8228C71.501 54.7676 71.4434 54.6924 71.4054 54.5971C71.3674 54.5011 71.3542 54.388 71.3656 54.2578L71.4564 53.2198L71.8406 53.2535L71.7549 54.232C71.7459 54.3353 71.767 54.4198 71.8183 54.4856C71.8696 54.5514 71.9412 54.5883 72.0332 54.5964C72.0898 54.6013 72.1458 54.5923 72.2013 54.5694C72.2568 54.5464 72.3039 54.5092 72.3426 54.4577C72.3821 54.4055 72.4055 54.3381 72.4127 54.2553ZM74.5816 55.168C74.4189 55.1537 74.2822 55.1058 74.1718 55.0241C74.062 54.9425 73.9811 54.836 73.9292 54.7045C73.878 54.5724 73.8596 54.4239 73.874 54.2591C73.8885 54.0935 73.9331 53.9502 74.0079 53.8291C74.0827 53.7073 74.1812 53.6162 74.3034 53.5555C74.4264 53.4943 74.5675 53.4706 74.7267 53.4846C74.859 53.4961 74.974 53.5308 75.0716 53.5885C75.17 53.6456 75.2457 53.721 75.2988 53.8148C75.352 53.9079 75.3777 54.0135 75.3759 54.1317L75.0087 54.0996C75.0007 54.0197 74.9711 53.9512 74.9198 53.8939C74.8692 53.836 74.7976 53.803 74.7049 53.7949C74.6264 53.7881 74.5555 53.8033 74.4924 53.8405C74.4293 53.877 74.3777 53.9331 74.3376 54.0088C74.2982 54.0844 74.2737 54.1771 74.2641 54.2868C74.2543 54.3979 74.2623 54.4948 74.2878 54.5776C74.3134 54.6597 74.3537 54.7249 74.4087 54.7732C74.4644 54.8208 74.5322 54.8482 74.6122 54.8552C74.6688 54.8601 74.7203 54.8539 74.7667 54.8366C74.8139 54.8186 74.8545 54.7905 74.8885 54.7521C74.9225 54.7137 74.9478 54.6656 74.9642 54.6079L75.3314 54.64C75.3122 54.7546 75.2693 54.8538 75.2027 54.9378C75.1363 55.0211 75.0502 55.0835 74.9447 55.1249C74.8392 55.1655 74.7181 55.1799 74.5816 55.168ZM76.3064 55.3189C76.1472 55.3049 76.0123 55.2578 75.9017 55.1776C75.7911 55.0973 75.7091 54.9914 75.6558 54.8598C75.6031 54.7283 75.5841 54.5784 75.5989 54.41C75.6136 54.2416 75.6583 54.0969 75.7331 53.9758C75.8086 53.8548 75.9077 53.7643 76.0306 53.7045C76.1535 53.6447 76.2945 53.6217 76.4537 53.6357C76.6129 53.6496 76.7478 53.6967 76.8584 53.7769C76.969 53.8572 77.0506 53.9634 77.1032 54.0957C77.1565 54.2279 77.1758 54.3783 77.1611 54.5467C77.1464 54.7151 77.1013 54.8594 77.0259 54.9797C76.9512 55.1001 76.8524 55.1902 76.7295 55.25C76.6067 55.3098 76.4656 55.3328 76.3064 55.3189ZM76.3355 55.0113C76.4218 55.0188 76.496 55.0014 76.5582 54.9591C76.6204 54.9161 76.6692 54.8555 76.7046 54.7773C76.7407 54.6992 76.763 54.6106 76.7717 54.5115C76.7804 54.4118 76.7738 54.3203 76.7519 54.2371C76.7307 54.1532 76.6932 54.0847 76.6394 54.0315C76.5856 53.9784 76.5155 53.948 76.4292 53.9404C76.3407 53.9327 76.265 53.9503 76.2021 53.9933C76.1399 54.0363 76.0907 54.0973 76.0546 54.1761C76.0192 54.2543 75.9972 54.3432 75.9885 54.443C75.9798 54.5421 75.9861 54.6331 76.0073 54.7163C76.0293 54.7995 76.0672 54.8677 76.121 54.9209C76.1755 54.9734 76.2471 55.0035 76.3355 55.0113ZM77.4164 55.3839L77.559 53.7538L77.9262 53.7859L77.902 54.0629L77.9211 54.0645C77.9632 53.9741 78.0259 53.9062 78.109 53.8607C78.1922 53.8145 78.2882 53.7962 78.3972 53.8057C78.5076 53.8154 78.5982 53.8504 78.6692 53.9108C78.741 53.9705 78.7884 54.0477 78.8115 54.1424L78.8285 54.1439C78.8725 54.0565 78.9397 53.9897 79.03 53.9434C79.1211 53.8965 79.2257 53.8782 79.3439 53.8885C79.4938 53.9016 79.6121 53.9598 79.6986 54.0629C79.7851 54.166 79.8204 54.3084 79.8045 54.4903L79.7088 55.5844L79.3235 55.5507L79.4141 54.516C79.4229 54.4148 79.4025 54.3385 79.3528 54.2871C79.3032 54.235 79.2395 54.2056 79.1616 54.1987C79.069 54.1906 78.9939 54.2133 78.9365 54.2667C78.8798 54.3195 78.8475 54.3919 78.8394 54.4839L78.7505 55.5006L78.3737 55.4676L78.4656 54.417C78.473 54.3328 78.4534 54.2633 78.4068 54.2086C78.361 54.154 78.2974 54.1231 78.216 54.116C78.1609 54.1112 78.1094 54.1209 78.0616 54.1453C78.0139 54.1689 77.9744 54.205 77.9431 54.2536C77.9118 54.3015 77.8932 54.359 77.8873 54.4263L77.8006 55.4175L77.4164 55.3839ZM80.0986 55.6185L80.2412 53.9884L80.6084 54.0205L80.5841 54.2975L80.6032 54.2992C80.6454 54.2088 80.708 54.1408 80.7911 54.0953C80.8743 54.0491 80.9704 54.0308 81.0793 54.0404C81.1897 54.05 81.2804 54.085 81.3514 54.1454C81.4232 54.2052 81.4706 54.2824 81.4937 54.3771L81.5106 54.3786C81.5547 54.2912 81.6218 54.2243 81.7121 54.1781C81.8032 54.1311 81.9078 54.1128 82.026 54.1232C82.176 54.1363 82.2942 54.1944 82.3808 54.2975C82.4673 54.4006 82.5026 54.5431 82.4867 54.7249L82.3909 55.8191L82.0057 55.7854L82.0962 54.7506C82.1051 54.6495 82.0846 54.5732 82.035 54.5218C81.9853 54.4697 81.9216 54.4402 81.8438 54.4334C81.7511 54.4253 81.676 54.448 81.6186 54.5014C81.5619 54.5542 81.5296 54.6266 81.5215 54.7185L81.4326 55.7353L81.0558 55.7023L81.1478 54.6516C81.1551 54.5674 81.1355 54.498 81.089 54.4433C81.0431 54.3887 80.9795 54.3578 80.8982 54.3507C80.843 54.3458 80.7915 54.3556 80.7438 54.3799C80.6961 54.4036 80.6565 54.4397 80.6252 54.4883C80.5939 54.5362 80.5753 54.5937 80.5695 54.6609L80.4827 55.6522L80.0986 55.6185ZM83.2469 55.9271C83.1436 55.9181 83.0522 55.8916 82.9726 55.8475C82.8938 55.8029 82.8336 55.742 82.7918 55.6649C82.7508 55.5879 82.7349 55.4959 82.7443 55.3891C82.7523 55.2971 82.776 55.2226 82.8152 55.1654C82.8544 55.1082 82.905 55.0642 82.9669 55.0332C83.0287 55.0023 83.0973 54.9808 83.1725 54.9689C83.2484 54.9563 83.3264 54.9492 83.4064 54.9476C83.5028 54.9461 83.581 54.944 83.6411 54.9414C83.7013 54.9381 83.7456 54.9292 83.7739 54.9145C83.8031 54.8993 83.8193 54.8732 83.8225 54.8364L83.823 54.8301C83.83 54.7501 83.8118 54.6861 83.7682 54.6381C83.7246 54.5901 83.6583 54.5622 83.5691 54.5544C83.475 54.5462 83.3986 54.5602 83.3398 54.5964C83.2817 54.6326 83.2407 54.6779 83.2167 54.7321L82.8624 54.6498C82.8994 54.5532 82.9534 54.4745 83.0243 54.4137C83.0952 54.3522 83.1792 54.3089 83.2762 54.2839C83.3733 54.2582 83.4788 54.2503 83.5927 54.2602C83.6712 54.2671 83.7486 54.2832 83.8248 54.3084C83.9011 54.3336 83.9695 54.3702 84.0302 54.4183C84.0909 54.4657 84.1376 54.5271 84.1702 54.6027C84.2035 54.6783 84.2154 54.7703 84.2059 54.8785L84.1105 55.9695L83.7412 55.9372L83.7607 55.7133L83.748 55.7122C83.7207 55.7554 83.6841 55.795 83.6382 55.8309C83.593 55.8662 83.5376 55.893 83.4718 55.9115C83.4068 55.9294 83.3318 55.9346 83.2469 55.9271ZM83.3714 55.6536C83.4485 55.6603 83.5167 55.651 83.5759 55.6255C83.6353 55.5993 83.6824 55.5621 83.7172 55.5138C83.7528 55.4656 83.7733 55.4114 83.7785 55.3513L83.7953 55.1592C83.7824 55.168 83.7611 55.1754 83.7314 55.1814C83.7023 55.1874 83.6698 55.192 83.6339 55.1953C83.598 55.1986 83.5624 55.2012 83.5273 55.2031C83.4922 55.205 83.4618 55.2066 83.436 55.2079C83.378 55.2107 83.3256 55.219 83.2788 55.2327C83.232 55.2464 83.1941 55.268 83.1651 55.2976C83.1362 55.3264 83.1196 55.3656 83.1152 55.4151C83.1091 55.4859 83.1302 55.5416 83.1787 55.5822C83.2272 55.6228 83.2914 55.6466 83.3714 55.6536ZM84.9645 55.0818L84.881 56.037L84.4968 56.0033L84.6394 54.3732L85.0066 54.4053L84.9824 54.6823L85.0015 54.684C85.047 54.596 85.1131 54.5287 85.1999 54.4821C85.2874 54.4356 85.3919 54.4177 85.5136 54.4283C85.6261 54.4381 85.722 54.4708 85.8013 54.5262C85.8813 54.5817 85.9403 54.6571 85.9783 54.7524C86.017 54.8477 86.0303 54.9604 86.0182 55.0906L85.9274 56.1285L85.5432 56.0949L85.6288 55.1164C85.6384 55.0074 85.6175 54.9197 85.5663 54.8532C85.5158 54.7867 85.441 54.7492 85.342 54.7405C85.2747 54.7346 85.2137 54.7443 85.1587 54.7694C85.1045 54.7939 85.0601 54.8324 85.0256 54.885C84.9918 54.9377 84.9714 55.0033 84.9645 55.0818ZM86.9204 56.2443C86.7923 56.2331 86.6806 56.1901 86.5852 56.1155C86.4897 56.0408 86.4182 55.9383 86.3704 55.8079C86.3226 55.6776 86.3066 55.5229 86.3222 55.3439C86.3381 55.1628 86.3812 55.0125 86.4515 54.8932C86.5226 54.7732 86.6119 54.6859 86.7193 54.6311C86.8268 54.5756 86.9432 54.5534 87.0684 54.5643C87.1639 54.5727 87.2411 54.5958 87.2998 54.6338C87.3585 54.671 87.404 54.7138 87.4361 54.7623C87.4683 54.81 87.4925 54.8545 87.5089 54.8959L87.5248 54.8973L87.5959 54.0843L87.9812 54.118L87.791 56.2916L87.4132 56.2585L87.4357 56.0017L87.4123 55.9996C87.3891 56.0375 87.3567 56.0771 87.3153 56.1184C87.274 56.159 87.2212 56.1921 87.1569 56.2179C87.0926 56.2436 87.0138 56.2524 86.9204 56.2443ZM87.0552 55.9384C87.1365 55.9455 87.2078 55.9297 87.2689 55.8908C87.3301 55.8513 87.3791 55.7932 87.4157 55.7165C87.4524 55.6399 87.4753 55.5489 87.4845 55.4434C87.4937 55.338 87.4869 55.2451 87.464 55.1647C87.4418 55.0843 87.4039 55.02 87.3504 54.9718C87.2976 54.9237 87.2298 54.8961 87.147 54.8888C87.0614 54.8813 86.988 54.8974 86.9268 54.9369C86.8655 54.9765 86.817 55.0343 86.7811 55.1103C86.7452 55.1863 86.7229 55.2748 86.714 55.376C86.7051 55.4779 86.7117 55.5701 86.7337 55.6526C86.7565 55.7344 86.7945 55.8008 86.8478 55.8518C86.9018 55.9022 86.971 55.9311 87.0552 55.9384ZM89.8984 54.8333L89.8724 55.1305L88.9352 55.0485L88.9612 54.7513L89.8984 54.8333ZM89.2268 54.381L89.6109 54.4146L89.4771 55.945C89.4725 55.9966 89.4769 56.0369 89.49 56.0659C89.5039 56.0942 89.5235 56.1145 89.5489 56.1267C89.5742 56.1389 89.6027 56.1463 89.6346 56.1491C89.6586 56.1512 89.6807 56.1514 89.7008 56.1496C89.7217 56.1478 89.7375 56.146 89.7484 56.1441L89.7868 56.4501C89.7657 56.4554 89.7357 56.4606 89.6967 56.4658C89.6585 56.471 89.612 56.4719 89.5574 56.4686C89.461 56.463 89.3756 56.4409 89.3012 56.4023C89.227 56.363 89.1702 56.3074 89.1308 56.2355C89.0922 56.1637 89.0777 56.0769 89.0873 55.9751L89.2268 54.381ZM90.5798 55.5731L90.4962 56.5282L90.1121 56.4946L90.3022 54.3211L90.6779 54.354L90.6061 55.1743L90.6252 55.176C90.6715 55.0874 90.7369 55.02 90.8215 54.974C90.9069 54.9272 91.0118 54.9093 91.1363 54.9202C91.2495 54.9301 91.3462 54.9625 91.4262 55.0172C91.5063 55.072 91.5653 55.147 91.6033 55.2423C91.642 55.3377 91.6556 55.4512 91.6441 55.5828L91.5533 56.6207L91.1691 56.5871L91.2547 55.6086C91.2643 55.4989 91.2435 55.4112 91.1922 55.3454C91.1417 55.2789 91.0658 55.2413 90.9647 55.2324C90.8967 55.2265 90.8346 55.236 90.7782 55.2611C90.7226 55.2854 90.6772 55.3239 90.6419 55.3764C90.6074 55.429 90.5867 55.4945 90.5798 55.5731ZM92.6638 56.7499C92.5004 56.7356 92.3622 56.6893 92.2493 56.611C92.1371 56.532 92.0547 56.4272 92.0019 56.2964C91.9493 56.1649 91.9304 56.0138 91.9453 55.8433C91.96 55.6756 92.0047 55.5313 92.0795 55.4102C92.155 55.2885 92.2535 55.1973 92.375 55.1366C92.4966 55.0752 92.6352 55.0514 92.7909 55.065C92.8914 55.0738 92.9847 55.0983 93.071 55.1387C93.1581 55.1784 93.233 55.2348 93.2958 55.3081C93.3592 55.3813 93.4062 55.4717 93.4367 55.5792C93.4673 55.686 93.4764 55.8108 93.4639 55.9537L93.4536 56.0715L92.1174 55.9546L92.14 55.6957L93.1079 55.7804C93.1137 55.7067 93.1035 55.6399 93.0774 55.5798C93.0513 55.5191 93.0118 55.4697 92.9588 55.4315C92.9065 55.3934 92.8436 55.3712 92.77 55.3647C92.6915 55.3579 92.6208 55.3709 92.558 55.4039C92.4953 55.4362 92.4447 55.4817 92.406 55.5403C92.3681 55.5983 92.3457 55.6638 92.3386 55.7366L92.3188 55.9626C92.3105 56.0574 92.3207 56.1403 92.3495 56.2113C92.3782 56.2815 92.4222 56.3374 92.4813 56.3789C92.5405 56.4198 92.6118 56.4438 92.6953 56.4511C92.7512 56.456 92.8024 56.4527 92.8491 56.4411C92.8958 56.4287 92.9371 56.4085 92.9731 56.3803C93.0091 56.352 93.0376 56.3157 93.0586 56.2712L93.4138 56.3429C93.3828 56.4357 93.3324 56.5147 93.2626 56.5799C93.1935 56.6444 93.108 56.6919 93.0063 56.7222C92.9046 56.7518 92.7904 56.761 92.6638 56.7499ZM93.7165 56.81L93.8591 55.1798L94.2263 55.2119L94.202 55.4889L94.2211 55.4906C94.2633 55.4002 94.3259 55.3322 94.409 55.2868C94.4922 55.2406 94.5883 55.2222 94.6972 55.2318C94.8076 55.2414 94.8983 55.2764 94.9693 55.3368C95.0411 55.3966 95.0885 55.4738 95.1116 55.5685L95.1285 55.57C95.1726 55.4826 95.2397 55.4158 95.33 55.3695C95.4211 55.3225 95.5257 55.3042 95.6439 55.3146C95.7939 55.3277 95.9121 55.3858 95.9987 55.4889C96.0852 55.592 96.1205 55.7345 96.1046 55.9163L96.0088 57.0105L95.6236 56.9768L95.7141 55.9421C95.723 55.8409 95.7026 55.7646 95.6529 55.7132C95.6032 55.6611 95.5395 55.6316 95.4617 55.6248C95.369 55.6167 95.2939 55.6394 95.2365 55.6928C95.1798 55.7456 95.1475 55.818 95.1394 55.91L95.0505 56.9267L94.6737 56.8937L94.7657 55.843C94.773 55.7588 94.7534 55.6894 94.7069 55.6347C94.661 55.5801 94.5974 55.5492 94.5161 55.5421C94.4609 55.5373 94.4094 55.547 94.3617 55.5714C94.314 55.595 94.2744 55.6311 94.2431 55.6797C94.2118 55.7276 94.1932 55.7851 94.1874 55.8523L94.1006 56.8436L93.7165 56.81ZM96.6332 57.0887C96.5688 57.083 96.5156 57.0556 96.4736 57.0063C96.4316 56.957 96.4138 56.8998 96.4202 56.8348C96.425 56.771 96.4524 56.7185 96.5024 56.6773C96.5523 56.636 96.6095 56.6182 96.6739 56.6238C96.7361 56.6293 96.7883 56.6567 96.8303 56.706C96.8731 56.7553 96.892 56.8119 96.8871 56.8756C96.8826 56.9187 96.8679 56.957 96.8429 56.9904C96.8185 57.024 96.7878 57.0498 96.7505 57.0679C96.7141 57.0854 96.675 57.0923 96.6332 57.0887ZM25.1948 60.8533L24.7715 58.6261L25.1949 58.6632L25.4468 60.2946L25.467 60.2964L26.0249 58.7358L26.4101 58.7695L26.6895 60.4044L26.7086 60.4061L27.24 58.8421L27.6635 58.8791L26.8599 60.999L26.4715 60.965L26.1698 59.4018L26.1528 59.4004L25.5832 60.8873L25.1948 60.8533ZM28.2819 61.1555C28.1185 61.1412 27.9803 61.0948 27.8674 61.0165C27.7552 60.9376 27.6728 60.8327 27.6201 60.7019C27.5674 60.5704 27.5485 60.4194 27.5634 60.2488C27.5781 60.0812 27.6228 59.9368 27.6976 59.8157C27.7731 59.694 27.8716 59.6028 27.9932 59.5421C28.1147 59.4808 28.2533 59.4569 28.409 59.4705C28.5095 59.4793 28.6029 59.5039 28.6892 59.5442C28.7762 59.5839 28.8511 59.6404 28.9139 59.7136C28.9773 59.7869 29.0243 59.8772 29.0549 59.9847C29.0854 60.0915 29.0945 60.2163 29.082 60.3592L29.0717 60.477L27.7355 60.3601L27.7582 60.1012L28.7261 60.1859C28.7318 60.1122 28.7216 60.0454 28.6955 59.9853C28.6694 59.9246 28.6299 59.8752 28.5769 59.837C28.5246 59.7989 28.4617 59.7767 28.3881 59.7702C28.3096 59.7634 28.2389 59.7764 28.1762 59.8094C28.1134 59.8417 28.0628 59.8872 28.0241 59.9459C27.9863 60.0039 27.9638 60.0693 27.9567 60.1421L27.9369 60.3681C27.9286 60.4629 27.9388 60.5458 27.9676 60.6168C27.9964 60.687 28.0403 60.7429 28.0994 60.7844C28.1586 60.8253 28.2299 60.8493 28.3134 60.8566C28.3693 60.8615 28.4206 60.8582 28.4672 60.8466C28.5139 60.8343 28.5552 60.814 28.5912 60.7858C28.6272 60.7575 28.6557 60.7212 28.6767 60.6767L29.0319 60.7484C29.001 60.8412 28.9505 60.9202 28.8807 60.9854C28.8116 61.0499 28.7262 61.0974 28.6244 61.1277C28.5227 61.1573 28.4086 61.1665 28.2819 61.1555ZM29.9089 59.0756L29.7188 61.2491L29.3346 61.2155L29.5247 59.042L29.9089 59.0756ZM30.8221 61.3777C30.6594 61.3635 30.5228 61.3155 30.4123 61.2338C30.3025 61.1522 30.2216 61.0457 30.1697 60.9142C30.1185 60.7821 30.1001 60.6337 30.1145 60.4688C30.129 60.3033 30.1736 60.1599 30.2484 60.0389C30.3232 59.9171 30.4217 59.8259 30.544 59.7653C30.6669 59.704 30.808 59.6804 30.9672 59.6943C31.0995 59.7059 31.2145 59.7405 31.3121 59.7983C31.4105 59.8554 31.4862 59.9308 31.5394 60.0245C31.5925 60.1176 31.6182 60.2232 31.6164 60.3414L31.2492 60.3093C31.2412 60.2295 31.2116 60.1609 31.1603 60.1037C31.1097 60.0458 31.0381 60.0128 30.9454 60.0047C30.8669 59.9978 30.7961 60.013 30.7329 60.0502C30.6698 60.0868 30.6182 60.1429 30.5781 60.2185C30.5387 60.2942 30.5142 60.3869 30.5046 60.4965C30.4949 60.6076 30.5028 60.7045 30.5283 60.7873C30.5539 60.8694 30.5942 60.9346 30.6492 60.9829C30.7049 61.0306 30.7727 61.0579 30.8527 61.0649C30.9093 61.0698 30.9608 61.0637 31.0072 61.0463C31.0544 61.0284 31.095 61.0002 31.129 60.9618C31.1631 60.9234 31.1883 60.8754 31.2047 60.8177L31.572 60.8498C31.5527 60.9643 31.5098 61.0636 31.4432 61.1476C31.3768 61.2309 31.2908 61.2932 31.1852 61.3346C31.0797 61.3753 30.9586 61.3896 30.8221 61.3777ZM32.547 61.5286C32.3878 61.5147 32.2529 61.4676 32.1422 61.3873C32.0316 61.3071 31.9496 61.2011 31.8963 61.0696C31.8436 60.9381 31.8247 60.7881 31.8394 60.6197C31.8541 60.4513 31.8989 60.3066 31.9736 60.1855C32.0491 60.0645 32.1482 59.9741 32.2711 59.9143C32.394 59.8544 32.535 59.8315 32.6942 59.8454C32.8534 59.8593 32.9883 59.9064 33.0989 59.9867C33.2095 60.0669 33.2911 60.1732 33.3437 60.3054C33.397 60.4377 33.4163 60.588 33.4016 60.7564C33.3869 60.9248 33.3418 61.0691 33.2664 61.1894C33.1917 61.3098 33.0929 61.3999 32.97 61.4597C32.8472 61.5196 32.7061 61.5425 32.547 61.5286ZM32.576 61.221C32.6623 61.2286 32.7366 61.2112 32.7987 61.1689C32.861 61.1258 32.9097 61.0652 32.9451 60.987C32.9812 60.9089 33.0035 60.8203 33.0122 60.7213C33.0209 60.6215 33.0143 60.53 32.9924 60.4468C32.9712 60.363 32.9337 60.2945 32.8799 60.2413C32.8261 60.1881 32.756 60.1577 32.6697 60.1502C32.5812 60.1424 32.5056 60.1601 32.4426 60.203C32.3804 60.2461 32.3312 60.307 32.2951 60.3858C32.2597 60.464 32.2377 60.553 32.229 60.6527C32.2203 60.7518 32.2266 60.8429 32.2478 60.926C32.2698 61.0092 32.3077 61.0774 32.3615 61.1306C32.4161 61.1831 32.4876 61.2133 32.576 61.221ZM33.6569 61.5936L33.7995 59.9635L34.1667 59.9956L34.1425 60.2726L34.1616 60.2743C34.2038 60.1839 34.2664 60.1159 34.3495 60.0704C34.4327 60.0242 34.5287 60.0059 34.6377 60.0154C34.7481 60.0251 34.8388 60.0601 34.9098 60.1205C34.9815 60.1803 35.029 60.2575 35.052 60.3522L35.069 60.3537C35.113 60.2663 35.1802 60.1994 35.2705 60.1531C35.3616 60.1062 35.4662 60.0879 35.5844 60.0983C35.7344 60.1114 35.8526 60.1695 35.9391 60.2726C36.0256 60.3757 36.0609 60.5182 36.045 60.7L35.9493 61.7942L35.5641 61.7605L35.6546 60.7257C35.6634 60.6246 35.643 60.5483 35.5933 60.4969C35.5437 60.4448 35.48 60.4153 35.4022 60.4085C35.3095 60.4004 35.2344 60.423 35.177 60.4765C35.1203 60.5293 35.088 60.6017 35.0799 60.6936L34.991 61.7103L34.6142 61.6774L34.7061 60.6267C34.7135 60.5425 34.6939 60.4731 34.6474 60.4184C34.6015 60.3637 34.5379 60.3329 34.4566 60.3258C34.4014 60.3209 34.3499 60.3307 34.3021 60.355C34.2544 60.3787 34.2149 60.4148 34.1836 60.4634C34.1523 60.5112 34.1337 60.5688 34.1278 60.636L34.0411 61.6272L33.6569 61.5936ZM37.058 61.9233C36.8945 61.909 36.7563 61.8627 36.6434 61.7843C36.5313 61.7054 36.4488 61.6005 36.3961 61.4697C36.3434 61.3382 36.3246 61.1872 36.3395 61.0166C36.3542 60.849 36.3989 60.7046 36.4736 60.5835C36.5492 60.4618 36.6477 60.3706 36.7692 60.3099C36.8908 60.2486 37.0294 60.2247 37.185 60.2383C37.2855 60.2471 37.3789 60.2717 37.4652 60.312C37.5523 60.3517 37.6272 60.4082 37.6899 60.4814C37.7534 60.5547 37.8004 60.645 37.8309 60.7525C37.8615 60.8593 37.8705 60.9841 37.858 61.127L37.8477 61.2448L36.5116 61.1279L36.5342 60.869L37.5021 60.9537C37.5078 60.88 37.4976 60.8132 37.4715 60.7532C37.4455 60.6924 37.4059 60.643 37.353 60.6048C37.3007 60.5667 37.2378 60.5445 37.1642 60.538C37.0856 60.5312 37.015 60.5442 36.9522 60.5772C36.8895 60.6095 36.8388 60.655 36.8002 60.7137C36.7623 60.7717 36.7398 60.8371 36.7328 60.9099L36.713 61.1359C36.7047 61.2307 36.7149 61.3136 36.7436 61.3846C36.7724 61.4548 36.8164 61.5107 36.8755 61.5523C36.9346 61.5931 37.006 61.6171 37.0894 61.6244C37.1453 61.6293 37.1966 61.626 37.2432 61.6144C37.29 61.6021 37.3313 61.5818 37.3673 61.5536C37.4033 61.5254 37.4317 61.489 37.4527 61.4445L37.8079 61.5162C37.777 61.609 37.7266 61.688 37.6567 61.7532C37.5876 61.8177 37.5022 61.8652 37.4005 61.8955C37.2988 61.9251 37.1846 61.9343 37.058 61.9233ZM39.8086 60.4892L39.7826 60.7864L38.8454 60.7044L38.8714 60.4072L39.8086 60.4892ZM39.137 60.0369L39.5212 60.0705L39.3873 61.6009C39.3827 61.6526 39.3871 61.6929 39.4002 61.7218C39.4141 61.7501 39.4337 61.7704 39.4591 61.7826C39.4844 61.7948 39.5129 61.8023 39.5448 61.805C39.5688 61.8071 39.5909 61.8073 39.611 61.8055C39.6319 61.8037 39.6477 61.8019 39.6586 61.8L39.697 62.106C39.6759 62.1113 39.6459 62.1165 39.6069 62.1217C39.5687 62.1269 39.5222 62.1278 39.4676 62.1245C39.3712 62.1189 39.2858 62.0968 39.2114 62.0582C39.1372 62.0189 39.0804 61.9633 39.041 61.8914C39.0024 61.8196 38.9879 61.7328 38.9975 61.631L39.137 60.0369ZM40.678 62.24C40.5188 62.226 40.3839 62.179 40.2733 62.0987C40.1627 62.0184 40.0807 61.9125 40.0273 61.781C39.9747 61.6494 39.9557 61.4995 39.9704 61.3311C39.9852 61.1627 40.0299 61.018 40.1047 60.8969C40.1801 60.7759 40.2793 60.6855 40.4022 60.6256C40.525 60.5658 40.6661 60.5428 40.8253 60.5568C40.9845 60.5707 41.1194 60.6178 41.23 60.6981C41.3406 60.7783 41.4222 60.8846 41.4748 61.0168C41.5281 61.149 41.5474 61.2994 41.5326 61.4678C41.5179 61.6362 41.4728 61.7805 41.3974 61.9008C41.3227 62.0212 41.224 62.1113 41.1011 62.1711C40.9782 62.231 40.8372 62.2539 40.678 62.24ZM40.7071 61.9324C40.7934 61.9399 40.8676 61.9226 40.9298 61.8802C40.992 61.8372 41.0408 61.7766 41.0762 61.6984C41.1122 61.6203 41.1346 61.5317 41.1432 61.4326C41.152 61.3329 41.1454 61.2414 41.1234 61.1582C41.1022 61.0744 41.0647 61.0058 41.0109 60.9527C40.9571 60.8995 40.8871 60.8691 40.8007 60.8616C40.7123 60.8538 40.6366 60.8714 40.5737 60.9144C40.5115 60.9574 40.4623 61.0184 40.4261 61.0972C40.3908 61.1754 40.3687 61.2644 40.36 61.3641C40.3514 61.4632 40.3576 61.5543 40.3789 61.6374C40.4008 61.7206 40.4387 61.7888 40.4925 61.842C40.5471 61.8945 40.6186 61.9247 40.7071 61.9324ZM43.3248 62.4812C43.1501 62.4659 43.0039 62.4085 42.8864 62.3091C42.7697 62.2091 42.6851 62.0723 42.6325 61.8987C42.5808 61.7245 42.5652 61.5189 42.586 61.2819C42.6074 61.0449 42.6587 60.8462 42.7397 60.6858C42.8215 60.5247 42.9286 60.4057 43.0608 60.3289C43.1937 60.2521 43.3471 60.2213 43.5212 60.2365C43.6952 60.2518 43.841 60.3087 43.9586 60.4074C44.0762 60.5061 44.1609 60.6419 44.2128 60.8146C44.2654 60.9875 44.2814 61.1921 44.2607 61.4284C44.2399 61.6661 44.1885 61.8662 44.1066 62.0288C44.0254 62.1906 43.9183 62.3103 43.7853 62.3878C43.6531 62.4653 43.4996 62.4965 43.3248 62.4812ZM43.3539 62.149C43.4897 62.1609 43.6028 62.1034 43.693 61.9765C43.784 61.849 43.8409 61.6548 43.8638 61.3937C43.8789 61.221 43.8735 61.0744 43.8477 60.9538C43.8219 60.8332 43.7787 60.7403 43.7181 60.6751C43.6576 60.6092 43.5824 60.5723 43.4925 60.5645C43.3574 60.5527 43.2446 60.6105 43.1544 60.7381C43.0641 60.8649 43.0073 61.0578 42.984 61.3167C42.9681 61.49 42.9727 61.6373 42.9977 61.7585C43.0234 61.8798 43.0666 61.9734 43.1271 62.0393C43.1877 62.1045 43.2633 62.1411 43.3539 62.149Z" fill="#64748B"/>
<mask id="mask0_1_5" style="mask-type:alpha" maskUnits="userSpaceOnUse" x="0" y="-3" width="144" height="143">
<path d="M0 50.8503C0 48.3458 0 47.0935 0.345206 45.9568C0.650815 44.9505 1.15185 44.0143 1.81963 43.2018C2.57395 42.284 3.61591 41.5894 5.69984 40.2001L64.8998 0.733442C67.4659 -0.977264 68.7489 -1.83262 70.1357 -2.16494C71.3612 -2.45862 72.6388 -2.45862 73.8643 -2.16494C75.2511 -1.83262 76.5341 -0.977264 79.1002 0.733441L138.3 40.2001C140.384 41.5894 141.426 42.284 142.18 43.2018C142.848 44.0143 143.349 44.9505 143.655 45.9568C144 47.0935 144 48.3458 144 50.8504V127.2C144 131.68 144 133.921 143.128 135.632C142.361 137.137 141.137 138.361 139.632 139.128C137.921 140 135.68 140 131.2 140H12.8C8.31958 140 6.07937 140 4.36808 139.128C2.86278 138.361 1.63893 137.137 0.871948 135.632C0 133.921 0 131.68 0 127.2V50.8503Z" fill="black"/>
</mask>
<g mask="url(#mask0_1_5)">
<g filter="url(#filter2_di_1_5)">
<path d="M0 44L-4.19629e-06 140L48.9267 102.121C53.3785 98.6747 55.6044 96.9514 56.4054 94.8541C57.1073 93.0161 57.1073 90.9839 56.4054 89.1459C55.6044 87.0486 53.3785 85.3253 48.9267 81.8787L0 44Z" fill="url(#paint4_linear_1_5)"/>
</g>
<path fill-rule="evenodd" clip-rule="evenodd" d="M-1 41.9612L-1 142.039L54.4414 99.1166C59.0953 95.5135 59.0953 88.4866 54.4414 84.8835L-1 41.9612ZM-8.91213e-08 44L53.8292 85.6743C57.966 88.877 57.966 95.1231 53.8292 98.3258L-4.28541e-06 140L-8.91213e-08 44Z" fill="#475569" fill-opacity="0.1"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M144.932 41.9612L144.932 142.039L89.4905 99.1166C84.8366 95.5135 84.8366 88.4866 89.4905 84.8835L144.932 41.9612ZM143.932 44L90.1027 85.6743C85.9659 88.877 85.9659 95.1231 90.1027 98.3258L143.932 140L143.932 44Z" fill="#475569" fill-opacity="0.1"/>
<g filter="url(#filter3_di_1_5)">
<path d="M144 44L144 140L95.0733 102.121C90.6215 98.6747 88.3956 96.9514 87.5946 94.8541C86.8927 93.0161 86.8927 90.9839 87.5946 89.1459C88.3956 87.0486 90.6215 85.3253 95.0733 81.8787L144 44Z" fill="url(#paint5_linear_1_5)"/>
</g>
<g style="mix-blend-mode:multiply" opacity="0.4">
<g filter="url(#filter4_f_1_5)">
<path d="M3 140H141L80.5551 85.6872C77.5309 82.9698 76.0187 81.611 74.3091 81.0956C72.8032 80.6416 71.1968 80.6416 69.6909 81.0956C67.9813 81.611 66.4691 82.9698 63.4449 85.6872L3 140Z" fill="#334155" fill-opacity="0.4"/>
</g>
<g filter="url(#filter5_f_1_5)">
<path d="M11 140H133L81.5281 82.6215C78.2296 78.9444 76.5803 77.1059 74.6365 76.4274C72.9294 75.8315 71.0706 75.8315 69.3635 76.4274C67.4197 77.1059 65.7704 78.9444 62.4719 82.6215L11 140Z" fill="#334155" fill-opacity="0.2"/>
</g>
<g filter="url(#filter6_f_1_5)">
<path d="M3 140H141L81.3617 76.0401C78.1077 72.5502 76.4806 70.8053 74.5783 70.1576C72.9065 69.5885 71.0935 69.5885 69.4217 70.1576C67.5194 70.8053 65.8924 72.5502 62.6383 76.0401L3 140Z" fill="#344256" fill-opacity="0.1"/>
</g>
</g>
<g filter="url(#filter7_i_1_5)">
<path d="M0 140H144L80.3523 85.1923C77.389 82.6405 75.9073 81.3647 74.2444 80.8786C72.7788 80.4502 71.2212 80.4502 69.7556 80.8786C68.0927 81.3647 66.611 82.6405 63.6477 85.1923L0 140Z" fill="url(#paint6_linear_1_5)"/>
</g>
<path d="M1.5 138L63.5242 84.7736C66.5319 82.1925 68.0357 80.902 69.7224 80.4108C71.209 79.978 72.7882 79.9789 74.2743 80.4134C75.9604 80.9065 77.4628 82.1987 80.4675 84.7833L143.5 139" stroke="#475569" stroke-opacity="0.06"/>
<g filter="url(#filter8_f_1_5)">
<path d="M0 62.5L0 140H144V62.5" stroke="url(#paint7_linear_1_5)" stroke-width="16"/>
</g>
<path d="M0 48V127.2C0 131.68 0 133.921 0.871948 135.632C1.63893 137.137 2.86278 138.361 4.36808 139.128C6.07937 140 8.31958 140 12.8 140H131.2C135.68 140 137.921 140 139.632 139.128C141.137 138.361 142.361 137.137 143.128 135.632C144 133.921 144 131.68 144 127.2V48" stroke="white" stroke-opacity="0.4" stroke-width="2" stroke-linecap="round"/>
</g>
</g>
<defs>
<filter id="filter0_dddd_1_5" x="-13" y="17" width="170" height="166" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
<feFlood flood-opacity="0" result="BackgroundImageFix"/>
<feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>
<feOffset dy="2"/>
<feGaussianBlur stdDeviation="2"/>
<feColorMatrix type="matrix" values="0 0 0 0 0.117647 0 0 0 0 0.160784 0 0 0 0 0.231373 0 0 0 0.08 0"/>
<feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_1_5"/>
<feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>
<feOffset dy="8"/>
<feGaussianBlur stdDeviation="4"/>
<feColorMatrix type="matrix" values="0 0 0 0 0.117647 0 0 0 0 0.160784 0 0 0 0 0.231373 0 0 0 0.07 0"/>
<feBlend mode="normal" in2="effect1_dropShadow_1_5" result="effect2_dropShadow_1_5"/>
<feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>
<feOffset dy="17"/>
<feGaussianBlur stdDeviation="5"/>
<feColorMatrix type="matrix" values="0 0 0 0 0.117647 0 0 0 0 0.160784 0 0 0 0 0.231373 0 0 0 0.04 0"/>
<feBlend mode="normal" in2="effect2_dropShadow_1_5" result="effect3_dropShadow_1_5"/>
<feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>
<feOffset dy="30"/>
<feGaussianBlur stdDeviation="6"/>
<feColorMatrix type="matrix" values="0 0 0 0 0.117647 0 0 0 0 0.160784 0 0 0 0 0.231373 0 0 0 0.01 0"/>
<feBlend mode="normal" in2="effect3_dropShadow_1_5" result="effect4_dropShadow_1_5"/>
<feBlend mode="normal" in="SourceGraphic" in2="effect4_dropShadow_1_5" result="shape"/>
</filter>
<filter id="filter1_f_1_5" x="-1.52826" y="16.1295" width="144.551" height="80.7371" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
<feFlood flood-opacity="0" result="BackgroundImageFix"/>
<feBlend mode="normal" in="SourceGraphic" in2="BackgroundImageFix" result="shape"/>
<feGaussianBlur stdDeviation="5" result="effect1_foregroundBlur_1_5"/>
</filter>
<filter id="filter2_di_1_5" x="-2" y="38" width="76.9318" height="116" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
<feFlood flood-opacity="0" result="BackgroundImageFix"/>
<feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>
<feOffset dx="8" dy="4"/>
<feGaussianBlur stdDeviation="5"/>
<feComposite in2="hardAlpha" operator="out"/>
<feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.1 0"/>
<feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_1_5"/>
<feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_1_5" result="shape"/>
<feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>
<feOffset dy="1"/>
<feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1"/>
<feColorMatrix type="matrix" values="0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.6 0"/>
<feBlend mode="normal" in2="shape" result="effect2_innerShadow_1_5"/>
</filter>
<filter id="filter3_di_1_5" x="69.0682" y="38" width="76.9318" height="116" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
<feFlood flood-opacity="0" result="BackgroundImageFix"/>
<feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>
<feOffset dx="-8" dy="4"/>
<feGaussianBlur stdDeviation="5"/>
<feComposite in2="hardAlpha" operator="out"/>
<feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.1 0"/>
<feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_1_5"/>
<feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_1_5" result="shape"/>
<feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>
<feOffset dy="1"/>
<feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1"/>
<feColorMatrix type="matrix" values="0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.6 0"/>
<feBlend mode="normal" in2="shape" result="effect2_innerShadow_1_5"/>
</filter>
<filter id="filter4_f_1_5" x="-1" y="76.7551" width="146" height="67.2449" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
<feFlood flood-opacity="0" result="BackgroundImageFix"/>
<feBlend mode="normal" in="SourceGraphic" in2="BackgroundImageFix" result="shape"/>
<feGaussianBlur stdDeviation="2" result="effect1_foregroundBlur_1_5"/>
</filter>
<filter id="filter5_f_1_5" x="-1" y="63.9805" width="146" height="88.0195" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
<feFlood flood-opacity="0" result="BackgroundImageFix"/>
<feBlend mode="normal" in="SourceGraphic" in2="BackgroundImageFix" result="shape"/>
<feGaussianBlur stdDeviation="6" result="effect1_foregroundBlur_1_5"/>
</filter>
<filter id="filter6_f_1_5" x="-21" y="45.7308" width="186" height="118.269" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
<feFlood flood-opacity="0" result="BackgroundImageFix"/>
<feBlend mode="normal" in="SourceGraphic" in2="BackgroundImageFix" result="shape"/>
<feGaussianBlur stdDeviation="12" result="effect1_foregroundBlur_1_5"/>
</filter>
<filter id="filter7_i_1_5" x="0" y="80.5574" width="144" height="59.4429" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
<feFlood flood-opacity="0" result="BackgroundImageFix"/>
<feBlend mode="normal" in="SourceGraphic" in2="BackgroundImageFix" result="shape"/>
<feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>
<feOffset dy="1"/>
<feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1"/>
<feColorMatrix type="matrix" values="0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.6 0"/>
<feBlend mode="normal" in2="shape" result="effect1_innerShadow_1_5"/>
</filter>
<filter id="filter8_f_1_5" x="-16" y="54.5" width="176" height="101.5" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
<feFlood flood-opacity="0" result="BackgroundImageFix"/>
<feBlend mode="normal" in="SourceGraphic" in2="BackgroundImageFix" result="shape"/>
<feGaussianBlur stdDeviation="4" result="effect1_foregroundBlur_1_5"/>
</filter>
<linearGradient id="paint0_linear_1_5" x1="72" y1="20" x2="72" y2="140" gradientUnits="userSpaceOnUse">
<stop stop-color="#E6E8EA"/>
<stop offset="1" stop-color="#DDE0E3"/>
</linearGradient>
<linearGradient id="paint1_linear_1_5" x1="72" y1="140" x2="72" y2="20" gradientUnits="userSpaceOnUse">
<stop stop-color="#475569" stop-opacity="0.06"/>
<stop offset="1" stop-color="#475569" stop-opacity="0"/>
</linearGradient>
<linearGradient id="paint2_linear_1_5" x1="76.6628" y1="4.20336" x2="67.3372" y2="110.796" gradientUnits="userSpaceOnUse">
<stop stop-color="#475569" stop-opacity="0.06"/>
<stop offset="1" stop-color="#475569" stop-opacity="0"/>
</linearGradient>
<linearGradient id="paint3_linear_1_5" x1="76.6628" y1="4.20336" x2="67.3372" y2="110.796" gradientUnits="userSpaceOnUse">
<stop offset="0.4486" stop-color="#334155" stop-opacity="0"/>
<stop offset="0.957946" stop-color="#334155"/>
</linearGradient>
<linearGradient id="paint4_linear_1_5" x1="31" y1="140" x2="31" y2="44" gradientUnits="userSpaceOnUse">
<stop offset="0.28125" stop-color="#EEF0F1"/>
<stop offset="0.78125" stop-color="#F9FAFA"/>
</linearGradient>
<linearGradient id="paint5_linear_1_5" x1="113" y1="140" x2="113" y2="44" gradientUnits="userSpaceOnUse">
<stop offset="0.28125" stop-color="#EEF0F1"/>
<stop offset="0.78125" stop-color="#F9FAFA"/>
</linearGradient>
<linearGradient id="paint6_linear_1_5" x1="72" y1="78" x2="72" y2="140" gradientUnits="userSpaceOnUse">
<stop offset="0.322581" stop-color="#FAFAFB"/>
<stop offset="1" stop-color="#EEF0F1"/>
</linearGradient>
<linearGradient id="paint7_linear_1_5" x1="72" y1="63.2243" x2="72" y2="140" gradientUnits="userSpaceOnUse">
<stop stop-color="#F9FAFA"/>
<stop offset="0.693396" stop-color="#EEF0F1"/>
</linearGradient>
<clipPath id="clip0_1_5">
<rect width="144" height="140" fill="white"/>
</clipPath>
</defs>
</svg>

================
File: public/white-icon.svg
================
<svg width="191" height="191" viewBox="0 0 191 191" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M38.125 190.625V152.5H0V38.125H38.125V0H152.5V38.125H190.625V152.5H152.5V190.625H38.125ZM38.125 114.375H76.25V150.975H152.5V76.25H114.375V114.375H76.25V76.25H114.375V39.65H38.125V114.375Z" fill="white"/>
</svg>

================
File: store/draftStates.ts
================
import { atomWithStorage } from "jotai/utils";
import { atom } from "jotai";

export interface DraftType {
  id: string;
  recipient?: string;
  subject?: string;
  message?: string;
}
export const draftsAtom = atomWithStorage<DraftType[]>("emailDrafts", []);
export const draftCountAtom = atom((get) => get(draftsAtom).length);

================
File: types/index.ts
================
export interface User {
  name: string;
  email: string;
  avatar: string;
}

export interface Account {
  name: string;
  logo: React.ComponentType<{ className?: string }>;
  email: string;
}

export interface NavItem {
  title: string;
  url: string;
  icon?: React.ComponentType<{ className?: string }>;
  isActive?: boolean;
  badge?: number;
}

export interface NavSection {
  title: string;
  items: NavItem[];
}

export interface SidebarData {
  user: User;
  accounts: Account[];
  navMain: NavSection[];
}

export interface ParsedMessage {
  id: string;
  threadId?: string;
  connectionId?: string;
  title: string;
  subject: string;
  tags: string[];
  sender: {
    name: string;
    email: string;
  };
  receivedOn: string;
  unread: boolean;
  body: string;
  processedHtml: string;
  blobUrl: string;
  decodedBody?: string;
  references?: string;
  inReplyTo?: string;
  messageId?: string;
  threadId?: string;
}

export interface IConnection {
  id: string;
  email: string;
  name?: string;
  picture?: string;
}

export interface InitialThread {
  id: string;
  threadId?: string;
  title: string;
  tags: string[];
  sender: {
    name: string;
    email: string;
  };
  receivedOn: string;
  unread: boolean;
  subject: string;
  totalReplies: number;
  references?: string;
  inReplyTo?: string;
}

================
File: .env.example
================
NEXT_PUBLIC_APP_URL=http://localhost:3000

DATABASE_URL="postgresql://postgres:postgres@localhost:5432/mail0"

# Change this to a random string, use `openssl rand -hex 32` to generate a 32 character string
BETTER_AUTH_SECRET=my-better-auth-secret 
BETTER_AUTH_URL=http://localhost:3000
BETTER_AUTH_TRUSTED_ORIGINS=http://localhost:3000

# Change to your project's client ID and secret, these work with localhost:3000 and localhost:3001 
GOOGLE_CLIENT_ID=
GOOGLE_CLIENT_SECRET=
GOOGLE_REDIRECT_URI=http://localhost:3000/api/v1/mail/auth/google/callback


GITHUB_CLIENT_ID=
GITHUB_CLIENT_SECRET=
GITHUB_REDIRECT_URI=http://localhost:3000/api/auth/callback/github

# Upstash/Local Redis Instance
REDIS_URL="http://localhost:8079"
REDIS_TOKEN="upstash-local-token"

# Resend API Key
RESEND_API_KEY=

================
File: .gitignore
================
# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
/node_modules
/.pnp
.pnp.*
.yarn/*
!.yarn/patches
!.yarn/plugins
!.yarn/releases
!.yarn/versions

# testing
/coverage

# next.js
/.next/
/out/

# production
/build

# misc
.DS_Store
*.pem

# debug
npm-debug.log*
yarn-debug.log*
yarn-error.log*
.pnpm-debug.log*

# env files (can opt-in for committing if needed)
.env

# vercel
.vercel

# typescript
*.tsbuildinfo
next-env.d.ts

# ide
.idea
.vscode

================
File: .nvmrc
================
v22.13

================
File: .prettierignore
================
pnpm-lock.yaml
node_modules
.next

================
File: .prettierrc
================
{
  "printWidth": 100,
  "useTabs": false,
  "tabWidth": 2,
  "semi": true,
  "singleQuote": false,
  "plugins": ["prettier-plugin-sort-imports", "prettier-plugin-tailwindcss"]
}

================
File: components.json
================
{
  "$schema": "https://ui.shadcn.com/schema.json",
  "style": "default",
  "rsc": true,
  "tsx": true,
  "tailwind": {
    "config": "tailwind.config.ts",
    "css": "app/globals.css",
    "baseColor": "neutral",
    "cssVariables": true,
    "prefix": ""
  },
  "aliases": {
    "components": "@/components",
    "utils": "@/lib/utils",
    "ui": "@/components/ui",
    "lib": "@/lib",
    "hooks": "@/hooks"
  },
  "iconLibrary": "lucide"
}

================
File: docker-compose.yaml
================
services:
  db:
    container_name: mail0-db
    image: postgres:17
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mail0
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - 5432:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data

  valkey:
    container_name: mail0-redis
    image: docker.io/bitnami/valkey:8.0
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - VALKEY_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    ports:
      - 6379:6379
    volumes:
      - valkey-data:/bitnami/valkey/data

  upstash-proxy:
    container_name: mail0-upstash-proxy
    image: hiett/serverless-redis-http:latest
    environment:
      SRH_MODE: env
      SRH_TOKEN: upstash-local-token
      SRH_CONNECTION_STRING: "redis://valkey:6379"
    ports:
      - 8079:80

volumes:
  valkey-data:
  postgres-data:

================
File: drizzle.config.ts
================
import { type Config } from "drizzle-kit";
import { env } from "./lib/env";

export default {
  schema: "./db/schema.ts",
  dialect: "postgresql",
  dbCredentials: {
    url: env.DATABASE_URL!,
  },
  out: "./db/migrations",
  tablesFilter: ["mail0_*"],
} satisfies Config;

================
File: eslint.config.mjs
================
import { FlatCompat } from "@eslint/eslintrc";
import { fileURLToPath } from "url";
import { dirname } from "path";

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

const compat = new FlatCompat({
  baseDirectory: __dirname,
});

const eslintConfig = [
  ...compat.extends("next/core-web-vitals", "next/typescript"),
  ...compat.config({
    extends: ["next"],
    rules: {
      "@typescript-eslint/no-explicit-any": "warn",
    },
  }),
];

export default eslintConfig;

================
File: LICENSE
================
License

0.EMAIL SOFTWARE LICENSE
                    Version 1.0, February 2025

Copyright (c) 2025 0.EMAIL

                           PREAMBLE

This license is designed to ensure that users of the 0.EMAIL software retain their freedom to use, modify, and share the software. When we speak of free software, we refer to freedom, not price.

                      TERMS AND CONDITIONS

0. Definitions.

"This License" refers to version 1.0 of the 0.email Software License.
"The Program" refers to the 0.EMAIL software and any copyrightable work licensed under this License.
"You" refers to the licensee or user of the software.

1. Basic Permissions.

You are granted permission to use, modify, and distribute the 0.email software, provided you comply with the terms of this License.

2. Source Code Access.

If you distribute or make available the 0.email software or modified versions to users interacting with it remotely through a computer network, you must make the corresponding source code available to these users, at no charge, through some standard means of facilitating software copying.

3. Modifications.

You may modify your copy of the 0.email software and distribute the resulting modified work, provided that:
   a) You clearly indicate that you modified the software
   b) Any modified version carries prominent notices stating it is released under this License
   c) You license the entire modified work as a whole under this License

4. No Warranty.

THE 0.EMAIL SOFTWARE IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.

5. Limitation of Liability.

IN NO EVENT WILL THE COPYRIGHT HOLDER BE LIABLE FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM.

6. Accepting License Not Required for Use.

You are not required to accept this License in order to receive or run a copy of the Program. However, nothing else grants you permission to modify or distribute the Program or its derivative works.

7. Automatic Licensing of Recipients.

Each time you redistribute the Program, the recipient automatically receives a license from the original licensor to copy, distribute or modify the Program subject to these terms and conditions.

                  END OF TERMS AND CONDITIONS

To apply this license to your 0.email software, include the following notice at the beginning of each source file:

    0.EMAIL - Open Source Email
    Copyright (C) 2025 0.EMAIL

    This program is free software: you can redistribute it and/or modify
    it under the terms of the 0.email Software License as published
    by 0.EMAIL, version 1.0, or (at your option)
    any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
    0.EMAIL Software License for more details.

================
File: middleware-draft.ts
================
import type { NextRequest } from "next/server";
import { NextResponse } from "next/server";
import { auth } from "@/lib/auth";

export async function middleware(request: NextRequest) {
  const session = await auth.api.getSession({ headers: request.headers });

  // Protect /mail routes
  if (request.nextUrl.pathname.startsWith("/mail")) {
    if (!session) {
      // Redirect to login if not authenticated
      const loginUrl = new URL("/login", request.url);
      return NextResponse.redirect(loginUrl);
    }
  }

  return NextResponse.next();
}

// Configure which routes to run middleware on
export const config = {
  matcher: ["/mail/:path*"],
};

================
File: middleware-eg.ts
================
// import { type NextRequest, NextResponse } from "next/server";
// import { createAuthClient } from "better-auth/client";

// const client = createAuthClient();

// // Public routes that don't require authentication
// const publicRoutes = [
//   "/login",
//   "/signup",
//   "/signup/verify",
//   "/",
//   "/privacy",
//   "/terms",
//   "/api/auth/early-access",
// ];

// export async function middleware(request: NextRequest) {
//   const { pathname } = request.nextUrl;

//   // Check if the current path is a public route
//   const isPublicRoute = publicRoutes.includes(pathname);

//   // For non-public routes, check authentication
//   if (!isPublicRoute) {
//     const { data: session } = await client.getSession({
//       fetchOptions: {
//         headers: {
//           cookie: request.headers.get("cookie") || "",
//         },
//       },
//     });

//     if (!session) {
//       return NextResponse.redirect(new URL("/login", request.url));
//     }
//   }

//   // Handle existing rate limiting for early access
//   if (pathname === "/api/auth/early-access") {
//     const ip = request.headers.get("x-forwarded-for");
//     if (!ip) {
//       return NextResponse.json(
//         {
//           success: false,
//           error: "Could not determine your IP address, please try again later!",
//         },
//         { status: 400 },
//       );
//     }
//   }

//   return NextResponse.next();
// }

// export const config = {
//   matcher: [
//     /*
//      * Match all request paths except for the ones starting with:
//      * - _next/static (static files)
//      * - _next/image (image optimization files)
//      * - favicon.ico (favicon file)
//      * - public files (public folder)
//      * - api routes (except /api/auth/early-access)
//      */
//     "/((?!api|_next/static|_next/image|favicon.ico|sitemap.xml|robots.txt).*)",
//   ],
// };

================
File: next.config.ts
================
import type { NextConfig } from "next";

const nextConfig: NextConfig = {
  images: {
    remotePatterns: [
      { protocol: "https", hostname: "lh3.googleusercontent.com" },
      { protocol: "https", hostname: "mail0.io" },
      { protocol: "https", hostname: "avatars.githubusercontent.com" },
    ],
  },
  typescript: {
    ignoreBuildErrors: true,
  },
  eslint: {
    ignoreDuringBuilds: true,
  },
  async redirects() {
    return [
      {
        source: "/settings",
        destination: "/settings/general",
        permanent: true,
      },
      {
        source: "/mail",
        destination: "/mail/inbox",
        permanent: true,
      },
    ];
  },
};

export default nextConfig;

================
File: package.json
================
{
  "name": "mail",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev --turbopack",
    "build": "next build",
    "start": "next start",
    "lint": "next lint",
    "format": "prettier --write .",
    "check": "pnpm run check:format && pnpm run lint",
    "check:format": "prettier . --check",
    "prepare": "husky",
    "db:generate": "drizzle-kit generate",
    "db:migrate": "drizzle-kit migrate",
    "db:push": "drizzle-kit push",
    "db:studio": "drizzle-kit studio",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:clean": "docker-compose down -v"
  },
  "dependencies": {
    "@hookform/resolvers": "^4.1.0",
    "@radix-ui/react-avatar": "^1.1.3",
    "@radix-ui/react-collapsible": "^1.1.3",
    "@radix-ui/react-dialog": "^1.1.6",
    "@radix-ui/react-dropdown-menu": "^2.1.6",
    "@radix-ui/react-label": "^2.1.2",
    "@radix-ui/react-popover": "^1.1.6",
    "@radix-ui/react-progress": "^1.1.2",
    "@radix-ui/react-radio-group": "^1.2.3",
    "@radix-ui/react-scroll-area": "^1.2.3",
    "@radix-ui/react-select": "^2.1.6",
    "@radix-ui/react-separator": "^1.1.2",
    "@radix-ui/react-slot": "^1.1.2",
    "@radix-ui/react-switch": "^1.1.3",
    "@radix-ui/react-tabs": "^1.1.3",
    "@radix-ui/react-toggle": "^1.1.2",
    "@radix-ui/react-toggle-group": "^1.1.2",
    "@radix-ui/react-tooltip": "^1.1.8",
    "@radix-ui/react-visually-hidden": "^1.1.2",
    "@react-spring/web": "^9.7.5",
    "@t3-oss/env-nextjs": "^0.12.0",
    "@upstash/ratelimit": "^2.0.5",
    "@upstash/redis": "^1.34.4",
    "@vercel/analytics": "^1.5.0",
    "axios": "^1.7.9",
    "better-auth": "^1.1.18",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "cmdk": "1.0.0",
    "color": "^5.0.0",
    "date-fns": "^4.1.0",
    "dexie": "^4.0.11",
    "dexie-react-hooks": "^1.1.7",
    "drizzle-orm": "^0.39.3",
    "googleapis": "^144.0.0",
    "he": "^1.2.0",
    "husky": "^9.1.7",
    "jotai": "^2.12.0",
    "lint-staged": "^15.4.3",
    "lucide-react": "^0.474.0",
    "lz-string": "^1.5.0",
    "mini-svg-data-uri": "^1.4.4",
    "motion": "^12.4.3",
    "next": "15.1.6",
    "next-themes": "^0.4.4",
    "nuqs": "^2.3.2",
    "postgres": "^3.4.5",
    "react": "^19.0.0",
    "react-day-picker": "8.10.1",
    "react-dom": "^19.0.0",
    "react-hook-form": "^7.54.2",
    "react-resizable-panels": "^2.1.7",
    "react-use": "^17.6.0",
    "react-wrap-balancer": "^1.1.1",
    "recharts": "^2.15.1",
    "resend": "^4.1.2",
    "sanitize-html": "^2.14.0",
    "sonner": "^1.7.4",
    "swr": "^2.3.2",
    "tailwind-merge": "^3.0.1",
    "tailwindcss-animate": "^1.0.7",
    "vaul": "^1.1.2",
    "zod": "^3.24.2"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3.2.0",
    "@tailwindcss/typography": "^0.5.16",
    "@types/he": "^1.2.3",
    "@types/node": "^22.13.4",
    "@types/react": "^19.0.8",
    "@types/react-dom": "^19.0.3",
    "@types/sanitize-html": "^2.13.0",
    "drizzle-kit": "^0.30.4",
    "eslint": "^9.20.1",
    "eslint-config-next": "15.1.6",
    "postcss": "^8.5.2",
    "prettier": "^3.5.1",
    "prettier-plugin-sort-imports": "^1.8.6",
    "prettier-plugin-tailwindcss": "^0.6.11",
    "tailwindcss": "^3.4.17",
    "typescript": "^5.7.3"
  },
  "pnpm": {
    "onlyBuiltDependencies": [
      "sharp"
    ]
  },
  "lint-staged": {
    "*": "prettier --write --ignore-unknown"
  },
  "packageManager": "pnpm@10.2.0"
}

================
File: postcss.config.mjs
================
/** @type {import('postcss-load-config').Config} */
const config = {
  plugins: {
    tailwindcss: {},
  },
};

export default config;

================
File: README.md
================
# Mail0.io

[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/clone?repository-url=https%3A%2F%2Fgithub.com%2Fnizzyabi%2FMail0&env=DATABASE_URL,BETTER_AUTH_SECRET,BETTER_AUTH_URL,BETTER_AUTH_TRUSTED_ORIGINS,GOOGLE_CLIENT_ID,GOOGLE_CLIENT_SECRET,GOOGLE_REDIRECT_URI,GITHUB_CLIENT_ID,GITHUB_CLIENT_SECRET,GITHUB_REDIRECT_URI&envDescription=For%20more%20info%20on%20setting%20up%20your%20API%20keys%2C%20checkout%20the%20Readme%20below&envLink=https%3A%2F%2Fgithub.com%2Fnizzyabi%2FMail0%2Fblob%2Fmain%2FREADME.md&project-name=0&repository-name=0&redirect-url=0.email&demo-title=0&demo-description=An%20open%20source%20email%20app&demo-url=0.email)

An Open-Source Gmail Alternative for the Future of Email

## Table of Contents <!-- omit from toc -->

- [What is Mail0.io?](#what-is-mail0io)
- [Why Mail0.io?](#why-mail0io)
- [Our Mission](#our-mission)
- [Documentation](#documentation)
- [Roadmap 🛤️](#roadmap-️)
  - [1. Core Email Connectivity](#1-core-email-connectivity)
  - [2. Email Usage Improvements](#2-email-usage-improvements)
  - [3. Infrastructure](#3-infrastructure)
- [Development Priorities](#development-priorities)
- [Join the Movement 🚀](#join-the-movement-)
  - [Stay Tuned](#stay-tuned)
- [Tech Stack](#tech-stack)
- [Getting Started](#getting-started)
  - [Prerequisites](#prerequisites)
  - [Environment Variables](#environment-variables)
  - [Running Locally](#running-locally)
- [Contribute](#contribute)
- [Issues](#issues)
  - [Create a new issue](#create-a-new-issue)
  - [Solve an issue](#solve-an-issue)
- [Pull Request](#pull-request)
- [License](#license)

## What is Mail0.io?

Mail0.io is an open-source email solution that gives users the power to **self-host** their own email app while also integrating external services like Gmail and other email providers. Our goal is to put **control, privacy, and customization** back into the hands of users—whether they choose to host their email independently or manage multiple inboxes from a single, customizable platform.

## Why Mail0.io?

Most email services today are either **closed-source**, **data-hungry**, or **too complex to self-host**. Mail0.io is different:

✅ **Fully Open-Source** – No hidden agendas, no walled gardens. 100% transparency.
🔒 **Data Privacy First** – Your emails, your data. No tracking, no selling, no middlemen.
⚙️ **Self-Hosting Freedom** – Run your own email app with ease.
📬 **Unified Inbox** – Connect multiple email providers like Gmail, Outlook, and more.
🎨 **Customizable UI & Features** – Tailor your email experience the way you want it.
🚀 **Developer-Friendly** – Built with extensibility and integrations in mind.

## Our Mission

We believe email should be:

1. **Yours** – You control where your data is stored.
2. **Flexible** – Use it however you want—self-hosted or connected to third-party providers.
3. **Open** – Transparent development, open collaboration, and community-driven innovation.
4. **User-Friendly** – No need for technical expertise to get started.

## Documentation

- [License](LICENSE) - Project license and terms
- [Roadmap](ROADMAP.md) - Development plans and future features

## Roadmap 🛤️

This document outlines the development roadmap for Mail0.io. Our vision is to create a powerful, user-friendly, and privacy-focused email experience.

### 1. Core Email Connectivity

- Connect main email providers
- Support for multiple email accounts
- Unified inbox experience

### 2. Email Usage Improvements

- AI-powered email assistance
- Advanced drag-and-drop tools
- Customizable keyboard shortcuts
- Performance optimization
- Enhanced search capabilities
- Deep customization options

### 3. Infrastructure

- Domain management
- Optimized email client
- Self-hosting support

## Development Priorities

1. Building a robust foundation for email management
2. Implementing user-requested features
3. Ensuring seamless integration with existing email providers
4. Maintaining high performance and reliability

We welcome community input and contributions to help shape these features and priorities. If you have suggestions or would like to contribute, please:

1. Open an issue to discuss new feature ideas
2. Submit pull requests for improvements
3. Join discussions in existing issues

This roadmap is a living document and will be updated as development progresses and priorities evolve based on community feedback and technological advances.

## Join the Movement 🚀

Mail0.io is not just another email app—it's a **vision** for a better, more open, and user-controlled email ecosystem. If you believe in **privacy**, **open-source software**, and **giving users control**, we'd love for you to join us!

📢 **Follow our progress** – Stay updated on GitHub as we build Mail0.io.
💡 **Contribute** – Share your ideas, suggest features, and help shape the project.
🤝 **Community-driven** – Our goal is to create an email solution **for the people, by the people**.

### Stay Tuned

We're just getting started. If you're excited about a future where **email belongs to users, not corporations**, let's make it happen together.

---

🤍 **Mail0.io – Email, Reimagined.**

## Tech Stack

Mail0.io is built with modern and reliable technologies:

- **Frontend**: Next.js, React, TypeScript, TailwindCSS, Shadcn UI
- **Backend**: Node.js, Drizzle ORM
- **Database**: PostgreSQL
- **Authentication**: Better Auth, Google OAuth
<!-- - **Testing**: Jest, React Testing Library -->

## Getting Started

### Prerequisites

**Required Versions:**

- Node.js >= 18.0.0
- pnpm >= 8.0.0
- Docker >= 20.10.0

Before running the application, you'll need to set up several services and environment variables:

1. **Setup Local Services with Dev Container and Docker**

   - Make sure you have [Docker](https://docs.docker.com/get-docker/), [NodeJS](https://nodejs.org/en/download/), and [pnpm](https://pnpm.io/installation) installed.
   - Open codebase as a container in [VSCode](https://code.visualstudio.com/) or your favorite VSCode fork.
   - Run the following commands in order to populate your dependencies and setup docker

     ```
     pnpm install
     pnpm docker:up
     ```

   - Run the following commands to clean up after yourself

     ```
     pnpm docker:down
     rm -rf node_modules
     rm pnpm-lock.yaml
     ```

   - Run the following commands if you are unable to start any of the services

     ```
     rm -rf node_modules
     rm pnpm-lock.yaml
     ```

2. **Better Auth Setup**

   - Open the `.env` file and change the BETTER_AUTH_SECRET to a random string. (Use `openssl rand -hex 32` to generate a 32 character string)

     ```env
     BETTER_AUTH_SECRET=your_secret_key
     ```

3. **Google OAuth Setup**

   - Go to [Google Cloud Console](https://console.cloud.google.com)
   - Create a new project
   - Add the following APIs in your Google Cloud Project: [People API](https://console.cloud.google.com/apis/library/people.googleapis.com), [Gmail API](https://console.cloud.google.com/apis/library/gmail.googleapis.com)
     - Use the links above and click 'Enable' or
     - Go to 'APIs and Services' > 'Enable APIs and Services' > Search for 'Google People API' and click 'Enable'
     - Go to 'APIs and Services' > 'Enable APIs and Services' > Search for 'Gmail API' and click 'Enable'
   - Enable the Google OAuth2 API
   - Create OAuth 2.0 credentials (Web application type)
   - Add authorized redirect URIs:
     - Development:
       - `http://localhost:3000/api/auth/callback/google`
       - `http://localhost:3000/api/v1/mail/auth/google/callback`
     - Production:
       - `https://your-production-url/api/auth/callback/google`
       - `https://your-production-url/api/v1/mail/auth/google/callback`
   - Add to `.env`:

     ```env
     GOOGLE_CLIENT_ID=your_client_id
     GOOGLE_CLIENT_SECRET=your_client_secret
     GOOGLE_REDIRECT_URI=http://localhost:3000/api/v1/mail/auth/google/callback
     ```

   - Add yourself as a test user:

     - Go to [`Audience`](https://console.cloud.google.com/auth/audience)
     - Under 'Test users' click 'Add Users'
     - Add your email and click 'Save'

> [!WARNING]
> The `GOOGLE_REDIRECT_URI` must match **exactly** what you configure in the Google Cloud Console, including the protocol (http/https), domain, and path - these are provided above.

4. **GitHub OAuth Setup**

   - Go to [GitHub Developer Setting](https://github.com/settings/developers)
   - Create a new OAuth App
   - Add authorized redirect URIs:

     - Development:
       - `http://localhost:3000/api/auth/callback/github`
     - Production:
       - `https://your-production-url/api/auth/callback/github`

   - Add to `.env`:

     ```env
     GITHUB_CLIENT_ID=your_client_id
     GITHUB_CLIENT_SECRET=your_client_secret
     ```

### Environment Variables

Copy `.env.example` to `.env` and configure the following variables:

```env
# Auth
BETTER_AUTH_SECRET=     # Required: Secret key for authentication

# Google OAuth (Optional)
GOOGLE_CLIENT_ID=       # Required for Gmail integration
GOOGLE_CLIENT_SECRET=   # Required for Gmail integration
GOOGLE_REDIRECT_URI=    # Required for Gmail integration

# Database
DATABASE_URL=          # Required: PostgreSQL connection string
```

### Update the PostgreSQL database accordingly

Drizzle will apply the schema migrations set in `.env`

```bash
pnpm db:push
```

- Use `pnpm db:studio` to view and manage your data

### Running Locally

Run the development server:

```bash
pnpm dev
```

Open [http://localhost:3000](http://localhost:3000) with your browser to see the result.

## Contribute

1. You can fork the repository and make changes to your forked repository. Once you have made your changes, you can create a pull request to the main branch.
2. To add code to the main branch, make a [pull request](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/creating-a-pull-request). **Your code will always be reviewed by a maintainer, not yourself!**

## Issues

### Create a new issue

If you spot a problem with the docs, [search if an issue already exists](https://docs.github.com/en/github/searching-for-information-on-github/searching-on-github/searching-issues-and-pull-requests#search-by-the-title-body-or-comments). If a related issue doesn't exist, you can open a new issue using a relevant [issue form](https://github.com/nizzyabi/Mail0/issues/new?template=Blank+issue).

### Solve an issue

Scan through our [existing issues](https://github.com/nizzyabi/Mail0/issues) to find one that interests you. You can narrow down the search using `labels` as filters. For more information, see "[Label reference](https://docs.github.com/en/contributing/collaborating-on-github-docs/label-reference)". As a general rule, we don't assign issues to anyone. If you find an issue to work on, you are welcome to open a PR with a fix.

## Pull Request

When you're finished with the changes, create a pull request, also known as a PR.

- Fill the "Ready for review" template so that we can review your PR. This template helps reviewers understand your changes as well as the purpose of your pull request.
- Don't forget to [link PR to issue](https://docs.github.com/en/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue) if you are solving one.
- Enable the checkbox to [allow maintainer edits](https://docs.github.com/en/github/collaborating-with-issues-and-pull-requests/allowing-changes-to-a-pull-request-branch-created-from-a-fork) so the branch can be updated for a merge.
  Once you submit your PR, a reviewer will review your proposal. We may ask questions or request additional information.
- We may ask for changes to be made before a PR can be merged, either using [suggested changes](https://docs.github.com/en/github/collaborating-with-issues-and-pull-requests/incorporating-feedback-in-your-pull-request) or pull request comments. You can apply suggested changes directly through the UI. You can make any other changes in your fork and then commit them to your branch.
- As you update your PR and apply changes, mark each conversation as [resolved](https://docs.github.com/en/github/collaborating-with-issues-and-pull-requests/commenting-on-a-pull-request#resolving-conversations).
- If you run into any merge issues, check out this [git tutorial](https://github.com/skills/resolve-merge-conflicts) to help you resolve merge conflicts and other issues.

## License

Mail0.io is licensed under the MIT License. This means you can:

✅ Use the software commercially
✅ Modify the source code
✅ Distribute your modifications
✅ Use and modify the software privately

The only requirement is that you include the original copyright and license notice in any copy of the software/source.

See the [LICENSE](LICENSE) file for the full license text.

================
File: ROADMAP.md
================
# Mail0.io Roadmap 🛤️

This document outlines the development roadmap for Mail0.io. Our vision is to create a powerful, user-friendly, and privacy-focused email experience.

## Current Development Focus

### 1. Core Email Connectivity

- Connect main email providers
- Support for multiple email accounts
- Unified inbox experience

### 2. Email Usage Improvements

- AI-powered email assistance
- Advanced drag-and-drop tools
- Customizable keyboard shortcuts
- Performance optimization
- Enhanced search capabilities
- Deep customization options

### 3. Infrastructure

- Domain management
- Optimized email client
- Self-hosting capabilities

## Development Priorities

1. Building a robust foundation for email management
2. Implementing user-requested features
3. Ensuring seamless integration with existing email providers
4. Maintaining high performance and reliability

## Contributing

We welcome community input and contributions to help shape these features and priorities. If you have suggestions or would like to contribute, please:

1. Open an issue to discuss new feature ideas
2. Submit pull requests for improvements
3. Join discussions in existing issues

## Timeline

This roadmap is a living document and will be updated as development progresses and priorities evolve based on community feedback and technological advances.

---

Last updated: Feb 2025

================
File: tailwind.config.ts
================
const defaultTheme = require("tailwindcss/defaultTheme");
import type { Config } from "tailwindcss";

const svgToDataUri = require("mini-svg-data-uri");

const { default: flattenColorPalette } = require("tailwindcss/lib/util/flattenColorPalette");
const colors = require("tailwindcss/colors");

export default {
  darkMode: ["class"],
  content: [
    "./pages/**/*.{js,ts,jsx,tsx,mdx}",
    "./components/**/*.{js,ts,jsx,tsx,mdx}",
    "./app/**/*.{js,ts,jsx,tsx,mdx}",
  ],
  theme: {
    extend: {
      colors: {
        background: "hsl(var(--background))",
        foreground: "hsl(var(--foreground))",
        card: {
          DEFAULT: "hsl(var(--card))",
          foreground: "hsl(var(--card-foreground))",
        },
        popover: {
          DEFAULT: "hsl(var(--popover))",
          foreground: "hsl(var(--popover-foreground))",
        },
        primary: {
          DEFAULT: "hsl(var(--primary))",
          foreground: "hsl(var(--primary-foreground))",
        },
        secondary: {
          DEFAULT: "hsl(var(--secondary))",
          foreground: "hsl(var(--secondary-foreground))",
        },
        muted: {
          DEFAULT: "hsl(var(--muted))",
          foreground: "hsl(var(--muted-foreground))",
        },
        accent: {
          DEFAULT: "hsl(var(--accent))",
          foreground: "hsl(var(--accent-foreground))",
        },
        destructive: {
          DEFAULT: "hsl(var(--destructive))",
          foreground: "hsl(var(--destructive-foreground))",
        },
        border: "hsl(var(--border))",
        input: "hsl(var(--input))",
        ring: "hsl(var(--ring))",
        chart: {
          "1": "hsl(var(--chart-1))",
          "2": "hsl(var(--chart-2))",
          "3": "hsl(var(--chart-3))",
          "4": "hsl(var(--chart-4))",
          "5": "hsl(var(--chart-5))",
        },
        sidebar: {
          DEFAULT: "hsl(var(--sidebar-background))",
          foreground: "hsl(var(--sidebar-foreground))",
          primary: "hsl(var(--sidebar-primary))",
          "primary-foreground": "hsl(var(--sidebar-primary-foreground))",
          accent: "hsl(var(--sidebar-accent))",
          "accent-foreground": "hsl(var(--sidebar-accent-foreground))",
          border: "hsl(var(--sidebar-border))",
          ring: "hsl(var(--sidebar-ring))",
        },
      },
      borderRadius: {
        lg: "var(--radius)",
        md: "calc(var(--radius) - 2px)",
        sm: "calc(var(--radius) - 4px)",
      },
      fontFamily: {
        sans: ["Geist", ...defaultTheme.fontFamily.sans],
        mono: ["Geist_Mono", ...defaultTheme.fontFamily.mono],
      },
      keyframes: {
        "fade-up": {
          "0%": {
            transform: "translateY(10px)",
          },
          "100%": {
            transform: "translateY(0)",
          },
        },
        moveUp: {
          "0%": {
            transform: "translateY(90px)",
            opacity: "0",
          },
          "100%": {
            transform: "translateY(0)",
            opacity: "1",
          },
        },
        fadeIn: {
          "0%": {
            opacity: "0",
          },
          "100%": {
            opacity: "1",
          },
        },
      },
      animation: {
        "fade-up": "fade-up 0.4s cubic-bezier(0.16, 1, 0.3, 1) forwards",
        "move-up": "moveUp 3s cubic-bezier(0.16, 1, 0.3, 1) forwards",
        "fade-in": "fadeIn 3s cubic-bezier(0.16, 1, 0.3, 1) forwards",
      },
    },
  },
  plugins: [
    require("tailwindcss-animate"),
    addVariablesForColors,
    function ({ matchUtilities, theme }: any) {
      matchUtilities(
        {
          "bg-grid": (value: any) => ({
            backgroundImage: `url("${svgToDataUri(
              `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" width="32" height="32" fill="none" stroke="${value}"><path d="M0 .5H31.5V32"/></svg>`,
            )}")`,
          }),
          "bg-grid-small": (value: any) => ({
            backgroundImage: `url("${svgToDataUri(
              `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" width="12" height="12" fill="none" stroke="${value}"><path d="M0 .5H31.5V32"/></svg>`,
            )}")`,
          }),
        },
        { values: flattenColorPalette(theme("backgroundColor")), type: "color" },
      );
    },
  ],
} satisfies Config;

function addVariablesForColors({ addBase, theme }: any) {
  let allColors = flattenColorPalette(theme("colors"));
  let newVars = Object.fromEntries(
    Object.entries(allColors).map(([key, val]) => [`--${key}`, val]),
  );

  addBase({
    ":root": newVars,
  });
}

================
File: tsconfig.json
================
{
  "compilerOptions": {
    "target": "ESNext",
    "lib": ["dom", "dom.iterable", "esnext"],
    "allowJs": true,
    "skipLibCheck": true,
    "strict": true,
    "noEmit": true,
    "esModuleInterop": true,
    "module": "esnext",
    "moduleResolution": "bundler",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve",
    "incremental": true,
    "plugins": [
      {
        "name": "next"
      }
    ],
    "paths": {
      "@/*": ["./*"]
    }
  },
  "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx", ".next/types/**/*.ts"],
  "exclude": ["node_modules"]
}



================================================================
End of Codebase
================================================================
